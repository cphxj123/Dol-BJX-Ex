:: Location Widgets [widget]

<<widget "init_locations">>
	/*
		parent: the location this location is in. values are inherited from here
		area: marker for locations that represent large areas with many locations inside. you don't usually want to set the pc
			  location to them. use a more specialised location instead.
		bus: marker for sub-areas within the town
		outside: if the location is outside or indoors
		tanning: factor applied to tanning. only used for outside locations
		location: locations that should show up in C.location, don't set this on e.g. indoor variants or single rooms. you can get
				  those with C.sublocation if you need them
	*/
	<<script>>
		setup.addlocation = function(location) {
			setup.locations[location] = { name: location, parent: "world" };
			return {
				data: setup.locations[location],
				parent: function(parent) {
					this.data.parent = parent;
					return this;
				},
				area: function() {
					this.data.area = true;
					return this;
				},
				bus: function() {
					this.data.bus = true;
					return this;
				},
				outside: function() {
					this.data.outside = 1;
					return this;
				},
				inside: function() {
					this.data.outside = 0;
					return this;
				},
				tanning: function(tanning) {
					this.data.tanning = tanning;
					return this;
				},
				descr: function(descr) {
					this.data.descr = descr;
					return this;
				},
				location: function(name = undefined) {
					this.data.location = true;
					this.data.location_name = name; /* override for weird inheritance, e.g. drains */
					return this;
				},
				build: function() {
					if (this.data.descr === undefined) {
						this.data.descr = this.data.name.replace(/_/, " ").replace(/(^|\s)\S/g, function(t) { return t.toUpperCase() });
					}

					let parent = this.data.name;
					while (parent !== undefined) {
						if (this.data.area_name === undefined && setup.locations[parent].area) {
							this.data.area_name = setup.locations[parent].name;
						}
						if (this.data.location_name === undefined && setup.locations[parent].location) {
							this.data.location_name = setup.locations[parent].name;
						}
						if (this.data.bus_name === undefined && setup.locations[parent].bus) {
							this.data.bus_name = setup.locations[parent].name;
						}
						if (this.data.outside === undefined && setup.locations[parent].outside !== undefined) {
							this.data.outside = setup.locations[parent].outside;
						}
						if (this.data.tanning === undefined && setup.locations[parent].tanning !== undefined) {
							this.data.tanning = setup.locations[parent].tanning;
						}
						parent = setup.locations[parent].parent;
					}
					if (!this.data.outside) {
						this.data.tanning = 0;
					}
				}
			 };
		};
		setup.locations = {
			world: {
				parent: undefined,
				area: true,
				location: true,
				bus: false,
				outside: 1,
				tanning: 1.0
			}
		};

		setup.addlocation( "town"                     ).parent("world").area().location().tanning(0.5).build();

		setup.addlocation( "alley"                    ).parent("town").location().build();
		setup.addlocation( "beach"                    ).parent("town").location().tanning(1.1).build();
		setup.addlocation( "changingroom"             ).parent("beach").inside().build();
		setup.addlocation( "seabeach"                 ).parent("beach").bus().tanning(1.0).build();
		setup.addlocation( "drain"                    ).parent("town").location().inside().build();
		setup.addlocation( "sewers"                   ).parent("drain").location().build();
		setup.addlocation( "underground"              ).parent("town").location().inside().build(); /* both underground brothel and various caves */
		setup.addlocation( "promenade"                ).parent("town").location().build();

		setup.addlocation( "residential"              ).parent("town").bus().build();
		setup.addlocation( "domus"                    ).parent("residential").bus().build();
		setup.addlocation( "home"                     ).parent("domus").location().inside().build();
		setup.addlocation( "backyard"                 ).parent("home").outside().build();
		setup.addlocation( "garden"                   ).parent("home").outside().build();
		setup.addlocation( "barb"                     ).parent("residential").bus().build();
		setup.addlocation( "dance_studio"             ).parent("barb").location().inside().build();
		setup.addlocation( "police_station"           ).parent("barb").location().inside().build();
		setup.addlocation( "flats"         		      ).parent("barb").location().inside().build();
		setup.addlocation( "canal"         		      ).parent("barb").location().inside().build();
		setup.addlocation( "mines"        		      ).parent("flats").location().inside().build();
		setup.addlocation( "danube"                   ).parent("residential").bus().build();
		setup.addlocation( "spa"                      ).parent("danube").location().inside().build();
		setup.addlocation( "kylarmanor"               ).parent("danube").location("kylar_manor").bus().inside().build();
		setup.addlocation( "kylarmanor_outside"       ).parent("kylarmanor").location("kylar_manor").bus().outside().build();
		setup.addlocation( "wolf"                     ).parent("residential").bus().build();
		setup.addlocation( "temple"                   ).parent("danube").location().inside().build();
		setup.addlocation( "residential_alley"        ).parent("residential").location("alley").build();
		setup.addlocation( "residential_drain"        ).parent("residential").location("drain").inside().build();

		setup.addlocation( "commercial"               ).parent("town").bus().location().build();
		setup.addlocation( "connudatus"               ).parent("town").bus().build();
		setup.addlocation( "strip_club"               ).parent("connudatus").location().inside().build();
		setup.addlocation( "cliff"                    ).parent("town").bus().build();
		setup.addlocation( "cafe"                     ).parent("cliff").location().inside().build();
		setup.addlocation( "cafe_outside"             ).parent("cafe").outside().build(); /* outside seating */
		setup.addlocation( "high"                     ).parent("town").bus().build();
		setup.addlocation( "shopping_centre"          ).parent("high").location().inside().build();
		setup.addlocation( "shopping_centre_roof"     ).parent("shopping_centre").location().inside().build();
		setup.addlocation( "office_building"          ).parent("high").location().inside().build();
		setup.addlocation( "starfish"                 ).parent("town").bus().build();
		setup.addlocation( "arcade"                   ).parent("starfish").location().inside().build();
		setup.addlocation( "nightingale"              ).parent("town").bus().build();
		setup.addlocation( "hospital"                 ).parent("nightingale").location().inside().build();
		setup.addlocation( "park"                     ).parent("town").location().tanning(0.75).build();
		setup.addlocation( "parkmens"                 ).parent("park").inside().bus().descr("Men's Room").build();
		setup.addlocation( "parkwomens"               ).parent("park").inside().bus().descr("Women's Room").build();
		setup.addlocation( "chocolate_stand"          ).parent("park").inside().build();
		setup.addlocation( "parkcafe"                 ).parent("park").inside().build();
		setup.addlocation( "parktree"                 ).parent("park").inside().descr("Park").build();
		setup.addlocation( "oxford"                   ).parent("town").bus().build();
		setup.addlocation( "school"                   ).parent("oxford").location().inside().build();
		setup.addlocation( "schoolgrounds"            ).parent("school").outside().build();
		setup.addlocation( "pool"                     ).parent("school").location().build();
		setup.addlocation( "museum"                   ).parent("oxford").location().inside().build();
		setup.addlocation( "commercial_alley"         ).parent("commercial").location("alley").build();
		setup.addlocation( "commercial_drain"         ).parent("commercial").location("drain").inside().build();
		setup.addlocation( "pound"                    ).parent("starfish").location().inside().build();

		setup.addlocation( "industrial"               ).parent("town").bus().location().build();
		setup.addlocation( "mer"                      ).parent("industrial").bus().build();
		setup.addlocation( "docks"                    ).parent("mer").location().outside().build();
		setup.addlocation( "docks_building"           ).parent("docks").inside().build();
		setup.addlocation( "elk"                      ).parent("industrial").bus().build();
		setup.addlocation( "compound"                 ).parent("elk").location().build();
		setup.addlocation( "compound_building"        ).parent("compound").location().inside().build();
		setup.addlocation( "landfill"                 ).parent("elk").location().build();
		setup.addlocation( "night_monster_lair"       ).parent("elk").location().inside().build();
		setup.addlocation( "harvest"                  ).parent("industrial").bus().build();
		setup.addlocation( "brothel"                  ).parent("harvest").location().inside().build();
		setup.addlocation( "pub"                      ).parent("harvest").location().inside().build();
		setup.addlocation( "industrial_alley"         ).parent("industrial").location("alley").build();
		setup.addlocation( "industrial_drain"         ).parent("industrial").location("drain").inside().build();

		setup.addlocation( "forest"                   ).parent("world").area().location().tanning(0.1).build();
		setup.addlocation( "churchyard"               ).parent("forest").location().outside().tanning(0.1).build();
		setup.addlocation( "sepulchre"                ).parent("churchyard").location().inside().build();
		setup.addlocation( "wolf_cave"                ).parent("forest").location().inside().build();
		setup.addlocation( "wolf_cave_yard"           ).parent("wolf_cave").outside().tanning(0.5).build();
		setup.addlocation( "asylum"                   ).parent("forest").location().inside().build();
		setup.addlocation( "asylum_yard"              ).parent("asylum").outside().tanning(0.5).build();
		setup.addlocation( "cabin"                    ).parent("forest").location().inside().build();
		setup.addlocation( "lake"                     ).parent("forest").location().tanning(1.0).build();
		/* 北极星模组 */
		setup.addlocation( "lakehouse"                ).parent("forest").location().inside().build();
		/* 北极星 */
		setup.addlocation( "lake_ruin"                ).parent("lake").location().inside().build();
		setup.addlocation( "farmroad3"                ).parent("forest").bus().tanning(1.0).build();
		/* 北极星模组 */
		setup.addlocation( "hive"                    ).parent("forest").location().inside().build();
		setup.addlocation( "bog"                    ).parent("forest").location().inside().build();
		/* 北极星 */

		setup.addlocation( "plains"                   ).parent("world").area().build();
		setup.addlocation( "farm"                     ).parent("plains").location().build(); /* underground farm */
		setup.addlocation( "estate"                   ).parent("farm").location().build();
		setup.addlocation( "alex_farm"                ).parent("plains").location().build();
		setup.addlocation( "alex_cottage"             ).parent("alex_farm").location().inside().build();
		setup.addlocation( "alex_stables"             ).parent("alex_farm").inside().build();
		setup.addlocation( "riding_school"            ).parent("plains").location().build();
		setup.addlocation( "moor"                     ).parent("plains").location().build();
		setup.addlocation( "castle"                   ).parent("moor").location().build();
		setup.addlocation( "tower"                    ).parent("castle").location().build();
        /* 北极星模组 */
        setup.addlocation( "old_cemetery"             ).parent("plains").location().outside().build();
        /* 北极星 */

		setup.addlocation( "sea"                      ).parent("world").area().location().bus().build();
		setup.addlocation( "searocks"                 ).parent("sea").bus().build();
		setup.addlocation( "seadocks"                 ).parent("sea").bus().build();
		setup.addlocation( "seacliffs"                ).parent("sea").bus().build();
		setup.addlocation( "seapirates"               ).parent("sea").location().inside().build();
		setup.addlocation( "coastpath"                ).parent("sea").build();
		setup.addlocation( "prison"                   ).parent("sea").location().inside().build();
		setup.addlocation( "island"                   ).parent("sea").location().build();
        /* 北极星模组 */
        setup.addlocation( "seadive"                   ).parent("sea").location().inside().build();
		/* 北极星 */
		
		/* 北极星模组 */
		setup.addlocation("island"                       ).parent("world").area().location().build();
		setup.addlocation( "desert"                     ).parent("island").location().build();
		setup.addlocation( "snowforest"                     ).parent("island").location().build();
		setup.addlocation( "glacier"                     ).parent("island").location().build();
		/* 北极星 */
		
		setup.addlocation( "tentworld"                ).parent("world").area().location().tanning(0).inside().build(); /* TODO: remove inside() when consuming code has been adapted */

	<</script>>
<</widget>>

<!-- This shall replace all "set $location/$outside/$bus" when this system is fully implemented -->

<<widget "location">>
	<<set _location to _args[0]>>
	<<if ndef setup.locations[_location]>>
		<<set $locationerror to _location>> /* unused */
	<<else>>
		<<set $sublocation to _location>>

		<<set $area to CU.area>>
		<<set $location to CU.location>>
		<<if def CU.bus>>
			<<set $bus to CU.bus>>
		<</if>>
		<<set $outside to CU.outside>>
	<</if>>
<</widget>>

<!-- Do NOT use these computes until all "set $location"s have been eliminated! -->

<<compute "area">>
	setup.locations[$sublocation].area_name
<</compute>>

<<compute "location">>
	setup.locations[$sublocation].location_name
<</compute>>

<<compute "sublocation">>
	setup.locations[$sublocation].name
<</compute>>

<<compute "bus">>
	setup.locations[$sublocation].bus_name
<</compute>>

<<compute "outside">>
	setup.locations[$sublocation].outside
<</compute>>

<<compute "tanning">>
	setup.locations[$sublocation].tanning
<</compute>>

<<compute "location_pretty_name">>
	setup.locations[$sublocation].descr
<</compute>>

:: Widgets [widget]

<<widget "toggledebug">>
	<<if $debug>>
		<<set $debug to 1>>
	<<else>>
		<<set $debug to 0>>
	<</if>>
<</widget>>

<<widget "statbar">>
	<div @class="(_args[2] is true ? 'rightMeter' : 'meter')">
		<<if _args[0] is 0>>
		<<else>>
			<<set _percent=Math.floor((_args[0]/_args[1])*100)>>
			<<switch Math.floor(_percent/10)>>
				<<case 8 9>><<set _statColor to "pinkbar">>
				<<case 6 7>><<set _statColor to "purplebar">>
				<<case 4 5>><<set _statColor to "bluebar">>
				<<case 2 3>><<set _statColor to "lbluebar">>
				<<case 0 1>><<set _statColor to "tealbar">>
				<<default>><<set _statColor to "redbar">>
			<</switch>>
			<div @class="_statColor" @style="'width:' + _percent + '%'"></div>
		<</if>>
	</div>
<</widget>>

<<widget "statbarinverted">>
	<<set _now to _args[0]>><<set _max to _args[1]>>
	<div @class="(_args[2] is true ? 'rightMeter' : 'meter')">
		<<if _args[0] is 0>>
		<<else>>
			<<set _percent=Math.floor((_args[0]/_args[1])*100)>>
			<<switch Math.floor(_percent/10)>>
				<<case 8 9>><<set _statColor to "tealbar">>
				<<case 6 7>><<set _statColor to "lbluebar">>
				<<case 4 5>><<set _statColor to "bluebar">>
				<<case 2 3>><<set _statColor to "purplebar">>
				<<case 0 1>><<set _statColor to "pinkbar">>
				<<default>><<set _statColor to "greenbar">>
			<</switch>>
			<div @class="_statColor" @style="'width:' + _percent + '%'"></div>
		<</if>>
	</div>
<</widget>>

<<widget "wateraction">>
	<<if currentSkillValue('swimmingskill') lt 100>>
		<<pass 18 sec>>
		<<set $oxygen -= 180>>
		<<if $lake_ice_broken gte 1>>
			<<if random(1, 120) lte 18>>
				<<unset $lake_ice_broken>>
			<</if>>
		<</if>>
	<<elseif currentSkillValue('swimmingskill') lt 200>>
		<<pass 15 sec>>
		<<set $oxygen -= 150>>
		<<if $lake_ice_broken gte 1>>
			<<if random(1, 120) lte 15>>
				<<unset $lake_ice_broken>>
			<</if>>
		<</if>>
	<<elseif currentSkillValue('swimmingskill') lt 300>>
		<<pass 12 sec>>
		<<set $oxygen -= 120>>
		<<if $lake_ice_broken gte 1>>
			<<if random(1, 120) lte 12>>
				<<unset $lake_ice_broken>>
			<</if>>
		<</if>>
	<<elseif currentSkillValue('swimmingskill') lt 400>>
		<<pass 10 sec>>
		<<set $oxygen -= 100>>
		<<if $lake_ice_broken gte 1>>
			<<if random(1, 120) lte 10>>
				<<unset $lake_ice_broken>>
			<</if>>
		<</if>>
	<<elseif currentSkillValue('swimmingskill') lt 500>>
		<<pass 8 sec>>
		<<set $oxygen -= 80>>
		<<if $lake_ice_broken gte 1>>
			<<if random(1, 120) lte 8>>
				<<unset $lake_ice_broken>>
			<</if>>
		<</if>>
	<<elseif currentSkillValue('swimmingskill') lt 600>>
		<<pass 8 sec>>
		<<set $oxygen -= 80>>
		<<if $lake_ice_broken gte 1>>
			<<if random(1, 120) lte 8>>
				<<unset $lake_ice_broken>>
			<</if>>
		<</if>>
	<<elseif currentSkillValue('swimmingskill') lt 700>>
		<<pass 7 sec>>
		<<set $oxygen -= 70>>
		<<if $lake_ice_broken gte 1>>
			<<if random(1, 120) lte 7>>
				<<unset $lake_ice_broken>>
			<</if>>
		<</if>>
	<<elseif currentSkillValue('swimmingskill') lt 800>>
		<<pass 7 sec>>
		<<set $oxygen -= 70>>
		<<if $lake_ice_broken gte 1>>
			<<if random(1, 120) lte 7>>
				<<unset $lake_ice_broken>>
			<</if>>
		<</if>>
	<<elseif currentSkillValue('swimmingskill') lt 900>>
		<<pass 6 sec>>
		<<set $oxygen -= 60>>
		<<if $lake_ice_broken gte 1>>
			<<if random(1, 120) lte 6>>
				<<unset $lake_ice_broken>>
			<</if>>
		<</if>>
	<<elseif currentSkillValue('swimmingskill') lt 1000>>
		<<pass 6 sec>>
		<<set $oxygen -= 60>>
		<<if $lake_ice_broken gte 1>>
			<<if random(1, 120) lte 6>>
				<<unset $lake_ice_broken>>
			<</if>>
		<</if>>
	<<elseif currentSkillValue('swimmingskill') lt 1100>>
		<<pass 5 sec>>
		<<set $oxygen -= 50>>
		<<if $lake_ice_broken gte 1>>
			<<if random(1, 120) lte 5>>
				<<unset $lake_ice_broken>>
			<</if>>
		<</if>>
	<<elseif currentSkillValue('swimmingskill') lt 1200>>
		<<pass 4 sec>>
		<<set $oxygen -= 40>>
		<<if $lake_ice_broken gte 1>>
			<<if random(1, 120) lte 4>>
				<<unset $lake_ice_broken>>
			<</if>>
		<</if>>
	<<else>>
		<<pass 3 sec>>
		<<set $oxygen -= 30>>
		<<if $lake_ice_broken gte 1>>
			<<if random(1, 120) lte 3>>
				<<unset $lake_ice_broken>>
			<</if>>
		<</if>>
	<</if>>
<</widget>>

<<widget "underwater">>
	<<water>><<set $underwater to 1>><<set $underwatercheck to 1>>
	/* 北极星模组 */
	<<if $combat isnot 1>>
	    <<if $underwaterintro isnot 1 and $combat isnot 1 and !$possessed>>
			<br>
			<<set $underwaterintro to 1>>
			<i>你的游泳技能越高，每次行动经过的时间就越短，消耗的氧气也会更少。</i>
			<br>
		<</if>>
	    <span class="lblue">氧气:</span>
	    <<if $options.bjx_eventTF and ($slime gt 0 or $ghost is 4) or $options.bjx_animal and $fish gte 6>>
	        <<oxygenrefresh>>
	        <span class="blue">你具备在水下呼吸的能力，你不会有窒息的感觉。</span>
		<<elseif $oxygen lt 0>>
			<span class="red">你窒息了！ 你的压力将会持续增长。在没有新鲜空气的情况下，你很快就会昏倒。</span>
		<</if>>
		<<oxygencaption>>
		<<if $oxygen lt 0 and $nooxygen is 1>>
			<<set $stress += 1000>>
		<<elseif $oxygen lt 0 and $nooxygen isnot 1>>
			<<set $nooxygen to 1>>
		<<else>>
			<<set $nooxygen to 0>>
		<</if>>
	<</if>>
	/* 北极星 */
<</widget>>

<<widget "oxygenrefresh">>
	<<set $oxygen to $oxygenmax>>
<</widget>>

<<widget "oxygen">>
	<<if _args[0]>>
		<<set $oxygen += _args[0]>>
	<</if>>
	<<if _args[0] lt 0>>
		<<set _strangle to 1>>
	<</if>>
	<<set $oxygen = Math.clamp($oxygen, 0, $oxygenmax)>>
<</widget>>

<<widget "virginitylosttext">>
	/* 北极星模组 */
	<<if $options.bjx_divine and $fallenangel gte 5>>
		<span class="grey">夺走了你的童贞，顿时一股混沌之力从你体内升起，你感到无比轻松。</span>
		<<set $stress -= $stressgain>><<set $stressgain to 0>>
		<<if $fallenangel gte 6>>
			<<set $fallenangelvirginitylost to 1>>
		<</if>>
	<<elseif $templePromised is _args[0]>>
	/* 北极星模组 */
		<span class="lblue">yet you remain pure.</span>
	<<else>>
		<span class="red">forever robbing you of your purity.</span>
	<</if>>
<</widget>>

<<widget "neutral">> <!-- This widget's names ('neutral') is awful. Maybe 'molest' might better describe its use? -->
	<!-- args[1] now modifies the arousal applied to the PC -->
	<!-- Consult the 'arousal' widget to see how -->
	<<if _args[0] and (typeof _args[0]) is "number">>

		<<if $consensual isnot 1>>
			<<if $drunk gt 0>>
				<<set $_drunk_level to Math.clamp(Math.floor($drunk / 120), 0, 4)>>
				<<set $_stress_multiplier to [9,8,6,4,3][$_drunk_level]>>
			<<else>>
				<<set $_stress_multiplier to 10>>
			<</if>>
			<<stress _args[0] $_stress_multiplier>>
			<<combattrauma _args[0]>>
		<</if>>

		<<set _arousal to 20 * _args[0]>>
		<<if _args[1] and _args[2] and (typeof _args[1]) is "string" and (typeof _args[2]) is "number">>
			<<arousal _arousal _args[1]>>
			<<enemyarousal _args[0] _args[2]>>
		<<elseif _args[1] and (typeof _args[1]) is "string">>
			<<arousal _arousal _args[1]>>
			<<enemyarousal _args[0]>>
		<<elseif _args[1] and (typeof _args[1]) is "number">>
			<<arousal _arousal>>
			<<enemyarousal _args[0] _args[1]>>
		<</if>>
	<</if>>
<</widget>>

<<widget "neutralbreast">>
	<<neutral _args[0] "breasts">>
<</widget>>

<<widget "neutralgenitals">>
	<<neutral _args[0] "genitals">>
<</widget>>

<<widget "enemyarousal">>
	<<set $enemyarousal += _args[0]>>
<</widget>>

<<widget "sex">>
	<!-- args[1] - indicates target: "genitals" if penile or vaginal, "anus" if anal, "mouth" if oral -->

	<!-- Comment Akoz: args[2] was used at some places to show double penetration and at others -->
	<!-- to pass which enemy NPC is doing the fucking. I'd leave it to mean the later, but -->
	<!-- I didn't want to make a decision about a system I'm not working on. -->
	<!-- So I chose to leave args[2] unused -->

	<!-- Comment Purity: args[2] is now used to check which NPC is causing it. -->
	<!-- For double penetration, the widget is now called twice. Once for each NPC. -->
	<<if _args[0] and (typeof _args[0]) is "number">>
		<<if $consensual isnot 1>>
			<<if $drunk gt 0>>
				<<set $_drunk_level to Math.clamp(Math.floor($drunk / 120), 0, 4)>>
				<<set $_stress_multiplier to [9,8,6,4,3][$_drunk_level]>>
			<<else>>
				<<set $_stress_multiplier to 10>>
			<</if>>
			<<stress _args[0] $_stress_multiplier>>
			<<combattrauma _args[0]>>
		<<else>>
			<<stress _args[0] -10>>
		<</if>>
		<<set _arousal to 20 * _args[0]>>
		<<set _enemyarousal to 2 * _args[0]>>
		<<if _args[1] is undefined>>
			<<error {
				message : `Expected a second parameter, but none was provided.`,
				source : "Called from " + Utils.GetStack()
			}>>
		<<elseif _args[2] and (typeof _args[2]) is "number">>
			<<if wearingCondom(_args[2]) and ["genital","genitals","anal"].includes(_args[1])>>
				<<switch $NPCList[_args[2]].condom.type>>
					<<case "plain">>
						<<set _arousal to Math.floor(_arousal * 0.9)>>
						<<set _enemyarousal to Math.floor(_enemyarousal * 0.9)>>
					<<default>>
				<</switch>>
			<</if>>
			<<if wearingCondom("player") and ["genital","genitals"].includes(_args[1])>>
				<<switch $player.condom.type>>
					<<case "plain">>
						<<set _arousal to Math.floor(_arousal * 0.9)>>
						<<set _enemyarousal to Math.floor(_enemyarousal * 0.9)>>
					<<default>>
				<</switch>>
			<</if>>
		<</if>>
		<<arousal _arousal _args[1]>>
		<<enemyarousal _enemyarousal>>
	<</if>>
<</widget>>

<!--_args[0] is the base value, _args[1] is the skill-->
<<widget "sexControl">>
	<<if _args[0] and _args[1] gte 800>>
		<<set _loss to _args[1] / 180 * _args[0]>>
		<<if _args[1] gte 1200>>
			<<set _loss += 1>>
		<</if>>

		<<if $enemyarousal gte $enemyarousalmax * 0.7>>
			<<set _loss *= 2>>
		<</if>>
		<<if $enemyarousal gte $enemyarousalmax * 0.9>>
			<<set _loss *= 2>>
		<</if>>
		<<set _loss *= $enemyArousalLossReduction>>
		<<if $enemyArousalLossReduction gt 0.2>>
			<<set $enemyArousalLossReduction -= (_args[1] gte 1200 ? 0.03 : 0.04)>>
		<</if>>
		<<set $enemyarousal to Math.clamp($enemyarousal - Math.round(_loss), Math.min($enemyarousal, $enemyarousalmax / 5), $enemyarousalmax)>>
		/* 北极星模组 */
		<<set $enemyoverarousal += Math.round(_loss)>>
		/* 北极星 */
	<</if>>
<</widget>>

<<widget "violence">>
	<!-- NG tuning v2.7 $arousal from $masochism/50 to /7. PC now orgasms at least once during spanking encounter at 50% masocism level and twice at 100% masoohism. /10 at max is required to orgasm once at 100% masochism. -->
	<!-- NG added stress reduction for masochists. Trauma left same -->
	<<if _args.length gte 1>>
		<<set _violence = _args[0]>>
		<<set _stressMod = _args[1] || 1>>
		<<set _traumaMod = _args[2] || 1>>
		<<set _painMod = _args[3] || 1>>
		<!-- args[4] - indicates NPC id (but is currently unused) -->

		<<if _violence gt 0 or _violence lt 0>>
			<<if $drunk gt 0>>
				<<set $_drunk_level to Math.clamp(Math.floor($drunk / 120), 0, 4)>>
				<<set _drunkMod to [9,8,6,4,3][$_drunk_level]>>
			<<else>>
				<<set _drunkMod to 10>>
			<</if>>
			<<if $possessed is true and _violence gte 0>>
				<<set $_controlMod to (10 * $enemyno)>>
				<<control `_violence / $_controlMod`>>
				<<set $wraith.will -= _violence>>
				<<set _possessMod to 3>>
			<<else>>
				<<set _possessMod to 1>>
			<</if>>
			<<set $stress += (_violence * _drunkMod * _stressMod) * (1 - ($masochism / 1200))>>
			<<combattrauma _violence * _traumaMod>>
			/* 北极星模组 */
			<<if $options.bjx_eventTF>>
    			<<if $slime is 1>>
    				<<set _painMod *= 0.6>>
    			<<elseif $slime is 2>>
    				<<set _painMod *= 0.6>>
    			<<elseif $slime is 3>>
    				<<set _painMod *= 0.2>>
    			<</if>>
    			<<if $mushroom gte 1>>
    			    <<mushroomtfcheck>>
    			    <<set _defence = 0>>
    				<<if $worn.upper.set.includes("mushroom")>>
    					<<set _defence += $mushroomtf.defence>>
    				<</if>>
    				<<if $worn.lower.set.includes("mushroom")>>
    					<<set _defence += $mushroomtf.defence>>
    				<</if>>
    				<<set _painMod *= 120 / (120 + _defence)>>
    			<</if>>
    		<</if>>
    		/* 北极星 */
			<<set $pain += (_violence * _painMod * (1 - ($masochism / 1200)) * (1 - ($sciencetrait / 10)) / _possessMod)>>
			<<set _arousal to (_violence * (0 + ($masochism / 18)))>>
			<<arousal _arousal/_possessMod "maso">>
			<<if $orgasmdown gte 1>>
				<<if $masochism gte 800>>
					<<masochism `(_violence / 20)`>>
				<<elseif $masochism gte 500>>
					<<masochism `(_violence / 10)`>>
				<<elseif $masochism gte 300>>
					<<masochism `(_violence / 6)`>>
				<<elseif $masochism gte 100>>
					<<masochism `(_violence / 2)`>>
				<<else>>
					<<masochism _violence>>
				<</if>>
			<</if>>
			<<if _violence gte 6>>
				<<set $enemyanger -= 5>>
			<<else>>
				<<set $enemyanger -= _violence>>
			<</if>>
			<<set $enemyarousal += 1>>
			<<painclamp>>
		<</if>>
	<</if>>
<</widget>>

<<widget "violence_noncombat">>
	<<if _args.length gte 1>>
		<<set _violence = _args[0]>>
		<<set _stressMod = _args[1] || 1>>
		<<set _traumaMod = _args[2] || 1>>
		<<set _painMod = _args[3] || 1>>
		<<set _arousalMod = _args[4] || 1>>

		<<if _violence gt 0 or _violence lt 0>>
			<<if $drunk gt 0>>
				<<set $_drunk_level to Math.clamp(Math.floor($drunk / 120), 0, 4)>>
				<<set _drunkMod to [9,8,6,4,3][$_drunk_level]>>
			<<else>>
				<<set _drunkMod to 10>>
			<</if>>
			<<set $stress += (_violence * _drunkMod * _stressMod) * (1 - ($masochism / 1200))>>
			<<trauma _violence * _traumaMod>>
			/* 北极星模组 */
			<<if $options.bjx_eventTF>>
    			<<if $slime is 1>>
    				<<set _painMod *= 0.6>>
    			<<elseif $slime is 2>>
    				<<set _painMod *= 0.6>>
    			<<elseif $slime is 3>>
    				<<set _painMod *= 0.2>>
    			<</if>>
    			<<if $mushroom gte 1>>
    			    <<mushroomtfcheck>>
    			    <<set _defence = 0>>
    				<<if $worn.upper.set.includes("mushroom")>>
    					<<set _defence += $mushroomtf.defence>>
    				<</if>>
    				<<if $worn.lower.set.includes("mushroom")>>
    					<<set _defence += $mushroomtf.defence>>
    				<</if>>
    				<<set _painMod *= 120 / (120 + _defence)>>
    			<</if>>
    		<</if>>
    		/* 北极星 */
			<<set $pain += (_violence * _painMod * (1 - ($masochism / 1200)) * (1 - ($sciencetrait / 10)))>>
			<<set _arousal to (_violence * _arousalMod * (0 + ($masochism / 18)))>>
			<<arousal _arousal "maso">>
			<<set $arousalmasochism += (_violence * (0 + ($masochism / 7)))>>
			<<if $orgasmdown gte 1>>
				<<if $masochism gte 800>>
					<<masochism `(_violence / 20)`>>
				<<elseif $masochism gte 500>>
					<<masochism `(_violence / 10)`>>
				<<elseif $masochism gte 300>>
					<<masochism `(_violence / 6)`>>
				<<elseif $masochism gte 100>>
					<<masochism `(_violence / 2)`>>
				<<else>>
					<<masochism _violence>>
				<</if>>
			<</if>>
			<<painclamp>>
		<</if>>
	<</if>>
<</widget>>

/* 北极星模组 */
<<widget "enemytrustgain">>
    <<if $options.bjx_smallup>>
        <<set $enemytrust += _args[0] * (18000 - $physiquesize) / 4000>>
    <<else>>
        <<set $enemytrust += _args[0]>>
    <</if>>
<</widget>>

<<widget "enemyangerloss">>
    <<if $options.bjx_smallup>>
        <<set $enemyanger -= _args[0] * (18000 - $physiquesize) / 4000>>
    <<else>>
        <<set $enemyanger -= _args[0]>>
    <</if>>
<</widget>>
/* 北极星 */

<<widget "submission">>
	<!-- Comment Akoz: this won't use sensitivities as I reckon this arousal source is -->
	<!-- entirely psychological. -->
	<!-- args[0] - the submission value -->
	<!-- args[1] - the NPC to whom PC is submitting (currently unused) -->
	<<if _args[0]>>
		<<if $consensual isnot 1>>
			<<if $drunk gt 0>>
				<<set $_drunk_level to Math.clamp(Math.floor($drunk / 120), 0, 4)>>
				<<set $_stress_multiplier to [9,8,6,4,3][$_drunk_level]>>
			<<else>>
				<<set $_stress_multiplier to 10>>
			<</if>>
			<<stress _args[0] $_stress_multiplier>>
			<<sub `_args[0] / 4`>>
		<<else>>
			<<set $stress -= 10 * _args[0]>>
			<<set $assertive += 1>>
		<</if>>
		<<set _arousal to 20 * _args[0]>>
		<<arousal _arousal>>
		<<set $enemyarousal += 3 * _args[0]>>
		/* 北极星模组 */
		<<enemytrustgain 2>>
		/* 北极星 */
	<</if>>
<</widget>>

<<widget "defiance">>
	<<if _args[0]>>
		<<set _defiance to (_args[0] * (1 + ($sadism / 1000)))>>
		<<set $stress -= 10 * _defiance>>
		<<combattrauma `-_defiance`>>
		<<set $enemyanger += 5 * _defiance>>
		<<def `_args[0] / 4`>>
		<<set $enemytrust -= 4>>
		<<set _defiance_arousal to (_defiance * ($sadism / 40))>>
		<<arousal _defiance_arousal>>
		<<if $arousal gte ($arousalmax * 0.8)>>
			<<sadism _args[0]>>
		<</if>>
		/* 北极星模组 */
		<<set _painMod = 1>>
		<<if $options.bjx_eventTF and $slime is 1>>
			<<set _painMod += 0.5>>
		<</if>>
		<<if $options.bjx_animal and $dolphin gte 6 and ($underwater is 1 or $inwater is 1)>>
			<<set _painMod += 0.5>>
		<</if>>
		<<if $options.bjx_divine and $fallenangelretribution is 1>>
            <<set _painMod *= 1.5>>
		<</if>>
		<<if $options.bjx_divine and $angel gte 5 and $enemyanger lt ($enemyangermax / 5)>>
            <<set _painMod *= 2>>
		<</if>>
		<<set _thedamage to (2 * _painMod * _defiance * ($physique / 4000))>>
		<<if $options.bjx_divine and $angel gte 5>>
            <<set $enemyarousal -= 6 * _args[0]>>
		<</if>>
		/* 北极星 */
		<<if $enemyno gte 2>>
			<<npcdamage _args[1]>>
		<</if>>
		<<set $enemyhealth -= _thedamage>>
	<</if>>
<</widget>>

<<widget "brat">>
	<<if _args[0]>>
		<<if $drunk gt 0>>
			<<set $_drunk_level to Math.clamp(Math.floor($drunk / 120), 0, 4)>>
			<<set $_stress_multiplier to [9,8,6,4,3][$_drunk_level]>>
		<<else>>
			<<set $_stress_multiplier to 10>>
		<</if>>
		<<stress _args[0] $_stress_multiplier>>
		<<combattrauma `-1 * _args[0]`>>
		<<if _args[1] is "demanding">>
			<<set $enemyanger += 20 * _args[0]>>
		<<elseif $NPCList[0].legs isnot "walk">>
			<<set $enemyanger += 5 * _args[0]>>
		<</if>>
		<<def `_args[0] / 4`>>
		<<set $enemytrust -= 2>>
		<<set $NPCList[0].bold to ($NPCList[0].bold gte _args[0] * 10 ? $NPCList[0].bold - _args[0] * 10 : 0)>>
	<</if>>
<</widget>>

<<widget "meek">>
	<!-- Comment Akoz: this won't use sensitivities as I reckon this arousal source is -->
	<!-- entirely psychological. -->
	<!-- args[0] - the meek value -->
	<!-- args[1] - the NPC for whom PC is acting meekly (currently unused) -->
	<<if _args[0]>>
		<<if $consensual isnot 1>>
			<<sub `_args[0] / 4`>>
		<<else>>
			<<set $assertive += 1>>
		<</if>>
		<<set _arousal to 20 * _args[0]>>
		<<arousal _arousal>>
		<<set $enemyarousal += _args[0]>>
		/* 北极星模组 */
		<<enemytrustgain 1>>
		<<enemyangerloss _args[0]>>
		/* 北极星 */
	<</if>>
<</widget>>

<<widget "crimeUp">><<silently>>
	<<if $statFreeze isnot true>>
		<<if _args[0] eq null>>
			<<set _crimeError to `No input found for crimeUp widget!`>>
		<<elseif isNaN(_args[0])>>
			<<set _crimeError to `NaN input found for crimeUp widget: '${_args[0]}'`>>
		<<elseif _args[0] lt 0>>
			<<set _crimeError to `Negative input found for crimeUp widget: '${_args[0]}'`>>
		<<elseif _args[0] gt 0>>
			<<set _crimeType to _args[1] || "thievery">>
			<<if !setup.crimeNames[_crimeType]>>
				<<run Errors.report("Extra-Illegal crime committed of type; " + _crimeType + " defaulted to thievery")>>
				<<set _crimeType to "thievery">>
			<</if>>
			<<set $_crimemod to Number(_args[0])>>
			<<set $_crimeMult to 1>>

			<<if !["coercion", "resisting"].includes(_crimeType)>>
				<!-- ignore stealth (or concealed identity) for crimes where it is irrelevant; -->
				<!-- resisting arrest where the player's identity is explicitly known, and coercion where the player's force of personality is needed -->
				/* The following commented code contains experimental factors for calculating stealth */
				/*
					<<set $_crime1 to Math.clamp($crime, C.crime.min, C.crime.max / 10)>>
					<<set $_crime2 to $crime - $_crime1>>
					<<set $_crime2 to Math.clamp($crime - $_crime1, C.crime.min, C.crime.max / 10)>>
					<!-- crime1 = first 5k of crime, crime2 = next 5k of crime -->
					<<set $_normCrime1 to normalise($_crime1, C.crime.max / 10)>>
					<<set $_normCrime2 to normalise($_crime2, C.crime.max / 10)>>
					<!-- Both normalized to percentage of max/10 (currently 5k) -->
					<<set $_stealthReduce1 to expCurve($_normcrime1, 3.0)>>
					<!-- First 5k of crime at a curve to 5000 -->
				*/
				<<set $_stealthfactor to ( 0.15 * ( 1 - normalise($crime[_crimeType].current, C.crime.max / 5 ) ) )>>
				<!-- Stealth gives 15%, but reduced by existing crime stat down to 0 at C.crime.max / 5 -->
				<!-- At 10k crime of the current type, stealthy equipment is effectively useless - too much evidence -->

				<!-- Filter to all items with type "stealthy" and count them -->
				<<set $_stealthMult to Object.values($worn).filter(item => item.type.includes("stealthy")).length>>
				<<set $_crimeMult -= $_stealthfactor * $_stealthMult>>

				<!-- Filter to all items with type "unstealthy" and count them -->
				<<set $_unstealthMult to Object.values($worn).filter(item => item.type.includes("unstealthy")).length>>
				<<set $_crimeMult += 0.15 * $_unstealthMult>>

				<<if ["thievery", "petty", "trespassing"].includes(_crimeType)>>
					<!-- For stealthy crimes, player skulduggery skill gives further reduction up to another 15%. 1000 is max skulduggery clamp, replace as needed -->
					<<set $_skillMult to ( 0.15 * normalise($skulduggery, 1000) )>>
					<<set $_crimeMult -= $_skillMult>>
				<</if>>

				<<set $_crimemod to Math.ceil($_crimemod * $_crimeMult)>>
				<<if ["petty"].includes(_crimeType) and $skulduggery gte 500>>
					<!-- Petty thievery has extra flat reduction if skulduggery skill above 500 (C+), possibly negating the crime gain entirely -->
					<<set $_crimemod -= Math.floor($skulduggery / 10)>>
				<</if>>
			<</if>>

			<<set $_crimemod to Math.clamp($_crimemod, 0, C.crime.max)>>
			
			/* 北极星模组 */
			<<if $options.bjx_animal and $raccoon gte 6 and $raccoonrequired and $raccoonrequired is _crimeType>>
			    <<set $_crimemod to 0>>
			<</if>>
			/* 北极星 */

			<<if $_crimemod gt 0>>
				<!-- If crime gain is still greater than 0, add to crime daily, history, count, and Avery crimetracker-->
				<!-- crimemod lte 0 represents a crime the player completely got away with, so nothing is recorded-->
				<<set C.crime[_crimeType] += $_crimemod>>
				<<set C.crime[_crimeType + "History"] += $_crimemod>>
				<<set C.crime[_crimeType + "Daily"] += $_crimemod>>
				<<set C.crime[_crimeType + "Count"] += 1>>
				<<set C.crime[_crimeType + "CountHistory"] += 1>>
				<<if $averyCrimeTracker neq null>>
					<<set $averyCrimeTracker += $_crimemod>>
				<</if>>

				/* 北极星模组 */
				<<if ["thievery", "petty"].includes(_crimeType) and 
				$foxbuild gte 1 and !$options.bjx_animal and 
				Math.max($wolfbuild, $catbuild, $cowbuild, $birdbuild, $foxbuild) is $foxbuild>>
				/* 北极星 */
					<!-- If the player steals enough, and fox is their highest beast TF (and above 0), apply fox TF pressure -->
					<<if !$foxCrimeProgress>>
						<!-- Resets daily at 6AM, in dawnCheck, time.js -->
						<<set $foxCrimeProgress to 0>>
					<</if>>
					<<set $foxCrimeProgress += $_crimemod>>
					<<set $_foxCrimeRequired = Math.floor(50 * (1 + $foxbuild))>>
					<<if $foxCrimeProgress gte $_foxCrimeRequired>>
						<<transform fox 1>>
						<<set $foxCrimeMessage to true>>
						<<set $foxCrimeProgress to Math.clamp($foxCrimeProgress, 0, ($foxCrimeProgress - $_foxCrimeRequired))>>
					<</if>>
				<</if>>

				<<if _args[2]>>
					<!-- Optional argument to record more specific crimes with description. Does not work yet, unused.-->
					<<set _description to _args[2]>>
					<<if !setup.crimeDescs[_description]>>
						<<run Errors.report("Extra-Illegal crime committed of description; " + _description + " crime event not logged")>>
					<<else>>
						<<run C.crime.logEvent($_crimemod, _crimeType, _description)>>
					<</if>>
				<</if>>
			<</if>>

			<<if $earSlime.event is "steal something" and ["thievery", "petty"].includes(_crimeType)>>
				<<set $earSlime.event to "">><<set $earSlime.noSleep to false>>
			<</if>>
		<</if>>
	<</if>>
<</silently>><<if _crimeError>><<error {message:T.crimeError}>><</if>><</widget>>

<<widget "crimeUpFlat">><<silently>>
	<!-- stripped down widget with no extra effects, modifiers, or optional arguments, ideally used for cheats and debugging -->
	<<if $statFreeze isnot true>>
		<<if _args[0] eq null>>
			<<set _crimeError to `No input found for crimeUpFlat widget!`>>
		<<elseif isNaN(_args[0])>>
			<<set _crimeError to `NaN input found for crimeUpFlat widget: '${_args[0]}'`>>
		<<elseif _args[0] lt 0>>
			<<set _crimeError to `Negative input found for crimeUpFlat widget: '${_args[0]}'`>>
		<<elseif _args[0] gt 0>>
			<<set _crimeType to _args[1] || "thievery">>
			<<if !setup.crimeNames[_crimeType]>>
				<<run Errors.report("Extra-Illegal crime (flat) committed of type; " + _crimeType + " defaulted to thievery")>>
				<<set _crimeType to "thievery">>
			<</if>>
			<<set $_crimemod to Number(_args[0])>>
			<<if _args[0] gt 0>>
				<<set C.crime[_crimeType] += $_crimemod>>
				<<set C.crime[_crimeType + "History"] += $_crimemod>>
				<<set C.crime[_crimeType + "Daily"] += $_crimemod>>
				<<set C.crime[_crimeType + "Count"] += 1>>
				<<set C.crime[_crimeType + "CountHistory"] += 1>>
			<</if>>
		<</if>>
	<</if>>
<</silently>><<if _crimeError>><<error {message:T.crimeError}>><</if>><</widget>>

<<widget "crimeDown">><<silently>>
	<<if $statFreeze isnot true>>
		<<if _args[0] eq null>>
			<<set _crimeError to `No input found for crimeDown widget!`>>
		<<elseif isNaN(_args[0])>>
			<<set _crimeError to `NaN input found for crimeDown widget: '${_args[0]}'`>>
		<<elseif _args[0] lt 0>>
			<<set _crimeError to `Negative input found for crimeDown widget: '${_args[0]}'`>>
		<<elseif _args[0] gt 0>>
			<<set _crimeDown to _args[0]>>
			<<if _args[1] and _args[1] isnot "all">>
				<<set _crimeType to _args[1]>>
				<<if !setup.crimeNames[_crimeType]>>
					<<run Errors.report("Extra-Illegal crime reduced of type; " + _crimeType + " defaulted to thievery")>>
					<<set _crimeType to "thievery">>
				<</if>>
				<<if C.crime[_crimeType] gt 0>>
					<<if _crimeDown lte 1>>
						<!-- Reduce crime by percent -->
						<<set C.crime[_crimeType] to Math.ceil(C.crime[_crimeType] * _crimeDown)>>
						<<set C.crime[_crimeType + "Daily"] to Math.ceil(C.crime[_crimeType + "Daily"] * _crimeDown)>>
						<<set C.crime[_crimeType + "Count"] to Math.ceil(C.crime[_crimeType + "Count"] * _crimeDown)>>
					<<else>>
						<!-- Reduce crime by value -->
						<<set $_crimeDiv to normalise(C.crime[_crimeType] - _crimeDown, C.crime[_crimeType], C.crime.min)>>
						<<set C.crime[_crimeType] -= _crimeDown>>
						<<set C.crime[_crimeType + "Daily"] -= _crimeDown>>
						<!-- Reduce crime type count by same percentile as total crime loss-->
						<<set C.crime[_crimeType + "Count"] to Math.ceil(C.crime[_crimeType + "Count"] * $_crimeDiv)>>
					<</if>>
				<</if>>
			<<else>>
				<!-- If no crime type specified, apply to all -->
				<<for _crimeType range Object.keys(setup.crimeNames)>>
					<<if C.crime[_crimeType] gt 0>>
						<<if _crimeDown lte 1>>
							<!-- Reduce crime by percent -->
							<<set C.crime[_crimeType] to Math.ceil(C.crime[_crimeType] * _crimeDown)>>
							<<set C.crime[_crimeType + "Daily"] to Math.ceil(C.crime[_crimeType + "Daily"] * _crimeDown)>>
							<<set C.crime[_crimeType + "Count"] to Math.ceil(C.crime[_crimeType + "Count"] * _crimeDown)>>
						<<else>>
							<<set $_crimeDiv to normalise(C.crime[_crimeType] - _crimeDown, C.crime[_crimeType], C.crime.min)>>
							<<set C.crime[_crimeType] -= _crimeDown>>
							<<set C.crime[_crimeType + "Daily"] -= _crimeDown>>
							<<set C.crime[_crimeType + "Count"] to Math.ceil(C.crime[_crimeType + "Count"] * $_crimeDiv)>>
							<<unset $_crimeDiv>>
						<</if>>
					<</if>>
				<</for>>
			<</if>>
		<</if>>
	<</if>>
<</silently>><<if _crimeError>><<error {message:T.crimeError}>><</if>><</widget>>

<<widget "crimeClear">>
	<<if $statFreeze isnot true>>
		<<if _args[0] and _args[0] isnot "all">>
			<<set _crimeClearType to _args[0]>>
			<<if !setup.crimeNames[_crimeClearType]>>
				<<run Errors.report("Extra-Illegal crime cleared of type; " + _crimeClearType)>>
			<<else>>
				<<set C.crime[_crimeClearType] = 0>>
				<<set C.crime[_crimeClearType + "Count"] = 0>>
				<<set C.crime[_crimeClearType + "Daily"] = 0>>
				<<run C.crime.clearEvents(_crimeClearType)>>
			<</if>>
		<<else>>
			<!-- If no crime type specified, zero all categories -->
			<<for _crimeClearType range Object.keys(setup.crimeNames)>>
				<<set C.crime[_crimeClearType] = 0>>
				<<set C.crime[_crimeClearType + "Count"] = 0>>
				<<set C.crime[_crimeClearType + "Daily"] = 0>>
				<<run C.crime.clearEvents()>>
			<</for>>
		<</if>>
	<</if>>
<</widget>>

<<widget "crimeClearEvent">>
	<<if $statFreeze isnot true>>
		<<if _args[0] and _args[0] isnot "all">>
			<<set _crimeClearEvent to _args[0]>>
			<<if !setup.crimeDescs[_crimeClearEvent]>>
				<<run Errors.report("Extra-Illegal crime event cleared of description; " + _crimeClearEvent)>>
			<<else>>
				<<run C.crime.clearEvents(null, _crimeClearEvent)>>
			<</if>>
		<<else>>
			<<run C.crime.clearEvents()>>
		<</if>>
	<</if>>
<</widget>>

<<widget "listCrimeCheats">>
	<<if Object.keys(V.crime.events).length isnot 0>>
		<<for $_ce range Object.keys(V.crime.events)>>
			<<print $_ce + ": " + setup.crimeDescs[$_ce].toUpperFirst() + ", " + $crime.events[$_ce].length + " count(s)">>
			<br>
		<</for>>
	<<else>>
		<span class="red">No unique crime events</span>
		<br>
	<</if>>
<</widget>>

<<widget "crimeParade">>
	<<for $_crimeType range Object.keys(setup.crimeNames)>>
		<<if C.crime[$_crimeType + "Count"] gte 1>>
			<<set $_crimes_output to "">>
			<<number `C.crime[$_crimeType + "Count"]` "silent">>
			<<set $_crimes_output += "- " + _text_output.toLocaleUpperFirst() + " count">>
			<<if C.crime[$_crimeType + "Count"] isnot 1>>
				<<set $_crimes_output += "s">>
			<</if>>
			<<set $_crimes_output += " of " + toTitleCase(setup.crimeNames[$_crimeType])>>
			<<unset _text_output>>
			<<set $_crimes_event_list to []>>
			<<for $_ce range Object.keys($crime.events)>>
				<<set $_crDescLen to $crime.events[$_ce].filter(e => e.type is $_crimeType).length>>
				<<if $_crDescLen gte 1>>
					<<number $_crDescLen "silent">>
					<<set $_crDescStr to _text_output + " count">>
					<<if $_crDescLen gt 1>>
						<<set $_crDescStr += "s">>
					<</if>>
					<<set $_crDescStr += " of " + setup.crimeDescs[$_ce]>>
					<<unset _text_output>>
					<<set $_crimes_event_list.push($_crDescStr)>>
				<</if>>
			<</for>>
			<<if $_crimes_event_list.length isnot 0>>
				<<set $_crimes_output += ", including ">>
				<<set $_crimes_output += formatList($_crimes_event_list, "and", true)>>
			<</if>>
			<<set $_crimes_output += ".">><span class="red"><<print $_crimes_output>></span>
			<br>
		<</if>>
	<</for>>
<</widget>>

<<widget "seductionskilluse">>
	<<set $enemyarousal += (currentSkillValue("seductionskill") / 100)>><<seductionskill 5>>
<</widget>>

<<widget "seductionskilluptext">>
	<<if $seductionskill lt 1000>>
		<span class="gold">You feel more confident in your powers of seduction.</span>
		<br><br>
	<</if>>
<</widget>>

<<widget "seductionskillusecombat">>
	<<set $enemyarousal += (currentSkillValue("seductionskill") / 100)>><<seductionskill 5>><<set $seductionskillup to 1>>
<</widget>>

/* 北极星模组 */
<<widget "oralskilluse">>
	<<set $enemyarousal += (currentSkillValue("oralskill") / 100)>><<oralskill 5>><<set $oralskillup to 1>>
	<<if $options.bjx_animal and $transformationParts.traits.longtongue isnot "disabled">>
		<<set $enemyarousal += (currentSkillValue("oralskill") / 50)>><<oralskill 5>><<set $oralskillup to 2>>
	<</if>>
	<<if $options.bjx_eventTF and $slime is 2>>
		<<set $enemyarousal += (currentSkillValue("oralskill") / 50)>><<oralskill 5>><<set $oralskillup to 1>>
	<</if>>
<</widget>>

<<widget "vaginalskilluse">>
	<<set $enemyarousal += (currentSkillValue("vaginalskill") / 100)>><<vaginalskill 5>><<set $vaginalskillup to 1>>
	<<if $options.bjx_eventTF and $slime is 2>>
		<<set $enemyarousal += (currentSkillValue("vaginalskill") / 50)>><<vaginalskill 5>><<set $vaginalskillup to 1>>
	<</if>>
<</widget>>

<<widget "analskilluse">>
	<<set $enemyarousal += (currentSkillValue("analskill") / 100)>><<analskill 5>><<set $analskillup to 1>>
	<<if $options.bjx_eventTF and $slime is 2>>
		<<set $enemyarousal += (currentSkillValue("analskill") / 50)>><<analskill 5>><<set $analskillup to 1>>
	<</if>>
<</widget>>

<<widget "handskilluse">>
	<<set $enemyarousal += (currentSkillValue("handskill") / 100)>><<handskill 5>><<set $handskillup to 1>>
	<<if $options.bjx_eventTF and $slime is 2>>
		<<set $enemyarousal += (currentSkillValue("handskill") / 50)>><<handskill 5>><<set $handskillup to 1>>
	<</if>>
<</widget>>

<<widget "feetskilluse">>
	<<set $enemyarousal += (currentSkillValue("feetskill") / 100)>><<feetskill 5>><<set $feetskillup to 1>>
	<<if $options.bjx_eventTF and $slime is 2>>
		<<set $enemyarousal += (currentSkillValue("feetskill") / 50)>><<feetskill 5>><<set $feetskillup to 1>>
	<</if>>
<</widget>>

<<widget "bottomskilluse">>
	<<set $enemyarousal += (currentSkillValue("bottomskill") / 100)>><<bottomskill 5>><<set $bottomskillup to 1>>
	<<if $options.bjx_eventTF and $slime is 2>>
		<<set $enemyarousal += (currentSkillValue("bottomskill") / 50)>><<bottomskill 5>><<set $bottomskillup to 1>>
	<</if>>
<</widget>>

<<widget "thighskilluse">>
	<<set $enemyarousal += (currentSkillValue("thighskill") / 100)>><<thighskill 5>><<set $thighskillup to 1>>
	<<if $options.bjx_eventTF and $slime is 2>>
		<<set $enemyarousal += (currentSkillValue("thighskill") / 50)>><<thighskill 5>><<set $thighskillup to 1>>
	<</if>>
<</widget>>

<<widget "chestskilluse">>
	<<set $enemyarousal += (currentSkillValue("chestskill") / 100)>><<chestskill 5>><<set $chestskillup to 1>>
	<<if $options.bjx_eventTF and $slime is 2>>
		<<set $enemyarousal += (currentSkillValue("chestskill") / 50)>><<chestskill 5>><<set $chestskillup to 1>>
	<</if>>
<</widget>>

<<widget "penileskilluse">>
	<<set $enemyarousal += (currentSkillValue("penileskill") / 100)>><<penileskill 5>><<set $penileskillup to 1>>
	<<if $options.bjx_eventTF and $slime is 2>>
		<<set $enemyarousal += (currentSkillValue("penileskill") / 50)>><<penileskill 5>><<set $penileskillup to 1>>
	<</if>>
<</widget>>
/* 北极星 */

<<widget "skulduggeryskilluse">>
	<<if $statFreeze isnot true>>
		<<set $skulduggery += 3>>
		<<if $skulduggery lt 1000>>
			<span class="gold"> You learned a thing or two about skulduggery.</span>
		<</if>>
	<</if>>
	<br><br>
<</widget>>

<<widget "combatskulduggeryskilluse">>
	<<if $statFreeze isnot true>>
		<<set $skulduggery += 3>>
		<<set $skulduggery to Math.clamp($skulduggery, 0, 1000)>>
		/* 北极星模组 */
		<<set $handskill += 5>>
		/* 北极星 */
		<<if $skulduggery lt 1000>>
			<span class="gold"> You learned a thing or two about skulduggery.</span>
		<</if>>
	<</if>>
<</widget>>

<<widget "swimmingskilluse">>
	<<if $statFreeze isnot true>>
		<<set $swimmingskill += 9>>
		<<if $swimmingskill lt 1000>>
			<span class="gold"> You've become more confident at swimming.</span>
		<</if>>
		<<set $swimmingskill to Math.clamp($swimmingskill, 0, 1000)>>
	<</if>>
<</widget>>

<<widget "danceskilluse">>
	<<if $statFreeze isnot true>>
		<<danceskill 1>>
		<<if $danceskill lt 1000>>
			<span class="gold"> You feel more confident in your dancing abilities.</span>
		<</if>>
	<</if>>
<</widget>>

<<widget "schoolskillgeneral">>
	<<if $statFreeze isnot true>>
		<<set $_subject to _args[0]>>
		<<set $_gain to _args[1] || 1>>

		<<set _skill_mod to [2.4, 1.2, 0.6, 0.3][Math.clamp(V[$_subject + "trait"], 0, 3)]>>

		<<if _args[2] isnot "no_star">>
			<<if V[$_subject + "_star"] lt 3>>
				<<set V[$_subject + "_star"] += 1>>
			<</if>>
			<<if $worn.face.type.includes("glasses")>>
				<<set _skill_mod *= 1.2>>
			<</if>>
			<<if $exposed gte 1>>
				<<set _skill_mod *= 1.2>>
			<</if>>
		<</if>>

		<<set V[$_subject + "_exam"] to Math.clamp(V[$_subject + "_exam"] + ($_gain * _skill_mod), -107, 200)>>
	<</if>>
<</widget>>

<<widget "scienceskill">>
	<<schoolskillgeneral "science" _args[0] _args[1]>>
<</widget>>

<<widget "mathsskill">>
	<<schoolskillgeneral "maths" _args[0] _args[1]>>
<</widget>>

<<widget "englishskill">>
	<<schoolskillgeneral "english" _args[0] _args[1]>>
<</widget>>

<<widget "historyskill">>
	<<schoolskillgeneral "history" _args[0] _args[1]>>
<</widget>>

<<widget "passiveStudy">>
	<<if $statFreeze isnot true>>
		<<switch $studyBooks.rented>>
			<<case "science">>
				<<scienceskill 6 "no_star">>
			<<case "maths">>
				<<mathsskill 6 "no_star">>
			<<case "English">>
				<<englishskill 6 "no_star">>
			<<case "history">>
				<<historyskill 6 "no_star">>
			<<default>>
		<</switch>>
		<<switch $studyBooks.stolen>>
			<<case "science">>
				<<scienceskill 6 "no_star">>
			<<case "maths">>
				<<mathsskill 6 "no_star">>
			<<case "English">>
				<<englishskill 6 "no_star">>
			<<case "history">>
				<<historyskill 6 "no_star">>
			<<default>>
		<</switch>>
	<</if>>
<</widget>>

<<widget "schoolskill">>
	<<if _args[0]>>
		<<historyskill _args[0]>>
		<<mathsskill _args[0]>>
		<<scienceskill _args[0]>>
		<<englishskill _args[0]>>
	<<else>>
		<<historyskill>>
		<<mathsskill>>
		<<scienceskill>>
		<<englishskill>>
	<</if>>
<</widget>>

<<widget "athletics">>
	<<if _args[0] and $statFreeze isnot true>>
		<<set _temp to _args[0]>>
		<<if $exposed gte 2>>
			<<set $athletics += 2>>
		<<elseif $exposed is 1>>
			<<set $athletics += 1>>
		<</if>>
		<<set $athletics += Math.trunc(_temp * 1.4)>>
		<<set $athletics to Math.clamp($athletics, 0, 1000)>>
		<<set $tending to Math.clamp($tending, 0, 1000)>>
	<</if>>
<</widget>>

<<widget "tending">>
	<<if _args[0] and $statFreeze isnot true>>
		<<set $tending += (_args[0] * 2)>>
		<<set $tending to Math.clamp($tending, 0, 1000)>>
	<</if>>
<</widget>>

<<widget "housekeeping">>
<<if _args[0] and $statFreeze isnot true and $housekeeping lt _args[1]>>
	<<set $housekeeping += (_args[0] * 2)>>
	<<set $housekeeping to Math.clamp($housekeeping, 0, 1000)>>
<</if>>
<</widget>>

<<widget "danceskill">>
	<<if _args[0] and $statFreeze isnot true>>
		<<set $danceskill += _args[0]>>
		<<set $danceskill to Math.clamp($danceskill, 0, 1000)>>
	<</if>>
<</widget>>

<<widget "physique">>
	<<if $statFreeze isnot true>>
		<<if _args[0]>><<set _temp to _args[0]>><<set $workouts += _args[0]>><<else>><<set _temp to 1>><<set $workouts += 1>><</if>>
		<<if $exposed gte 2>>
			<<set _temp *= 1.2>>
		<<elseif $exposed is 1>>
			<<set _temp *= 1.1>>
		<</if>>
		<<set $physique += 10 * _temp>><<set $physiqueuse += _temp>>
		<<if _args[1]>>
			<<if _args[1] isnot "noMessage">>
				<<if ($combat is 1 and _args[1] isnot "workout") or _args[1] is "invig">>
					<span class="gold"> It invigorates you.</span>
				<<else>>
					<span class="gold"> You get a good workout.</span>
				<</if>>
			<</if>>
		<<elseif $combat is 1>>
			<span class="gold"> It invigorates you.</span>
		<<else>>
			<span class="gold"> You get a good workout.</span>
		<</if>>
		<<set $physique = Math.clamp($physique, 0, $physiquesize)>>
		/* 北极星模组 */
		<<if $options.bjx_animal and $bear gte 6>>
             <<set $physique += 8000>>
        <</if>>
        /* 北极星 */
	<</if>>
<</widget>>

<<widget "physique_loss">>
	<<if _args[0] and $statFreeze isnot true>>
		<<set $physique -= 10 * _args[0]>>
	<</if>>
<</widget>>

<<widget "bruise">>
	<<if _args[0] and $statFreeze isnot true>>
		<<switch _args[0]>>
		<<case "face">>
			<<set $facebruise += 1>>
			<<set $facebruise to Math.clamp($facebruise, 0, 100)>>
		<<case "neck">>
			<<set $neckbruise += 1>>
			<<set $neckbruise to Math.clamp($neckbruise, 0, 100)>>
		<<case "chest">>
			<<set $chestbruise += 1>>
			<<set $chestbruise to Math.clamp($chestbruise, 0, 100)>>
		<<case "rightarm">>
			<<set $rightarmbruise += 1>>
			<<set $rightarmbruise to Math.clamp($rightarmbruise, 0, 100)>>
		<<case "leftarm">>
			<<set $leftarmbruise += 1>>
			<<set $leftarmbruise to Math.clamp($leftarmbruise, 0, 100)>>
		<<case "tummy">>
			<<set $tummybruise += 1>>
			<<set $tummybruise to Math.clamp($tummybruise, 0, 100)>>
		<<case "bottom">>
			<<set $bottombruise += 1>>
			<<set $bottombruise to Math.clamp($bottombruise, 0, 100)>>
		<<case "thigh">>
			<<set $thighbruise += 1>>
			<<set $thighbruise to Math.clamp($thighbruise, 0, 100)>>
		<<case "anus">>
			<<set $anusbruise += 1>>
			<<set $anusbruise to Math.clamp($anusbruise, 0, 100)>>
		<<case "vagina">>
			<<set $vaginabruise += 1>>
			<<set $vaginabruise to Math.clamp($vaginabruise, 0, 100)>>
		<<case "penis">>
			<<set $penisbruise += 1>>
			<<set $penisbruise to Math.clamp($penisbruise, 0, 100)>>
		<<case "full">>
			<<set $facebruise += 1>>
			<<set $neckbruise += 1>>
			<<set $chestbruise += 1>>
			<<set $rightarmbruise += 1>>
			<<set $leftarmbruise += 1>>
			<<set $tummybruise += 1>>
			<<set $bottombruise += 1>>
			<<set $thighbruise += 1>>

			<<set $facebruise to Math.clamp($facebruise, 0, 100)>>
			<<set $chestbruise to Math.clamp($chestbruise, 0, 100)>>
			<<set $tummybruise to Math.clamp($tummybruise, 0, 100)>>
			<<set $vaginabruise to Math.clamp($vaginabruise, 0, 100)>>
			<<set $penisbruise to Math.clamp($penisbruise, 0, 100)>>
			<<set $anusbruise to Math.clamp($anusbruise, 0, 100)>>
			<<set $bottombruise to Math.clamp($bottombruise, 0, 100)>>
			<<set $thighbruise to Math.clamp($thighbruise, 0, 100)>>
			<<set $leftarmbruise to Math.clamp($leftarmbruise, 0, 100)>>
			<<set $rightarmbruise to Math.clamp($rightarmbruise, 0, 100)>>
			<<set $neckbruise to Math.clamp($neckbruise, 0, 100)>>
		<</switch>>
	<</if>>
<</widget>>

<<widget "rapestat">><<if $statFreeze isnot true>><<set $rapestat += 1>><</if>><</widget>>

<<widget "moleststat">><<if $statFreeze isnot true>><<set $moleststat += 1>><</if>><</widget>>

<<widget "vaginalstat">><<if $statFreeze isnot true>><<set $vaginalstat += 1>><</if>><</widget>>

/* 北极星模组 */
<<widget "vaginalejacstat">><<if $statFreeze isnot true>><<set $vaginalejacstat += 1>><<purity -1>><<byinternalejac>><<fertiliseParasites "vagina">><<creampie "self" "vagina">><</if>><</widget>>
/* 北极星 */

<<widget "analstat">><<if $statFreeze isnot true>><<set $analstat += 1>><</if>><</widget>>

/* 北极星模组 */
<<widget "analejacstat">><<if $statFreeze isnot true>><<set $analejacstat += 1>><<purity -1>><<byinternalejac>><<fertiliseParasites>><<creampie "self" "anus">><</if>><</widget>>
/* 北极星 */

<<widget "oralstat">><<if $statFreeze isnot true>><<set $oralstat += 1>><</if>><</widget>>

/* 北极星模组 */
<<widget "oralejacstat">><<if $statFreeze isnot true>><<set $oralejacstat += 1>><<purity -1>><<byinternalejac>><<creampie "self" "mouth">><</if>><</widget>>
/* 北极星 */

<<widget "handstat">><<if $statFreeze isnot true>><<set $handstat += 1>><</if>><</widget>>

<<widget "handejacstat">><<if $statFreeze isnot true>><<set $handejacstat += 1>><</if>><</widget>>

<<widget "feetstat">><<if $statFreeze isnot true>><<set $feetstat += 1>><</if>><</widget>>

<<widget "feetejacstat">><<if $statFreeze isnot true>><<set $feetejacstat += 1>><</if>><</widget>>

<<widget "thighstat">><<if $statFreeze isnot true>><<set $thighstat += 1>><</if>><</widget>>

<<widget "thighejacstat">><<if $statFreeze isnot true>><<set $thighejacstat += 1>><</if>><</widget>>

<<widget "cheststat">><<if $statFreeze isnot true>><<set $cheststat += 1>><</if>><</widget>>

<<widget "chestejacstat">><<if $statFreeze isnot true>><<set $chestejacstat += 1>><</if>><</widget>>

<<widget "bottomstat">><<if $statFreeze isnot true>><<set $bottomstat += 1>><</if>><</widget>>

<<widget "bottomejacstat">><<if $statFreeze isnot true>><<set $bottomejacstat += 1>><</if>><</widget>>

<<widget "penilestat">><<silently>>
<<if $statFreeze isnot true>>
	<<if $player.penisExist and !playerHasStrapon()>><<set $penilestat += 1>>
	<<elseif playerHasStrapon()>><<set $straponstat += 1>><</if>>
<</if>><</silently>><</widget>>

<<widget "penileejacstat">><<if $statFreeze isnot true>><<set $penileejacstat += 1>><</if>><</widget>>

<<widget "clothesstripstat">><<if $statFreeze isnot true>><<set $clothesstripstat += 1>><</if>><</widget>>

<<widget "clothesruinstat">><<if $statFreeze isnot true>><<set $clothesruinstat += 1>><</if>><</widget>>

<<widget "orgasmstat">><<if $statFreeze isnot true>><<set $orgasmstat += 1>><</if>><</widget>>

<<widget "ejacstat">><<if $statFreeze isnot true>><<set $ejacstat += 1>><</if>><</widget>>

<<widget "hitstat">><<if $statFreeze isnot true>><<set $hitstat += 1>><</if>><</widget>>

<<widget "attackstat">><<if $statFreeze isnot true>><<set $attackstat += 1>><</if>><</widget>>

<<widget "vaginalentranceejacstat">><<if $statFreeze isnot true>><<set $vaginalentranceejacstat += 1>><</if>><</widget>>

<<widget "faceejacstat">><<if $statFreeze isnot true>><<set $faceejacstat += 1>><</if>><</widget>>

<<widget "hairejacstat">><<if $statFreeze isnot true>><<set $hairejacstat += 1>><</if>><</widget>>

<<widget "tummyejacstat">><<if $statFreeze isnot true>><<set $tummyejacstat += 1>><</if>><</widget>>

<<widget "neckejacstat">><<if $statFreeze isnot true>><<set $neckejacstat += 1>><</if>><</widget>>

<<widget "dancestat">><<if $statFreeze isnot true>><<set $dancestat += 1>><</if>><</widget>>

<<widget "analdoublestat">><<if $statFreeze isnot true>><<set $analdoublestat += 1>><</if>><</widget>>

<<widget "vaginaldoublestat">><<if $statFreeze isnot true>><<set $vaginaldoublestat += 1>><</if>><</widget>>

<<widget "sextoystat">><<if $statFreeze isnot true>><<set $sextoystat += 1>><</if>><</widget>>

<<widget "urinestat">><<if $statFreeze isnot true>><<if _args[0]>><<set $urinestat += _args[0]>><<else>><<set $urinestat += 1>><</if>><</if>><</widget>>

<<widget "distinction_stat">>
	<<if $statFreeze isnot true>>
		<<set $distinction_stat += 1>>
		<<if $distinction_stat gte 15>>
			<<earnFeat "Distinguished">>
		<<elseif $distinction_stat gte 5>>
			<<earnFeat "Distinctive">>
		<<else>>
			<<earnFeat "Distinction">>
		<</if>>
	<</if>>
<</widget>>

<<widget "knot_stat">>
	<<if $statFreeze isnot true>>
		<<if $knot_stat is undefined>>
			<<set $knot_stat to 0>>
		<</if>>
		<<set $knot_stat += 1>>
	<</if>>
<</widget>>

<<widget "hunger">>
	<<if _args[0] and $statFreeze isnot true>>
		<<set $hunger += _args[0]>>
		<<set $hunger = Math.clamp($hunger, 0, 2000)>>
	<</if>>
<</widget>>

<<widget "hunger_description">>
	<<if $hunger gte 2000>><span class="red">You are starving!</span>
	<<elseif $hunger gte 1600>><span class="pink">You are famished.</span>
	<<elseif $hunger gte 1200>><span class="purple">You are ravenous.</span>
	<<elseif $hunger gte 800>><span class="blue">You are hungry.</span>
	<<elseif $hunger gte 400>><span class="lblue">You are peckish.</span>
	<<elseif $hunger gte 1>><span class="teal">You are satiated.</span>
	<<else>><span class="green">You are full.</span>
	<</if>>
<</widget>>

<<widget "thirst">>
	<<if $thirst gte 2000>><span class="red">You are dehydrated!</span>
	<<elseif $thirst gte 1600>><span class="pink">You are really thirsty.</span>
	<<elseif $thirst gte 1200>><span class="purple">You are thirsty.</span>
	<<elseif $thirst gte 800>><span class="blue">Your throat is dry.</span>
	<<elseif $thirst gte 400>><span class="lblue">You are satisfied.</span>
	<<elseif $thirst gte 1>><span class="teal">You are satiated.</span>
	<<elseif $thirst lte 0>><span class="green">You are full.</span>
	<</if>>
<</widget>>

<<widget "tirednesscaption">>
	<<if Number.isFinite($tiredness)>>
		<div id="tirednesscaption" @title="'Fatigue: ' + $tiredness.toFixed(2)">
			<div @class="($options.showCaptionText is true ? '' : 'rightMeterText')">
				Fatigue:
				<<if $options.showCaptionText is true>>
					<<if $tiredness gte C.tiredness.max>>
						<span class="red">You are exhausted.</span>
					<<elseif $tiredness gte (C.tiredness.max / 5) * 4>>
						<span class="pink">You are fatigued.</span>
					<<elseif $tiredness gte (C.tiredness.max / 5) * 3>>
						<span class="purple">You are tired.</span>
					<<elseif $tiredness gte (C.tiredness.max / 5) * 2>>
						<span class="blue">You are wearied.</span>
					<<elseif $tiredness gte C.tiredness.max / 5>>
						<span class="lblue">You are alert.</span>
					<<elseif $tiredness gte 1>>
						<span class="teal">You are wide awake.</span>
					<<else>>
						<span class="green">You are refreshed.</span>
					<</if>>
				<</if>>
			</div>

			<<if $tiredness gte C.tiredness.max>>
				<<set $stress += (($tiredness - C.tiredness.max) * 16)>><<set $trauma += (($tiredness - C.tiredness.max) / 3)>>
			<</if>>

			<<set $tiredness = Math.clamp($tiredness, 0, C.tiredness.max)>>
			<<set _showCaptionText to !$options.showCaptionText>>
			<<statbar $tiredness `C.tiredness.max` _showCaptionText>>
			<div style="clear:both;"></div>
		</div>
	<</if>>
<</widget>>

<<widget "hygiene">>
	<<if $hygiene gte 2000>>
		<span class="red">You are filthy.</span>
	<<elseif $hygiene gte 1600>>
		<span class="pink">You are soiled.</span>
	<<elseif $hygiene gte 1200>>
		<span class="purple">You are smelly.</span>
	<<elseif $hygiene gte 800>>
		<span class="blue">You are messy.</span>
	<<elseif $hygiene gte 400>>
		<span class="lblue">You are neat.</span>
	<<elseif $hygiene gte 1>>
		<span class="teal">You are clean.</span>
	<<elseif $hygiene lte 0>>
		<span class="green">You are speckless.</span>
	<</if>>
<</widget>>

<<widget "stresscaption">>
	<<if Number.isFinite($stress)>>
		<div id="stresscaption" @title="'Stress: ' + $stress.toFixed(2)">
			<div @class="($options.showCaptionText is true ? '' : 'rightMeterText')">
				Stress:
				<<if $options.showCaptionText is true>>
					<<if $stress gte $stressmax>>
						<span class="red">You are overwhelmed!</span>
					<<elseif $stress gte ($stressmax / 5) * 4>>
						<span class="pink">You are distressed.</span>
					<<elseif $stress gte ($stressmax / 5) * 3>>
						<span class="purple">You are strained.</span>
					<<elseif $stress gte ($stressmax / 5) * 2>>
						<span class="blue">You are tense.</span>
					<<elseif $stress gte $stressmax / 5>>
						<span class="lblue">You are calm.</span>
					<<elseif $stress gte 1>>
						<span class="teal">You are placid.</span>
					<<else>>
						<span class="green">You are serene.</span>
					<</if>>
				<</if>>
			</div>
			<<set $stress = Math.clamp($stress, 0, $stressmax)>>
			<<set _showCaptionText to !$options.showCaptionText>>
			<<statbar $stress $stressmax _showCaptionText>>
			<div style="clear:both;"></div>
		</div>
	<</if>>
<</widget>>

<<widget "traumacaption">>
	<<if Number.isFinite($trauma)>>
		<div id="traumacaption" @title="'Trauma: ' + $trauma.toFixed(2)">
			<div @class="($options.showCaptionText is true ? '' : 'rightMeterText')">
				Trauma:
				<<if $options.showCaptionText is true>>
					<<if $trauma gte $traumamax>>
						<span class="red">You feel numb.</span>
					<<elseif $trauma gte ($traumamax / 5) * 4>>
						<span class="pink">You are tormented.</span>
					<<elseif $trauma gte ($traumamax / 5) * 3>>
						<span class="purple">You are disturbed.</span>
					<<elseif $trauma gte ($traumamax / 5) * 2>>
						<span class="blue">You are troubled.</span>
					<<elseif $trauma gte ($traumamax / 5) * 1>>
						<span class="lblue">You are nervous.</span>
					<<elseif $trauma gte 1>>
						<span class="teal">You are uneasy.</span>
					<<else>>
						<span class="green">You are healthy.</span>
					<</if>>
				<</if>>
			</div>
			<<set _showCaptionText to !$options.showCaptionText>>
			<<statbar $trauma $traumamax _showCaptionText>>
			<div style="clear:both;"></div>
		</div>
	<</if>>
<</widget>>

<<widget "innocencecaption">>
	<div id="innocencecaption">
		<div @class="($options.showCaptionText is true ? '' : 'rightMeterText')">
			Innocence:
			<<if $options.showCaptionText is true>>
				<<if $awareness gte 0>>
					<span class="red">You understand.</span>
				<<elseif $awareness gt -40>>
					<span class="pink">You are uncertain.</span>
				<<elseif $awareness gt -80>>
					<span class="purple">You are perplexed.</span>
				<<elseif $awareness gt -120>>
					<span class="blue">You are curious.</span>
				<<elseif $awareness gt -160>>
					<span class="lblue">You are trusting.</span>
				<<elseif $awareness gt -200>>
					<span class="teal">You are naive.</span>
				<<else>>
					<span class="green">You are oblivious.</span>
				<</if>>
			<</if>>
		</div>
		<<set _showCaptionText to !$options.showCaptionText>>
		<<statbarinverted $awareness -200 _showCaptionText>>
		<div style="clear:both;"></div>
	</div>
<</widget>>

<<widget "controlcaption">>
	<<if Number.isFinite($control)>>
		<div id="controlcaption" @title="'Control: ' + $control.toFixed(2)">
			<div @class="($options.showCaptionText is true ? '' : 'rightMeterText')">
				Control:
				<<if $options.showCaptionText is true>>
					<<if $possessed>>
						<<if $control gte $controlmax>>
							<span class="green">You are in control.</span>
						<<elseif $control gte ($controlmax / 5) * 4>>
							<span class="teal">You are nearly in control.</span>
						<<elseif $control gte ($controlmax / 5) * 3>>
							<span class="lblue">You are struggling.</span>
						<<elseif $control gte ($controlmax / 5) * 2>>
							<span class="blue">Your body feels hollow.</span>
						<<elseif $control gte ($controlmax / 5) * 1>>
							<span class="purple">Your mind is numb.</span>
						<<elseif $control gte 1>>
							<span class="pink">You're being puppeteered.</span>
						<<else>>
							<span class="red">You're helpless.</span>
						<</if>>
					<<else>>
						<<if $control gte $controlmax>>
							<span class="green">You are confident.</span>
						<<elseif $control gte ($controlmax / 5) * 4>>
							<span class="teal">You are insecure.</span>
						<<elseif $control gte ($controlmax / 5) * 3>>
							<span class="lblue">You are worried.</span>
						<<elseif $control gte ($controlmax / 5) * 2>>
							<span class="blue">You are anxious.</span>
						<<elseif $control gte ($controlmax / 5) * 1>>
							<span class="purple">You are scared.</span>
						<<elseif $control gte 1>>
							<span class="pink">You are frightened.</span>
						<<else>>
							<span class="red">You are terrified.</span>
						<</if>>
					<</if>>
				<</if>>
			</div>
			<<set _showCaptionText to !$options.showCaptionText>>
			<<statbarinverted $control $controlmax _showCaptionText>>
			<div style="clear:both;"></div>
		</div>
	<</if>>
<</widget>>

<<widget "arousalcaption">>
	<<if Number.isFinite($arousal)>>
		<div id="arousalcaption" @title="'Arousal: ' + $arousal.toFixed(2)">
			<div @class="($options.showCaptionText is true ? '' : 'rightMeterText')">
				Arousal:
				<<if $options.showCaptionText is true>>
					<<if $arousal gte $arousalmax>>
						<span class="red">You shake with arousal.</span>
					<<elseif $arousal gte ($arousalmax / 5) * 4>>
						<span class="pink">A heat rises within.</span>
					<<elseif $arousal gte ($arousalmax / 5) * 3>>
						<span class="purple">You feel horny.</span>
					<<elseif $arousal gte ($arousalmax / 5) * 2>>
						<span class="blue">You feel lustful.</span>
					<<elseif $arousal gte $arousalmax / 5>>
						<span class="lblue">You feel aroused.</span>
					<<elseif $arousal gte 1>>
						<span class="teal">You feel sensual.</span>
					<<else>>
						<span class="green">You feel cold.</span>
					<</if>>
				<</if>>
			</div>
			<<set _showCaptionText to !$options.showCaptionText>>
			<<statbar $arousal $arousalmax _showCaptionText>>
			<div style="clear:both;"></div>
		</div>
	<</if>>
<</widget>>

<<widget "allurecaption">>
	<<if Number.isFinite($allure)>>
		<div id="allurecaption" @title="'Allure: ' + $allure.toFixed(2)">
			<div @class="($options.showCaptionText is true ? '' : 'rightMeterText')">
				Allure:
				<<if $options.showCaptionText is true>>
					<<if $allure gte (6000 * $alluremod)>><span class="red">You look like you need to be ravaged.</span>
					<<elseif $allure gte (4000 * $alluremod)>><span class="pink">You look perverted.</span>
					<<elseif $allure gte (3000 * $alluremod)>><span class="purple">You look lewd.</span>
					<<elseif $allure gte (2000 * $alluremod)>><span class="blue">You stand out.</span>
					<<elseif $allure gte (1500 * $alluremod)>><span class="lblue">You attract attention.</span>
					<<elseif $allure gte (1000 * $alluremod)>><span class="teal">You attract glances.</span>
					<<else>><span class="green">You look unremarkable.</span>
					<</if>>
				<</if>>
			</div>
			<div @class="($options.showCaptionText is true ? 'meter' : 'rightMeter')">
				<<set $percent=Math.floor(($allure/(8000 * $alluremod))*100)>>
				<<if $allure gte (6000 * $alluremod)>>
				<<print '<div class="redbar" style="width:' + $percent + '%"></div>'>>
				<<elseif $allure gte (4000 * $alluremod)>>
				<<print '<div class="pinkbar" style="width:' + $percent + '%"></div>'>>
				<<elseif $allure gte (3000 * $alluremod)>>
				<<print '<div class="purplebar" style="width:' + $percent + '%"></div>'>>
				<<elseif $allure gte (2000 * $alluremod)>>
				<<print '<div class="bluebar" style="width:' + $percent + '%"></div>'>>
				<<elseif $allure gte (1500 * $alluremod)>>
				<<print '<div class="lbluebar" style="width:' + $percent + '%"></div>'>>
				<<elseif $allure gte (1000 * $alluremod)>>
				<<print '<div class="tealbar" style="width:' + $percent + '%"></div>'>>
				<<else>>
				<<print '<div class="greenbar" style="width:' + $percent + '%"></div>'>>
				<</if>>
			</div>

			<<if $allure gte 8000 * $alluremod>><<set $allure to 8000 * $alluremod>><</if>>
			<<if $alluretest is 1>>
				<<set $allure += 100000>>
			<<elseif $alluretest is 2>>
				<<set $allure -= 100000>>
			<</if>>

			<div style="clear:both;"></div>
		</div>
	<</if>>
<</widget>>

<<widget "updateallure">>
	<<run new Wikifier(null, '<<calculateallure>>')>>
	<<run $('#allurecaption').replaceWith(new Wikifier(null, '<<allurecaption>>').output)>>
<</widget>>

<<widget "oxygencaption">>
	<div id="oxygencaption">
		<<if _args[0] is true>>
			<div @class="($options.showCaptionText is true ? '' : 'rightMeterText')">
				Air:
			</div>
			<<set _showCaptionText to !$options.showCaptionText>>
		<<else>>
			<<unset _showCaptionText>>
		<</if>>
		<<statbarinverted $oxygen $oxygenmax _showCaptionText>>
		<div style="clear:both;"></div>
	</div>
<</widget>>

<<widget "flashbacktown">>
	<span class="red">You hear a car horn blare somewhere in the distance, and you panic. Phantom tendrils probe your body and restrict your limbs as a wordless voice jeers and promises endless debasement. It lasts only a moment, but the impression of violation remains.</span>
	<<garousal>><<gstress>><<gtrauma>><<arousal 600>><<stress 12>><<trauma 6>>
	<br><br>
<</widget>>

<<widget "flashbackhome">>
	<span class="red">You hear a car drive past, and you panic. Phantom tendrils probe your body and restrict your limbs as a wordless voice jeers and promises endless debasement. It lasts only a moment, but the impression of violation remains.</span>
	<<garousal>><<gstress>><<gtrauma>><<arousal 600>><<stress 6>><<trauma 6>>
	<br><br>
<</widget>>

<<widget "flashbackbeach">>
	<span class="red">You hear a gull squawk, and you panic. Phantom tendrils probe your body and restrict your limbs as a wordless voice jeers and promises endless debasement. It lasts only a moment, but the impression of violation remains.</span>
	<<garousal>><<gstress>><<gtrauma>><<arousal 600>><<stress 6>><<trauma 6>>
	<br><br>
<</widget>>

<<widget "flashbackunderground">>
	<span class="red">You feel a tremor through the earth, and you panic. Phantom tendrils probe your body and restrict your limbs as a wordless voice jeers and promises endless debasement. It lasts only a moment, but the impression of violation remains.</span>
	<<garousal>><<gstress>><<gtrauma>><<arousal 600>><<stress 6>><<trauma 6>>
	<br><br>
<</widget>>

<<widget "flashbackschool">>
	<span class="red">You remember the last time you were molested at school, and you panic. Phantom tendrils probe your body and restrict your limbs as a wordless voice jeers and promises endless debasement. It lasts only a moment, but the impression of violation remains.</span>
	<<garousal>><<gstress>><<gtrauma>><<arousal 600>><<stress 6>><<trauma 6>>
	<br><br>
<</widget>>

<<widget "drunkcaption">>
	<<if $drunk gt 0>>
		<<set $_colour to getColourClassFromPercentage($drunk * (100 / 480))>>
		<<set $_barColour to $_colour + "bar">>
		<<set $_percent to Math.floor(($drunk/1000)*100)>>
		<<set $_barWidth to `width:${$_percent}%`>>

		<div id="drunkcaption">
			<div @class="($options.showCaptionText is true ? '' : 'rightMeterText')">
				<<if $options.showCaptionText is true>>
					<<set $_drunk_level to Math.clamp(Math.floor($drunk / 120), 0, 4) * 120>>
					<<switch $_drunk_level>>
						<<case 0>><span @class="$_colour">You are woozy.</span>
						<<case 120>><span @class="$_colour">You are tipsy.</span>
						<<case 240>><span @class="$_colour">You are drunk.</span>
						<<case 360>><span @class="$_colour">You are smashed.</span>
						<<case 480>><span @class="$_colour">You are wasted.</span>
					<</switch>>
				<<else>>
					Drunk:
				<</if>>
			</div>
			<div @class="($options.showCaptionText is true ? 'meter' : 'rightMeter')">
				<div @class="$_barColour" @style="$_barWidth"></div>
			</div>
			<div style="clear:both;"></div>
		</div>
	<</if>>
<</widget>>

<<widget "druggedcaption">>
	<<if $drugged gt 0>>
		<<set $_colour to getColourClassFromPercentage($drugged / 5)>>
		<<set $_barColour to $_colour + "bar">>
		<<set $_percent to Math.floor(($drugged/1000)*100)>>
		<<set $_barWidth to `width:${$_percent}%`>>

		<div id="druggedcaption">
			<div @class="($options.showCaptionText is true ? '' : 'rightMeterText')">
				<<if $options.showCaptionText is true>>
					<span class="pink">A lewd warmth fills you.</span>
				<<else>>
					Drugged:
				<</if>>
			</div>
			<div @class="($options.showCaptionText is true ? 'meter' : 'rightMeter')">
				<div @class="$_barColour" @style="$_barWidth"></div>
			</div>
			<div style="clear:both;"></div>
		</div>
	<</if>>
<</widget>>

<<widget "hallucinogencaption">>
	<<if $hallucinogen gt 0>>
		<<set $_colour to getColourClassFromPercentage($hallucinogen / 5)>>
		<<set $_barColour to $_colour + "bar">>
		<<set $_percent to Math.floor(($hallucinogen/1000)*100)>>
		<<set $_barWidth to `width:${$_percent}%`>>

		<div id="hallucinogencaption">
			<div @class="($options.showCaptionText is true ? '' : 'rightMeterText')">
				<<if $options.showCaptionText is true>>
					<span class="purple">Your perception is altered</span>
				<<else>>
					Hallucinogen:
				<</if>>
			</div>
			<div @class="($options.showCaptionText is true ? 'meter' : 'rightMeter')">
				<div @class="$_barColour" @style="$_barWidth"></div>
			</div>
			<div style="clear:both;"></div>
		</div>
	<</if>>
<</widget>>

<<widget "paincaption">>
	<<if Number.isFinite($pain)>>
		<div id="paincaption" @title="'Pain: ' + $pain.toFixed(2)">
			<div @class="($options.showCaptionText is true ? '' : 'rightMeterText')">
				Pain:
				<<if $options.showCaptionText is true>>
					<<if $pain gte 100 and $willpowerpain is 0>><span class="red">You sob uncontrollably.</span>
					<<elseif $pain gte 80>><span class="pink">You cry and whimper.</span>
					<<elseif $pain gte 60>><span class="purple">You are crying.</span>
					<<elseif $pain gte 40>><span class="blue">Tears run down your face.</span>
					<<elseif $pain gte 20>><span class="lblue">Tears well in your eyes.</span>
					<<elseif $pain gte 1>><span class="teal">You are upset.</span>
					<<else>><span class="green">You feel okay.</span>
					<</if>>
				<</if>>
			</div>
			<div @class="($options.showCaptionText is true ? 'meter' : 'rightMeter')">
				<<set $percent=Math.floor(($pain/100)*100)>>
				<<if $pain gte 100 and $willpowerpain is 0>>
				<<print '<div class="redbar" style="width:' + $percent + '%"></div>'>>
				<<elseif $pain gte 80>>
				<<print '<div class="pinkbar" style="width:' + $percent + '%"></div>'>>
				<<elseif $pain gte 60>>
				<<print '<div class="purplebar" style="width:' + $percent + '%"></div>'>>
				<<elseif $pain gte 40>>
				<<print '<div class="bluebar" style="width:' + $percent + '%"></div>'>>
				<<elseif $pain gte 20>>
				<<print '<div class="lbluebar" style="width:' + $percent + '%"></div>'>>
				<<elseif $pain gte 1>>
				<<print '<div class="tealbar" style="width:' + $percent + '%"></div>'>>
				<<else>>
				<<print '<div class="greenbar" style="width:' + $percent + '%"></div>'>>
				<</if>>
			</div>
			<div style="clear:both;"></div>
		</div>
	<</if>>
<</widget>>

<<widget "raped">>
	<<if $rapeavoid is 1 and $consensual is 0 and $gamemode isnot "soft">>
		<<set $rapeavoid to 0>><<rapestat>>
		<<if $enemytype is "man" and !($npc.length is 1 and $npc[0] is "Eden")>>
			<<famerape $enemynomax>>
		<</if>>
		<<if $awareness lte 200>>
			<<awareness 5>>
		<<elseif $awareness lte 400>>
			<<awareness 1>>
		<</if>>
		<<if $enemytype is "beast" or $enemytype is "struggle">>
			<<set $beastrapestat += 1>>
			<<if $awareness lte 300>>
				<<awareness 1>>
			<</if>>
		<</if>>
		<<if $enemytype is "tentacles">>
			<<set $tentaclerapestat += 1>>
		<</if>>
		<<if $enemytype is "tentacles" or $enemytype is "struggle">>
			<<if $awareness lte 400>>
				<<awareness 1>>
			<</if>>
		<</if>>
		<<controlloss>>
	<<elseif $sexavoid is 1 and $consensual is 1>>
		<<set $sexavoid to 0>>
		<<if $enemytype is "man" and !($npc.length is 1 and $npc[0] is "Eden")>>
			<<famesex $enemynomax>>
		<</if>>
		<<controlloss>>
	<</if>>
<</widget>>

<<widget "molested">>
	<<if $gamemode is "soft">>
		<<set $consensual to 1>>
	<<elseif $molestavoid is 1 and $consensual is 0>>
		<<set $molestavoid to 0>>
		<<moleststat>>

		<<if $flashbacks gte 1>>
			<<switch $location>>
				<<case "town">><<if $flashbacktown is 0>><<set $flashbacktown to 14>><</if>>
				<<case "home">><<if $flashbackhome is 0>><<set $flashbackhome to 14>><</if>>
				<<case "beach">><<if $flashbackbeach is 0>><<set $flashbackbeach to 14>><</if>>
				<<case "school">><<if $flashbackschool is 0>><<set $flashbackschool to 14>><</if>>
				<<case "underground">><<if $flashbackunderground is 0>><<set $flashbackunderground to 14>><</if>>
			<</switch>>
		<</if>>
		<<if $awareness lte 200>>
			<<awareness 5>>
		<<elseif $awareness lte 400>>
			<<awareness 1>>
		<</if>>
		<<if $enemytype is "beast" or $enemytype is "struggle">>
			<<if $awareness lte 300>>
				<<awareness 1>>
			<</if>>
		<</if>>
		<<if $enemytype is "tentacles" or $enemytype is "struggle">>
			<<if $awareness lte 400>>
				<<awareness 1>>
			<</if>>
		<</if>>
	<</if>>
<</widget>>

<<widget "consensual">>
	<<if $awareness lte 200>>
		<<awareness 5>>
	<<elseif $awareness lte 400>>
		<<awareness 1>>
	<</if>>
	<<if $enemytype is "beast" or $enemytype is "struggle">>
		<<if $awareness lte 300>>
			<<awareness 1>>
		<</if>>
	<</if>>
	<<if $enemytype is "tentacles">>
		<<if $awareness lte 400>>
			<<awareness 1>>
		<</if>>
	<</if>>
	<<set $trueconsensual to 1>>
	<<if $npc.length is 1 and ($npc[0] is "Robin" and $NPCName[$NPCNameList.indexOf("Robin")].dom lte 10 and $debug is 1) or ($npc[0] is "Sydney" and $NPCName[$NPCNameList.indexOf("Sydney")].purity gte 50)>>
		<<npc_submissive>>
	<</if>>
<</widget>>

<<widget "controlloss">>
	<<if $gamemode is "soft">>
	<<elseif $consensual is 0>>
		<<set $pullaway to 0>>
		<<set $novaginal to 0>>
		<<set $noanal to 0>>
		<<set $nopenile to 0>>
		<<if $control gt 1>>
			<<if $molesttrait gte 1 and $rapeavoid is 1>>
			<<else>>
				<<set $controlstart to $control>><<control -25>>
				<<if $control gte ($controlmax * 0.74)>>
					<span class="purple">Your sense of control wavers.</span>
				<<elseif $control gte ($controlmax * 0.49)>>
					<span class="purple">Your sense of control falters.</span>
				<<elseif $control gte ($controlmax * 0.24)>>
					<span class="pink">Your sense of control cracks.</span>
				<<elseif $control gte 1>>
					<span class="pink">Your sense of control breaks down.</span>
				<<else>>
					<span class="red">Your sense of control shatters.</span>
				<</if>>
			<</if>>
		<</if>>
	<</if>>
<</widget>>

<<widget "beastescape">>
	<<trauma 12>><<pain 6>><<stress 12>>
	<<set $worn.over_lower.integrity -= 20>>
	<<set $worn.over_upper.integrity -= 20>>
	<<set $worn.lower.integrity -= 20>>
	<<set $worn.upper.integrity -= 20>>
	<<set $worn.under_lower.integrity -= 20>>
	<<set $worn.under_upper.integrity -= 20>>
	<<bruise full>>
	<<gtrauma>><<gpain>><<gstress>>
<</widget>>

<<widget "weatherdisplay">>
	<<set _weather_display to (Time.season == "winter" ? "winter" : "normal")>>
	/* 北极星模组 */
	<<if $location is "snowforest" or $location is "glacier">>
		<<set _weather_display to "winter">>
	<</if>>
	/* 北极星 */
	<<if $options.images is 1>>
		<<if Time.dayState is "night" and (isBloodmoon() or $forcedBloodmoon)>>
			<<set _dayStateWithBloodMoon to "_bloodmoon">>
		<<else>>
			<<set _dayStateWithBloodMoon to "_"+Time.dayState>>
		<</if>>
		<<set _dayState to "_"+Time.dayState>>

		<<set _imgLoc to 'img/misc/'>>
		<<set _imgSky to 'img/misc/'>>
		<<set _imgWeather to 'img/misc/'>>

		/* sky (upmost part) */
		<<if $location is "tentworld">>
			<img id="daystate" @src="_imgSky+'tentsky'+_dayState+'.png'">
		<<else>>
			<img id="daystate" @src="_imgSky+'sky'+_dayStateWithBloodMoon+'.png'">
		<</if>>

		/* weather (middle part) */
		<<if $location is "tentworld">>
			<img id="weather" @src="_imgWeather+'tentsky'+_dayState+'.png'">
		<<else>>
			<<switch $weather>>
				<<case "clear">>	<img id="weather" @src="_imgWeather+'clear'+_dayState+'.png'">
				<<case "overcast">> <img id="weather" @src="_imgWeather+_weather_display + '/overcast'+_dayState+'.png'">
				<<case "rain">>		<img id="weather" @src="_imgWeather+'rain'+_dayState+'.gif'">
				<<case "snow">>		<img id="weather" @src="_imgWeather+'winter/snow'+_dayState+'.gif'">
			<</switch>>
		<</if>>

		/* location (bottom part) */
		<<switch $location>>
			<<case "adult_shop">>
				<<getadultshopstate>>
				<<if Time.dayState is "day" and $adultshopstate isnot "closed">>
					<img id="location" @src="_imgLoc + _weather_display + '/sex_shop'+_dayState+'_open.gif'">
				<<elseif Time.dayState is "night" or Time.dayState is "dusk">>
					<img id="location" @src="_imgLoc + _weather_display + '/sex_shop'+_dayState+'.gif'">
				<<else>>
					<img id="location" @src="_imgLoc + _weather_display + '/sex_shop'+_dayState+'.png'">
				<</if>>
			<<case "alex_cottage">>
				<img id="location" @src="_imgLoc + _weather_display + '/alex_cottage'+_dayState+'.png'">
			<<case "alex_farm">>
				<<if $bus is "woodland">>
					<<if Time.dayState is "night" or Time.dayState is "dawn">>
						<img id="location" @src="_imgLoc + _weather_display + '/forest'+_dayState+'.png'">
					<<else>>
						<img id="location" @src="_imgLoc + _weather_display + '/forest'+_dayStateWithBloodMoon+'.gif'">
					<</if>>
				<<else>>
					<img id="location" @src="_imgLoc + _weather_display + '/alex_farm'+_dayState+'.png'">
				<</if>>
			<<case "alley">>
				<<if $bus is "industrial">>
					<img id="location" @src="_imgLoc + _weather_display + '/indust_alley'+_dayStateWithBloodMoon+'.gif'">
				<<elseif $bus is "residential">>
					<img id="location" @src="_imgLoc + _weather_display + '/resi_alley'+_dayStateWithBloodMoon+'.gif'">
				<<else>>
					<img id="location" @src="_imgLoc + _weather_display + '/alley'+_dayStateWithBloodMoon+'.gif'">
				<</if>>
			<<case "arcade">>
				<img id="location" @src="_imgLoc + _weather_display + '/arcade'+_dayState+'.png'">
			<<case "asylum">>
				<<if $hallucinations gte 1>>
					<img id="location" @src="_imgLoc + _weather_display + '/asylum'+_dayState+'vfast.gif'">
				<<else>>
					<img id="location" @src="_imgLoc + _weather_display + '/asylum'+_dayState+'slow.gif'">
				<</if>>
			<<case "beach" "chalets">>
				<img id="location" @src="_imgLoc + _weather_display + '/beach'+_dayState+'.gif'">
			<<case "brothel">>
				<img id="location" @src="_imgLoc + _weather_display + '/brothel'+_dayState+'.png'">
			<<case "cabin">>
				<<if Time.season is "winter">>
					<img id="location" @src="_imgLoc + _weather_display + '/cabin'+_dayState+'.png'">
				<<else>>
					<img id="location" @src="_imgLoc + _weather_display + '/cabin'+_dayState+'.gif'">
				<</if>>
			<<case "cafe">>
				<<if $chef_state gte 9>>
					<img id="location" @src="_imgLoc + _weather_display + '/cafe_renovated'+_dayState+'.png'">
				<<elseif $chef_state gte 7>>
					<img id="location" @src="_imgLoc + _weather_display + '/cafe_construction'+_dayState+'.png'">
				<<else>>
					<img id="location" @src="_imgLoc + _weather_display + '/cafe'+_dayState+'.png'">
				<</if>>
			<<case "canal">>
				<img id="location" @src="_imgLoc + _weather_display + '/canal'+_dayState+'.gif'">
			<<case "churchyard">>
				<img id="location" @src="_imgLoc + _weather_display + '/churchyard'+_dayState+'.png'">
			<<case "compound">>
				<img id="location" @src="_imgLoc + _weather_display + '/compound'+_dayState+'.gif'">
			<<case "dance_studio">>
				<img id="location" @src="_imgLoc + _weather_display + '/dance_studio'+_dayState+'.png'">
			<<case "dilapidated_shop">>
				<img id="location" @src="_imgLoc + _weather_display + '/dilapidated_shop'+_dayState+'.png'">
			<<case "docks">>
				<img id="location" @src="_imgLoc + _weather_display + '/docks'+_dayState+'.png'">
			<<case "drain">>
				<img id="location" @src="_imgLoc + _weather_display + '/drain.gif'">
			<<case "estate">>
				<img id="location" @src="_imgLoc + _weather_display + '/remy_farm'+_dayState+'.png'">
			<<case "factory">>
				<<if Time.dayState is "night">>
					<img id="location" @src="_imgLoc + _weather_display + '/factory'+_dayState+'.png'">
				<<else>>
					<img id="location" @src="_imgLoc + _weather_display + '/factory'+_dayState+'.gif'">
				<</if>>
			<<case "farm">>
				<img id="location" @src="_imgLoc + _weather_display + '/farm'+_dayState+'.png'">
			<<case "flats">>
				<img id="location" @src="_imgLoc + _weather_display + '/flats'+_dayState+'.png'">
			<<case "forest">>
				<<if Time.dayState is "night" or Time.dayState is "dawn">>
					<img id="location" @src="_imgLoc + _weather_display + '/forest'+_dayState+'.png'">
				<<else>>
					<img id="location" @src="_imgLoc + _weather_display + '/forest'+_dayStateWithBloodMoon+'.gif'">
				<</if>>
			<<case "forest_shop">>
				<img id="location" @src="_imgLoc + _weather_display + '/forest_shop'+_dayState+'.png'">
			<<case "home">>
				<img id="location" @src="_imgLoc + _weather_display + '/home'+_dayStateWithBloodMoon+'.gif'">
			<<case "hospital">>
				<img id="location" @src="_imgLoc + _weather_display + '/hospital'+_dayState+'.png'">
			<<case "island">>
				<img id="location" @src="_imgLoc + _weather_display + '/island'+_dayState+'.gif'">
			<<case "kylar_manor">>
				<img id="location" @src="_imgLoc + _weather_display + '/kylar_manor'+_dayState+'.png'">
			<<case "lake">>
				<img id="location" @src="_imgLoc + _weather_display + '/lake'+_dayStateWithBloodMoon+'.gif'">
			<<case "lake_ruin">>
				<img id="location" @src="_imgLoc + _weather_display + '/ruins'+_dayStateWithBloodMoon+'.gif'">
			<<case "landfill">>
				<img id="location" @src="_imgLoc + _weather_display + '/landfill'+_dayState+'.png'">
			<<case "meadow">>
				<img id="location" @src="_imgLoc + _weather_display + '/meadow'+_dayState+'.gif'">
			<<case "mines">>
				<img id="location" @src="_imgLoc + _weather_display + '/underground'+_dayState+'.png'">
			<<case "moor">>
				<img id="location" @src="_imgLoc + _weather_display + '/moor'+_dayState+'.gif'">
			<<case "museum">>
				<img id="location" @src="_imgLoc + _weather_display + '/museum'+_dayState+'.png'">
			<<case "night_monster_lair">>
				<img id="location" @src="_imgLoc + _weather_display + '/night_monster_lair'+_dayState+'.gif'">
			<<case "office_building">>
				<img id="location" @src="_imgLoc + _weather_display + '/office'+_dayState+'.png'">
			<<case "park">>
				<<if Time.season is "winter">>
					<img id="location" @src="_imgLoc + _weather_display + '/park'+_dayState+'.png'">
				<<else>>
					<img id="location" @src="_imgLoc + _weather_display + '/park'+_dayState+'.gif'">
				<</if>>
			<<case "police_station">>
				<img id="location" @src="_imgLoc + _weather_display + '/police_station'+_dayState+'.png'">
			<<case "pound">>
				<<if Time.dayState is "night">>
					<img id="location" @src="_imgLoc + _weather_display + '/dog_pound'+_dayState+'.png'">
				<<else>>
					<img id="location" @src="_imgLoc + _weather_display + '/dog_pound'+_dayState+'.gif'">
				<</if>>
			<<case "pool">>
				<img id="location" @src="_imgLoc + _weather_display + '/pool'+_dayState+'.gif'">
			<<case "prison">>
				<img id="location" @src="_imgLoc + _weather_display + '/prison'+_dayStateWithBloodMoon+'.gif'">
			<<case "promenade">>
				<img id="location" @src="_imgLoc + _weather_display + '/promenade_beach'+_dayState+'.gif'">
			<<case "pub">>
				<img id="location" @src="_imgLoc + _weather_display + '/pub'+_dayState+'.png'">
			<<case "riding_school">>
				<img id="location" @src="_imgLoc + _weather_display + '/riding_school'+_dayState+'.gif'">
			<<case "school">>
				<img id="location" @src="_imgLoc + _weather_display + '/school'+_dayState+'.png'">
			<<case "sea">>
				<img id="location" @src="_imgLoc + _weather_display + '/ocean'+_dayState+'.gif'">
			<<case "seapirates">>
				<img id="location" @src="_imgLoc + _weather_display + '/boat'+_dayState+'.gif'">
			<<case "sepulchre">>
				<img id="location" @src="_imgLoc + _weather_display + '/sepulchre'+_dayState+'.png'">
			<<case "sewers">>
				<img id="location" @src="_imgLoc + _weather_display + '/sewers'+_dayState+'.gif'">
			<<case "shopping_centre">>
				<img id="location" @src="_imgLoc + _weather_display + '/shopping_centre'+_dayState+'.png'">
			<<case "spa">>
				<img id="location" @src="_imgLoc + _weather_display + '/spa'+_dayState+'.gif'">
			<<case "strip_club">>
				<img id="location" @src="_imgLoc + _weather_display + '/strip_club'+_dayState+'.png'">
			<<case "temple">>
				<<if Time.year is 361>>
					<img id="location" @src="_imgLoc + _weather_display + '/temple'+_dayState+'_old.png'">
				<<else>>
					<img id="location" @src="_imgLoc + _weather_display + '/temple'+_dayState+'.png'">
				<</if>>
			<<case "tentworld">>
				<img id="location" @src="_imgLoc + _weather_display + '/tentacles'+_dayState+'.gif'">
			<<case "tower" "castle">>
				<img id="location" @src="_imgLoc + _weather_display + '/tower'+_dayStateWithBloodMoon+'.gif'">
			<<case "town">>
				<<if Time.dayState is "dusk">>
					<img id="location" @src="_imgLoc + _weather_display + '/town'+_dayState+'.png'">
				<<else>>
					<img id="location" @src="_imgLoc + _weather_display + '/town'+_dayState+'.gif'">
				<</if>>
			<<case "underground">>
				<img id="location" @src="_imgLoc + _weather_display + '/underground'+_dayState+'.png'">
			<<case "wolf_cave">>
				<img id="location" @src="_imgLoc + _weather_display + '/wolf_cave'+_dayState+'.png'">
			/* 北极星模组 */
			<<case "desert">>
				<img id="location" @src="_imgLoc + _weather_display + '/desert'+Time.dayState+'.gif'">
			<<case "snowforest">>
			    <<if Time.dayState is "day" or Time.dayState is "dusk">>
				    <img id="location" @src="_imgLoc + _weather_display + '/forest'+Time.dayState+'.gif'">
				<<else>>
				    <img id="location" @src="_imgLoc + _weather_display + '/forest'+Time.dayState+'.png'">
				<</if>>
			<<case "glacier">>
				<img id="location" @src="_imgLoc + _weather_display + '/underground'+Time.dayState+'.png'">
			<<case "old_cemetery">>
				<<if Time.dayState is "night">>
					<img id="location" @src="_imgLoc + _weather_display + (_bloodmoon ? '/cemetery_blood.png' : '/cemetery_night.png')">
				<<else>>
					<img id="location" @src="_imgLoc + _weather_display + '/cemetery'+_dayState+'.png'">
				<</if>>
			<<case "hive">>
				<img id="location" @src="_imgLoc + _weather_display + '/hive'+_dayState+'.png'">
			<<case "bog">>
				<img id="location" @src="_imgLoc + _weather_display + '/bog'+_dayState+'.png'">
			<<case "seadive">>
				<img id="location" @src="_imgLoc + _weather_display + '/ocean'+_dayState+'.gif'">
			/* 北极星 */

		<</switch>>
	<<else>>
		<<switch Time.dayState>>
			<<case "day">>
				<<switch $weather>>
					<<case "clear">>It's a bright and sunny day.
					<<case "rain">>It's a rainy day.
					<<case "overcast">>Clouds are hiding the sun.
					<<case "snow">>It's a snowy day.
				<</switch>>
			<<case "night">>
				<<switch $weather>>
					<<case "clear">>The stars are shining.
					<<case "rain">>It's a rainy night.
					<<case "overcast">>All starlight is blocked by the clouds.
					<<case "snow">>It's a snowy night.
				<</switch>>
			<<case "dawn">>
				<<switch $weather>>
					<<case "clear">>The sun is rising.
					<<case "rain">>It's a rainy morning.
					<<case "overcast">>It's a cloudy morning.
					<<case "snow">>It's a snowy morning.
				<</switch>>
			<<case "dusk">>
				<<switch $weather>>
					<<case "clear">>The sun is setting.
					<<case "rain">>It's a rainy evening.
					<<case "overcast">>It's cloudy evening.
					<<case "snow">>It's a snowy evening.
				<</switch>>
		<</switch>>
		<br>
	<</if>>
<</widget>>

<<widget "wearandtear">>
	<<if _args[0] is "dance">>
		<<if !$worn.over_upper.type.includes("dance")>>
			<<set $worn.over_upper.integrity -= 1>>
		<</if>>
		<<if !$worn.over_lower.type.includes("dance")>>
			<<set $worn.over_lower.integrity -= 1>>
		<</if>>
		<<if !$worn.upper.type.includes("dance")>>
			<<set $worn.upper.integrity -= 1>>
		<</if>>
		<<if !$worn.lower.type.includes("dance")>>
			<<set $worn.lower.integrity -= 1>>
		<</if>>
		<<if !$worn.under_lower.type.includes("dance")>>
			<<set $worn.under_lower.integrity -= 1>>
		<</if>>
		<<if !$worn.under_upper.type.includes("dance")>>
			<<set $worn.under_upper.integrity -= 1>>
		<</if>>
	<<else>>
		<<set $worn.over_upper.integrity -= 1>><<set $worn.over_lower.integrity -= 1>><<set $worn.upper.integrity -= 1>><<set $worn.lower.integrity -= 1>><<set $worn.under_lower.integrity -= 1>><<set $worn.under_upper.integrity -= 1>>
	<</if>>
<</widget>>

<<widget "dry_towel">>
	<<dry_full>>
	<<exposure>>
	<<if $exposed gte 1>>
		<<towelup>>
	<</if>>
<</widget>>

<<widget "towelup">>
	<<if $exposed gte 1>>
		<<if $upperwetstage gte 3>>
			<<upperwear 3>>
		<</if>>
		<<if $lowerwetstage gte 3>>
			<<lowerwear 3>>
		<</if>>
		<<if $worn.upper.exposed gte 1>>
			<<upperwear 14>>
		<<elseif $worn.lower.exposed gte 1>>
			<<lowerwear 3>>
		<</if>>
	<</if>>
<</widget>>

<<widget "towelupm">>
	<<if $exposed gte 1>>
		<<if $lowerwetstage gte 3>>
			<<lowerwear 3>>
		<</if>>
		<<if $worn.lower.exposed gte 1>>
			<<lowerwear 3>>
		<</if>>
	<</if>>
<</widget>>

<<widget "ragup">>
<<if $worn.upper.exposed gte 2>>
	<<upperwear 79>>
<</if>>

<<if $worn.lower.exposed gte 2>>
	<<lowerwear 71>>
<</if>>
<</widget>>

<<widget "plantupper">>
	<<if $worn.upper.exposed gte 2 and $worn.under_upper.exposed gte 1
	or $worn.upper.exposed gte 2 and $underupperwetstage gte 3
	or $upperwetstage gte 3 and $worn.under_upper.exposed gte 1
	or $upperwetstage gte 3 and $underupperwetstage gte 3
	or _args[0] is "force">>
		<<upperwear 6>>
	<</if>>
<</widget>>

<<widget "plantlower">>
	<<if $worn.lower.exposed gte 2 and $worn.under_lower.exposed gte 1
	or $worn.lower.exposed gte 2 and $underlowerwetstage gte 3
	or $lowerwetstage gte 3 and $worn.under_lower.exposed gte 1
	or $lowerwetstage gte 3 and $underlowerwetstage gte 3
	or _args[0] is "force">>
		<<lowerwear 8>>
	<</if>>
<</widget>>

<<widget "plantup">>
	<<if $worn.upper.exposed gte 2 and $worn.under_upper.exposed gte 1 or $upperwetstage gte 3 and $underupperwetstage gte 3>>
		<<upperwear 6>>
	<</if>>
	<<if $worn.lower.exposed gte 2 and $worn.under_lower.exposed gte 1 or $lowerwetstage gte 3 and $underlowerwetstage gte 3 or $lowerwetstage gte 3 and $worn.under_lower.exposed gte 1>>
		<<lowerwear 8>>
	<</if>>
<</widget>>

<<widget "schoolspareclothes">>
	<<if !$worn.upper.type.includes("school") or !$worn.lower.type.includes("school") and $worn.upper.set is $worn.lower.set>>
		<<upperwear 5>><<set $worn.upper.colour to either("black", "blue", "brown", "green", "pink", "purple", "red", "tangerine", "teal", "white", "yellow")>><<set $worn.upper.integrity /= 2>>
	<</if>>
	<<if !$worn.lower.type.includes("school")>>
		<<if $clothingselector is "m">>
			<<lowerwear 6>><<set $worn.lower.colour to either("black", "blue", "brown", "green", "pink", "purple", "red", "tangerine", "teal", "white", "yellow")>><<set $worn.lower.integrity /= 2>>
		<<else>>
			<<lowerwear 7>><<set $worn.lower.colour to either("black", "blue", "brown", "green", "pink", "purple", "red", "tangerine", "teal", "white", "yellow")>><<set $worn.lower.integrity /= 2>>
		<</if>>
	<</if>>
<</widget>>

<<widget "spareschoolswimsuit">>
	<<underupperwear 2>><<set $worn.under_upper.colour to either("black", "blue", "brown", "green", "pink", "purple", "red", "tangerine", "teal", "white", "yellow")>><<set $worn.under_upper.integrity /= 2>>
	<<set $worn.under_lower.colour to clone($worn.under_upper.colour)>><<set $worn.under_lower.integrity /= 2>>
<</widget>>

<<widget "spareschoolswimshorts">>
	<<underlowerwear 7>><<set $worn.under_lower.colour to either("black", "blue", "brown", "green", "pink", "purple", "red", "tangerine", "teal", "white", "yellow")>><<set $worn.under_lower.integrity /= 2>>
<</widget>>

<<widget "exposure">>
	<<if !["beach","pool","sea","lake","lake_ruin"].includes($location)>>
		<<set $libertine to 0>>
	<<else>>
		<<set $libertine to 1>>
	<</if>>
	<<if $location is "dance_studio" and $worn.under_lower.type.includes("dance") and $worn.under_upper.type.includes("dance")>>
		<<set $libertine to 1>>
	<</if>>

	<<set $worn.over_upper.exposedcarry to $worn.over_upper.exposed>>
	<<set $worn.over_lower.exposedcarry to $worn.over_lower.exposed>>
	<<set $worn.upper.exposedcarry to $worn.upper.exposed>>
	<<set $worn.lower.exposedcarry to $worn.lower.exposed>>
	<<set $worn.under_lower.exposedcarry to $worn.under_lower.exposed>>
	<<set $worn.under_upper.exposedcarry to $worn.under_upper.exposed>>

	<<if $upperwetstage gte 3>>
		<<set $worn.upper.exposed to 2>>
	<</if>>
	<<if $lowerwetstage gte 3>>
		<<set $worn.lower.exposed to 2>>
	<</if>>
	<<if $underlowerwetstage gte 3>>
		<<set $worn.under_lower.exposed to 1>>
	<</if>>
	<<if $underupperwetstage gte 3>>
		<<set $worn.under_upper.exposed to 1>>
	<</if>>

	<<exposedcheck>>

	<<set $exposed to 0>>
	<<if $worn.upper.exposed gte 1 and $worn.over_upper.exposed gte 1>>
		<<if $player.gender_appearance is "m">>
		<<elseif $libertine gte 1 or $possessed or ["plaid school pinafore","school pinafore"].includes($worn.lower.name)>>
		<<else>>
			<<set $exposed to 1>>
		<</if>>
	<</if>>
	<<if $worn.upper.exposed gte 2 and $worn.over_upper.exposed gte 2 and $player.gender_appearance isnot "m">>
		<<if $possessed>>
		<<elseif ["plaid school pinafore","school pinafore"].includes($worn.lower.name)>>
		<<elseif $libertine is 1>>
			<<set $topless to 1>>
		<<else>>
			<<set $exposed to 1>>
		<</if>>
	<<else>>
		<<set $topless to 0>>
	<</if>>
	<<if $worn.lower.exposed gte 1 and $worn.over_lower.exposed gte 1>>
		<<if $libertine gte 1 or $possessed>>
		<<else>>
			<<set $exposed to 1>>
		<</if>>
	<</if>>

	<<if $worn.lower.exposed gte 2 and $worn.over_lower.exposed gte 2>>
		<<if $possessed>>
		<<elseif $worn.under_lower.exposed gte 1>>
			<<set $exposed to 2>>
		<<elseif $libertine gte 1>>
		<<else>>
			<<set $exposed to 1>>
		<</if>>
	<</if>>

	<<set $worn.over_upper.exposed to $worn.over_upper.exposedcarry>>
	<<set $worn.over_lower.exposed to $worn.over_lower.exposedcarry>>
	<<set $worn.upper.exposed to $worn.upper.exposedcarry>>
	<<set $worn.lower.exposed to $worn.lower.exposedcarry>>
	<<set $worn.under_lower.exposed to $worn.under_lower.exposedcarry>>
	<<set $worn.under_upper.exposed to $worn.under_upper.exposedcarry>>
<</widget>>

<<widget "integritycheck">>
	<<if $worn.over_upper.name isnot "naked">>
		<<if $worn.over_upper.integrity lte 0>>
			<<set $worn.over_upper.type.push("broken")>>
			<<if _args[0] isnot "no_text">>
				<span class="lewd">Your $worn.over_upper.name <<upperplural>> ripped into scraps<<if $worn.upper.exposed gte 2>>, exposing your <<breasts>><</if>>.</span>
				<br>
			<</if>>
		<<overupperruined>><<clothesruinstat>><<if $worn.upper.exposed gte 2>><<set $upperoff to 0>><</if>>
		<</if>>
	<</if>>
	<<if $worn.over_lower.name isnot "naked">>
		<<if $worn.over_lower.integrity lte 0>>
			<<set $worn.over_lower.type.push("broken")>>
			<<if _args[0] isnot "no_text">>
				<span class="lewd">Your $worn.over_lower.name <<upperplural>> ripped into scraps<<if $worn.lower.exposed gte 2>>, exposing your <<undies>><</if>>.</span>
				<br>
			<</if>>
		<<overlowerruined>><<clothesruinstat>><<if $worn.lower.exposed gte 2>><<set $upperoff to 0>><</if>>
		<</if>>
	<</if>>
	<<if $worn.upper.name isnot "naked">>
		<<if $worn.upper.integrity lte 0>>
			<<set $worn.upper.type.push("broken")>>
			<<if _args[0] isnot "no_text">>
				<span class="lewd">Your $worn.upper.name <<upperplural>> ripped into scraps, exposing your <<breasts>>.</span>
				<br>
			<</if>>
		<<upperruined>><<clothesruinstat>><<set $upperoff to 0>>
		<</if>>
	<</if>>
	<<if $worn.lower.name isnot "naked">>
		<<if $worn.lower.integrity lte 0>>
			<<set $worn.lower.type.push("broken")>>
			<<if _args[0] isnot "no_text">>
				<span class="lewd">Your $worn.lower.name <<lowerplural>> ripped into scraps, exposing your <<undies>>.</span>
				<br>
			<</if>>
		<<lowerruined>><<clothesruinstat>><<set $loweroff to 0>>
		<</if>>
	<</if>>
	<<if $worn.under_upper.name isnot "naked">>
		<<if $worn.under_upper.integrity lte 0>>
			<<set $worn.under_upper.type.push("broken")>>
			<<if _args[0] isnot "no_text">>
				<span class="lewd">Your $worn.under_upper.name <<underupperplural>> ripped into scraps, exposing your <<breasts>>.</span>
				<br>
			<</if>>
		<<underupperruined>><<clothesruinstat>><<set $underupperoff to 0>>
		<</if>>
	<</if>>
	<<if $worn.under_lower.name isnot "naked">>
		<<if $worn.under_lower.integrity lte 0>>
			<<set $worn.under_lower.type.push("broken")>>
			<<if _args[0] isnot "no_text">>
				<span class="lewd">Your $worn.under_lower.name <<underlowerplural>> ripped into scraps, exposing your <<if $worn.genitals.name isnot "naked">>$worn.genitals.name.<<else>><<genitals>>.<</if>></span>
				<br>
			<</if>>
		<<underlowerruined>><<clothesruinstat>><<set $underloweroff to 0>>
		<</if>>
	<</if>>
	<<if $worn.genitals.name isnot "naked">>
		<<if $worn.genitals.integrity lte 0>>
			<<set _chastityBreak to 1>>
			<<if _args[0] isnot "no_text">>
				<span class="lewd">Your $worn.genitals.name breaks, exposing your <<genitals>>.</span>
				<br>
			<</if>>
			<<if playerChastity()>>
				<<set $worn.genitals.type.push("broken")>>
				<<if $vaginalchastityparasite isnot 0>>
					<span class="pink">With the <<print $worn.genitals.name>> gone, the $vaginalchastityparasite fall out of your vagina.</span>
					<br>
					<<set $vaginalchastityparasite to 0>>
				<</if>>
				<<if $penilechastityparasite isnot 0>>
					<span class="pink">With the <<print $worn.genitals.name>> gone, the $penilechastityparasite fall off of your penis.</span>
					<br>
					<<set $penilechastityparasite to 0>>
				<</if>>
				<<if $analchastityparasite isnot 0>>
					<span class="pink">With the <<print $worn.genitals.name>> gone, the $analchastityparasite fall out of your anus.</span>
					<br>
					<<set $analchastityparasite to 0>>
				<</if>>
				<<if playerChastity("anus")>>
					<<set $worn.genitals.anal_shield to 0>>
				<</if>>
			<</if>>
			<<genitalsruined>><<clothesruinstat>>
		<</if>>
	<</if>>
<</widget>>

<<widget "arm_unbind">>
	<<set $rightboundcarry to 0>>
	<<set $leftboundcarry to 0>>
	<<set $leftarm to 0>>
	<<set $rightarm to 0>>
	<<if $worn.upper.type.includes("binding")>>
		<<set _unbind_check to 1>>
		<<if $worn.upper.set is $worn.lower.set>>
			<<set $worn.lower.type.push("broken")>>
			<<lowerruined>>
		<</if>>
		<<set $worn.upper.type.push("broken")>>
		<<upperruined>>
	<</if>>
<</widget>>

<<widget "unbind">>
	<<set $rightboundcarry to 0>>
	<<set $leftboundcarry to 0>>
	<<set $leftarm to 0>>
	<<set $rightarm to 0>>
	<<remove_shackle>>
	<<leg_unbind>>
	<<if $head is "bound">>
		<<set $head to 0>>
	<</if>>
	<<if $worn.upper.type.includes("binding")>>
		<<set _unbind_check to 1>>
		<<if $worn.upper.set is $worn.lower.set>>
			<<set $worn.lower.type.push("broken")>>
			<<lowerruined>>
		<</if>>
		<<set $worn.upper.type.push("broken")>>
		<<upperruined>>
	<</if>>
<</widget>>

<<widget "bind">>
	<<set $leftarm to "bound">>
	<<set $rightarm to "bound">>
<</widget>>

<<widget "legbind">>
	<<set $leftleg to "bound">>
	<<set $rightleg to "bound">>
	<<set $feetuse to "bound">>
<</widget>>

<<widget "leg_unbind">>
	<<set $leftleg to 0>>
	<<set $rightleg to 0>>
	<<set $feetuse to 0>>
<</widget>>

<<widget "remove_shackle">>
	<<if $worn.feet.type.includes("shackle")>>
		<<set $worn.feet.type.push("broken")>>
		<<feetruined>>
		<<leg_unbind>>
	<</if>>
<</widget>>

<<widget "shackle_feet">>
	<<feetwear 3>>
	<<legbind>>
<</widget>>

<<widget "headbind">>
	<<set $head to "bound">>
<</widget>>

<<widget "bindings">>
	<<if $leftarm is "bound" and $position isnot "wall">><<set $leftboundcarry to 1>><</if>>
	<<if $rightarm is "bound" and $position isnot "wall">><<set $rightboundcarry to 1>><</if>>
	<<if $rightboundcarry is 1 and $rightarm isnot "bound">>
		<<set $rightarm to "bound">>
	<</if>>
	<<if $leftboundcarry is 1 and $leftarm isnot "bound">>
		<<set $leftarm to "bound">>
	<</if>>
<</widget>>

<<widget "water">>
	<<if !waterproofCheck($worn.upper) and !$worn.upper.type.includes("naked") and _args[0] isnot "waist">>
		<<set $upperwet to 200>>
	<</if>>
	<<if !waterproofCheck($worn.lower) and !$worn.lower.type.includes("naked")>>
		<<set $lowerwet to 200>>
	<</if>>
	<<if !waterproofCheck($worn.upper) and !waterproofCheck($worn.under_upper) and !$worn.under_upper.type.includes("naked") and _args[0] isnot "waist">>
		<<set $underupperwet to 200>>
	<</if>>
	<<if !waterproofCheck($worn.lower) and !waterproofCheck($worn.under_lower) and !$worn.under_lower.type.includes("naked")>>
		<<set $underlowerwet to 200>>
	<</if>>

	<<waterwash>>
	<<set $inwater to 1>>
	<<set _water_warmth to 0>>
	<<if $location isnot "sea" and $outside is 1 and Time.season is "winter">>
		<<if $worn.upper.type.includes("diving") or $worn.under_upper.type.includes("diving")>>
			<<set _water_warmth += 1>>
		<</if>>
		<<if $worn.lower.type.includes("diving") or $worn.under_lower.type.includes("diving")>>
			<<set _water_warmth += 1>>
		<</if>>
	<<else>>
		<<set _water_warmth to 2>>
	<</if>>
<</widget>>

<<widget "wet_all">>
	<<wet_upper>>
	<<wet_lower>>
	/* 北极星模组 */
	<<if $options.bjx_eventTF and $slime gt 0>>
	    <<violence 50>>
		<span class='green'>你最好当心点水!</span><<gpain>><br><br>
	<</if>>
	/* 北极星 */
<</widget>>

<<widget "wet_upper">>
	<<for _slot range ["over_upper", "upper", "under_upper"]>>
		<<if waterproofCheck($worn[_slot])>>
			/* if the clothing is waterproof, protect it and layers below from getting wet */
			<<break>>
		<<elseif !$worn[_slot].type.includes("naked")>>
			/* skin wetness system is not implemented... yet? */
			<<set V[_slot + "wet"] to 200>>
			<<set V[_slot + "wetstage"] to 3>>
			/* 北极星模组 */
			<<if $options.bjx_eventTF and $slime gt 0>>
				<<violence 20>>
			<</if>>
			/* 北极星 */
		<</if>>
	<</for>>
<</widget>>

<<widget "wet_lower">>
	<<for _slot range ["over_lower", "lower", "under_lower"]>>
		<<if waterproofCheck($worn[_slot])>>
			<<break>>
		<<elseif !$worn[_slot].type.includes("naked")>>
			<<set V[_slot + "wet"] to 200>>
			<<set V[_slot + "wetstage"] to 3>>
			/* 北极星模组 */
			<<if $options.bjx_eventTF and $slime gt 0>>
				<<violence 20>>
			<</if>>
			/* 北极星 */
		<</if>>
	<</for>>
<</widget>>

<<widget "storecleanup">>
	<<unset $action_unclad_over_outfit>>
	<<unset $action_unclad_over_upper>>
	<<unset $action_unclad_over_lower>>
	<<unset $action_unclad_outfit>>
	<<unset $action_unclad_upper>>
	<<unset $action_unclad_lower>>
	<<unset $action_unclad_under_outfit>>
	<<unset $action_unclad_under_lower>>
	<<unset $action_unclad_under_upper>>
	<<unset $action_unclad_legs>>
	<<unset $action_unclad_feet>>
	<<unset $action_unclad_neck>>
	<<unset $action_unclad_head>>
	<<unset $action_unclad_face>>
	<<unset $action_unclad_hands>>
<</widget>>

<<widget "undiestrauma">>
	<<if !$worn.under_lower.type.includes("naked")>>
		<<gtrauma>><<gstress>><<trauma 1>><<stress 1>>
	<<else>>
		<<gtrauma>><<gstress>><<trauma 3>><<stress 3>>
	<</if>>
<</widget>>

<<widget "goo">>
	<<goocount>>

	<<if $liquidoutsidecount gte 1>>
		<!-- Variables constructed: $semenoutsidecount, $goooutsidecount, $nectaroutsidecount -->
		<<set _liquid to formatList(
			["semen", "goo", "nectar"].filter(stuff => V[stuff + "outsidecount"] gte 1)
			).replace("goo", "slime")
		>>
		<<if $liquidoutsidecount gte 100>>
			<span class="red">Lewd fluid drenches you from head to toe.</span>
			<br>
		<<elseif $liquidoutsidecount gte 25>>
			<span class="pink">You are drenched in _liquid.</span>
			<br>
		<<elseif $liquidoutsidecount gte 20>>
			<span class="purple">You are soaked with _liquid.</span>
			<br>
		<<elseif $liquidoutsidecount gte 15>>
			<span class="purple">Your skin is slick with _liquid.</span>
			<br>
		<<elseif $liquidoutsidecount gte 10>>
			<span class="purple">You are wet with _liquid.</span>
			<br>
		<<elseif $liquidoutsidecount gte 5>>
			<span class="purple">Your skin is moist with _liquid.</span>
			<br>
		<<elseif $liquidoutsidecount gte 1>>
			<span class="blue">You feel _liquid on your skin.</span>
			<br>
		<</if>>
	<</if>>

	<<if $player.bodyliquid.vagina.goo gte 1 or $player.bodyliquid.vagina.semen gte 1 or $player.bodyliquid.vagina.nectar>>
		<!-- Variables constructed: $player.bodyliquid.vagina.semen, $player.bodyliquid.vagina.goo, $player.bodyliquid.vagina.nectar -->
		<<set _liquid to formatList(
			["semen", "goo", "nectar"].filter(stuff => V.player.bodyliquid.vagina[stuff] gte 1)
			).replace("goo", "slime")
		>>
		<<set _liquidUpper to _liquid.toUpperFirst()>>
		<<if _liquid.includes(" ")>>
			<<set _s to "">>
		<<else>>
			<<set _s to "s">>
		<</if>>
		<<switch Math.clamp(setup.bodyliquid.combined("vagina"), 1, 5)>>
			<<case 5>>
				<span class="red">Your womb overflows with _liquid.</span>
				<br>
			<<case 4>>
				<span class="pink">Your <<pussy>> overflows with _liquid.</span>
				<br>
			<<case 3>>
				<span class="pink">_liquidUpper flow_s from your <<pussy>>.</span>
				<br>
			<<case 2>>
				<span class="pink">_liquidUpper stream_s from your <<pussy>>.</span>
				<br>
			<<case 1>>
				<span class="pink">_liquidUpper drip_s from your <<pussy>>.</span>
				<br>
		<</switch>>
	<</if>>

	<<if $player.bodyliquid.anus.goo gte 1 or $player.bodyliquid.anus.semen gte 1 or $player.bodyliquid.anus.nectar>>
		<!-- Variables constructed: $player.bodyliquid.anus.semen, $player.bodyliquid.anus.goo, $player.bodyliquid.anus.nectar -->
		<<set _liquid to formatList(
			["semen", "goo", "nectar"].filter(stuff => V.player.bodyliquid.anus[stuff] gte 1)
			).replace("goo", "slime")
		>>
		<<set _liquidUpper to _liquid.toUpperFirst()>>
		<<if _liquid.includes(" ")>>
			<<set _s to "">>
		<<else>>
			<<set _s to "s">>
		<</if>>
		<<switch Math.clamp(setup.bodyliquid.combined("anus"), 1, 5)>>
			<<case 5>>
				<span class="red">Your bowels overflow with _liquid.</span>
				<br>
			<<case 4>>
				<span class="pink">Your <<bottom>> overflows with _liquid.</span>
				<br>
			<<case 3>>
				<span class="pink">_liquidUpper flow_s from your <<bottom>>.</span>
				<br>
			<<case 2>>
				<span class="pink">_liquidUpper stream_s from your <<bottom>>.</span>
				<br>
			<<case 1>>
				<span class="pink">_liquidUpper drip_s from your <<bottom>>.</span>
				<br>
		<</switch>>
	<</if>>

	<<if $player.bodyliquid.mouth.goo gte 1 or $player.bodyliquid.mouth.semen gte 1 or $player.bodyliquid.mouth.nectar>>
		<!-- Variables constructed: $player.bodyliquid.mouth.semen, $player.bodyliquid.mouth.goo, $player.bodyliquid.mouth.nectar -->
		<<set _liquid to formatList(
			["semen", "goo", "nectar"].filter(stuff => V.player.bodyliquid.mouth[stuff] gte 1)
			).replace("goo", "slime")
		>>
		<<set _liquidUpper to _liquid.toUpperFirst()>>
		<<if _liquid.includes(" ")>>
			<<set _s to "">>
		<<else>>
			<<set _s to "s">>
		<</if>>
		<<set _liquidUpper to _liquid.toUpperFirst()>>
		<<switch Math.clamp(setup.bodyliquid.combined("mouth"), 1, 5)>>
			<<case 5>>
				<span class="red">You keep coughing up _liquid.</span>
				<br>
			<<case 4>>
				<span class="pink">_liquidUpper dribble_s down your chin.</span>
				<br>
			<<case 3>>
				<span class="pink">_liquidUpper line_s the sides of your throat.</span>
				<br>
			<<case 2>>
				<span class="pink">_liquidUpper layer_s the back of your throat.</span>
				<br>
			<<case 1>>
				<span class="pink">The taste of _liquid permeate_s your mouth.</span>
				<br>
		<</switch>>
	<</if>>
<</widget>>

<<widget "clampgoo">>
	<<for _bodypart range setup.bodyliquid.bodyparts>>
		<<set $player.bodyliquid[_bodypart]["goo"] to Math.clamp($player.bodyliquid[_bodypart]["goo"], 0, 5)>>
		<<set $player.bodyliquid[_bodypart]["semen"] to Math.clamp($player.bodyliquid[_bodypart]["semen"], 0, 5)>>
		<<set $player.bodyliquid[_bodypart]["nectar"] to Math.clamp($player.bodyliquid[_bodypart]["nectar"], 0, 5)>>
	<</for>>
<</widget>>

<<widget "goocount">>
	<<clampgoo>>
	<<set $goocount to $player.bodyliquid.neck.goo + $player.bodyliquid.rightarm.goo + $player.bodyliquid.leftarm.goo + $player.bodyliquid.thigh.goo + $player.bodyliquid.bottom.goo + $player.bodyliquid.tummy.goo + $player.bodyliquid.chest.goo + $player.bodyliquid.face.goo + $player.bodyliquid.hair.goo + $player.bodyliquid.feet.goo + $player.bodyliquid.vaginaoutside.goo + ($player.bodyliquid.vagina.goo * 3) + ($player.bodyliquid.penis.goo * 3) + ($player.bodyliquid.anus.goo * 3) + ($player.bodyliquid.mouth.goo * 3)>>
	<<set $semencount to $player.bodyliquid.neck.semen + $player.bodyliquid.rightarm.semen + $player.bodyliquid.leftarm.semen + $player.bodyliquid.thigh.semen + $player.bodyliquid.bottom.semen + $player.bodyliquid.tummy.semen + $player.bodyliquid.chest.semen + $player.bodyliquid.face.semen + $player.bodyliquid.hair.semen + $player.bodyliquid.feet.semen + $player.bodyliquid.vaginaoutside.semen + ($player.bodyliquid.vagina.semen * 3) + ($player.bodyliquid.penis.semen * 3) + ($player.bodyliquid.anus.semen * 3) + ($player.bodyliquid.mouth.semen * 3)>>
	<<set $nectarcount to $player.bodyliquid.neck.nectar + $player.bodyliquid.rightarm.nectar + $player.bodyliquid.leftarm.nectar + $player.bodyliquid.thigh.nectar + $player.bodyliquid.bottom.nectar + $player.bodyliquid.tummy.nectar + $player.bodyliquid.chest.nectar + $player.bodyliquid.face.nectar + $player.bodyliquid.hair.nectar + $player.bodyliquid.feet.nectar + $player.bodyliquid.vaginaoutside.nectar + ($player.bodyliquid.vagina.nectar * 3) + ($player.bodyliquid.penis.nectar * 3) + ($player.bodyliquid.anus.nectar * 3) + ($player.bodyliquid.mouth.nectar * 3)>>
	<<set $liquidcount to $goocount + $semencount + $nectarcount>>

	<<set $goooutsidecount to $player.bodyliquid.neck.goo + $player.bodyliquid.rightarm.goo + $player.bodyliquid.leftarm.goo + $player.bodyliquid.thigh.goo + $player.bodyliquid.bottom.goo + $player.bodyliquid.tummy.goo + $player.bodyliquid.chest.goo + $player.bodyliquid.face.goo + $player.bodyliquid.hair.goo + $player.bodyliquid.feet.goo + $player.bodyliquid.vaginaoutside.goo + ($player.bodyliquid.penis.goo * 3)>>
	<<set $semenoutsidecount to $player.bodyliquid.neck.semen + $player.bodyliquid.rightarm.semen + $player.bodyliquid.leftarm.semen + $player.bodyliquid.thigh.semen + $player.bodyliquid.bottom.semen + $player.bodyliquid.tummy.semen + $player.bodyliquid.chest.semen + $player.bodyliquid.face.semen + $player.bodyliquid.hair.semen + $player.bodyliquid.feet.semen + $player.bodyliquid.vaginaoutside.semen + ($player.bodyliquid.penis.semen * 3)>>
	<<set $nectaroutsidecount to $player.bodyliquid.neck.nectar + $player.bodyliquid.rightarm.nectar + $player.bodyliquid.leftarm.nectar + $player.bodyliquid.thigh.nectar + $player.bodyliquid.bottom.nectar + $player.bodyliquid.tummy.nectar + $player.bodyliquid.chest.nectar + $player.bodyliquid.face.nectar + $player.bodyliquid.hair.nectar + $player.bodyliquid.feet.nectar + $player.bodyliquid.vaginaoutside.nectar + ($player.bodyliquid.penis.nectar * 3)>>
	<<set $liquidoutsidecount to $goooutsidecount + $semenoutsidecount + $nectaroutsidecount>>

	<<set $goobodycount to $player.bodyliquid.thigh.goo + $player.bodyliquid.bottom.goo + $player.bodyliquid.tummy.goo + $player.bodyliquid.chest.goo + $player.bodyliquid.vaginaoutside.goo + ($player.bodyliquid.vagina.goo * 3) + ($player.bodyliquid.penis.goo * 3) + ($player.bodyliquid.anus.goo * 3)>>
	<<set $semenbodycount to $player.bodyliquid.thigh.semen + $player.bodyliquid.bottom.semen + $player.bodyliquid.tummy.semen + $player.bodyliquid.chest.semen + $player.bodyliquid.vaginaoutside.semen + ($player.bodyliquid.vagina.semen * 3) + ($player.bodyliquid.penis.semen * 3) + ($player.bodyliquid.anus.semen * 3)>>
	<<set $nectarbodycount to $player.bodyliquid.thigh.nectar + $player.bodyliquid.bottom.nectar + $player.bodyliquid.tummy.nectar + $player.bodyliquid.chest.nectar + $player.bodyliquid.vaginaoutside.nectar + ($player.bodyliquid.vagina.nectar * 3) + ($player.bodyliquid.penis.nectar * 3) + ($player.bodyliquid.anus.nectar * 3)>>
	<<set $liquidbodycount to $goobodycount + $semenbodycount + $nectarbodycount>>
<</widget>>

<<widget "outergoo">>
	<<bodyliquid "neck" "goo">>
	<<bodyliquid "rightarm" "goo">>
	<<bodyliquid "leftarm" "goo">>
	<<bodyliquid "thigh" "goo">>
	<<bodyliquid "bottom" "goo">>
	<<bodyliquid "tummy" "goo">>
	<<bodyliquid "chest" "goo">>
	<<bodyliquid "face" "goo">>
	<<bodyliquid "hair" "goo">>
	<<bodyliquid "feet" "goo">>
<</widget>>

<<widget "waist_goo">>
	<<bodyliquid "feet" "goo" 5>>
	<<bodyliquid "bottom" "goo" 5>>
	<<bodyliquid "thigh" "goo" 5>>
	<<if $player.penisExist>>
		<<bodyliquid "penis" "goo" 5>>
	<</if>>
	<<if $player.vaginaExist>>
		<<bodyliquid "vaginaoutside" "goo" 5>>
	<</if>>
<</widget>>

<<widget "random_goo">>
	<<set $_rng to random (0, 9)>> <!-- 1-10 but 0 indexed -->
	<<set $_part_text to [
		"neck", "right arm", "left arm", "thigh", "bottom",
		"tummy", "chest", "face", "hair", "feet"
		].select($_rng)>>
	<<set $_part to $_part_text.replace(" ","")>>
	<<set $player.bodyliquid[$_part].goo += 1>>

	It <<print either("splatters onto your", "coats your", "lands on your", "splashes your")>>
	<span class="purple">$_part_text.</span>
<</widget>>

<<widget "random_semen">>
	<<set $_rng to random (0, 9)>> <!-- 1-10 but 0 indexed -->
	<<set $_part_text to [
		"neck", "right arm", "left arm", "thigh", "bottom",
		"tummy", "chest", "face", "hair", "feet"
		].select($_rng)>>
	<<set $_part to $_part_text.replace(" ","")>>
	<<set $player.bodyliquid[$_part].semen += 1>>

	It <<print either("splatters onto your", "coats your", "lands on your", "splashes your")>>
	<span class="purple">$_part_text.</span>
<</widget>>

<<widget "random_goo_head">>
	<<set $_rng to random (0, 3)>> <!-- 1-10 but 0 indexed -->
	<<set $_part_text to [
		"neck", "chest", "face", "hair"
		].select($_rng)>>
	<<set $_part to $_part_text.replace(" ","")>>
	<<set $player.bodyliquid[$_part].goo += 1>>

	It <<print either("splatters onto your", "coats your", "lands on your", "splashes your")>>
	<span class="purple">$_part_text.</span>
<</widget>>

<<widget "random_semen_head">>
	<<set $_rng to random (0, 3)>> <!-- 1-10 but 0 indexed -->
	<<set $_part_text to [
		"neck", "chest", "face", "hair"
		].select($_rng)>>
	<<set $_part to $_part_text.replace(" ","")>>
	<<set $player.bodyliquid[$_part].semen += 1>>

	It <<print either("splatters onto your", "coats your", "lands on your", "splashes your")>>
	<span class="purple">$_part_text.</span>
<</widget>>

<<widget "washmakeup">>
	<<if $makeup.lipstick != 0 or $makeup.eyeshadow != 0 or ($makeup.mascara != 0 and !$makeup.mascara.includes('waterproof')) or $makeup.concealer != 0>>
		<<set $makeupWashed = 1>>
		<<set $makeup.lipstick = 0>>
		<<set $makeup.eyeshadow = 0>>
		<<if $makeup.mascara and !$makeup.mascara.includes('waterproof')>>
			<<set $makeup.mascara = 0>>
			<<set $makeup.mascara_running = 0>>
		<</if>>
		<<set $makeup.concealer = 0>>
	<</if>>
<</widget>>

<<widget "waterwash">>
	<<if $combat isnot 1>>
		<<for _bodypart range setup.bodyliquid.bodyparts>>
			<<if $player.bodyliquid[_bodypart]["goo"] gte 1>><<set $waterwash += 1>><<set $allure += 500>><<bodyliquid _bodypart "goo" -1>><</if>>
			<<if $player.bodyliquid[_bodypart]["semen"] gte 1>><<set $waterwash += 1>><<set $allure += 500>><<bodyliquid _bodypart "semen" -1>><</if>>
			<<if $player.bodyliquid[_bodypart]["nectar"] gte 1>><<set $waterwash += 1>><<set $allure += 500>><<bodyliquid _bodypart "nectar" -1>><</if>>
		<</for>>
		<<washRecordedSperm "vagina" "pc">>
		<<washRecordedSperm "anus" "pc">>
	<</if>>

	<<if $waterwash gte 10>>
		<span class="lewd">Copious amounts of lewd fluid washes into the water. You hope it doesn't attract attention.</span><br>
	<<elseif $waterwash gte 5>>
		<span class="lewd">Lots of lewd fluid washes into the water. You hope it doesn't attract attention.</span><br>
	<<elseif $waterwash gte 2>>
		<span class="lewd">Lewd fluid washes into the water. You hope it doesn't attract attention.</span><br>
	<<elseif $waterwash is 1>>
		<span class="lewd">Some lewd fluid washes into the water. You hope it doesn't attract attention.</span><br>
	<</if>>
	<<set $waterwash to 0>>

	<<washmakeup>>
<</widget>>

<<widget "wash">>
	<<washRecordedSperm "vagina" "pc">>
	<<washRecordedSperm "anus" "pc">>
	<<bodyliquid "clear">>
	<<if $parasite.right_thigh.name is "maggot">>
		<<removeparasite right_thigh>>
	<</if>>
	<<if $parasite.left_thigh.name is "maggot">>
		<<removeparasite left_thigh>>
	<</if>>
	<<if $parasite.right_arm.name is "maggot">>
		<<removeparasite right_arm>>
	<</if>>
	<<if $parasite.left_arm.name is "maggot">>
		<<removeparasite left_arm>>
	<</if>>
	<<if $parasite.tummy.name is "maggot">>
		<<removeparasite tummy>>
	<</if>>
	<<if $parasite.bottom.name is "maggot">>
		<<removeparasite bottom>>
	<</if>>

<<for _active_bodypart range setup.bodyparts>>
	<<if $skin[_active_bodypart].pen is "pen" or $skin[_active_bodypart].pen is "lipstick" or $skin[_active_bodypart].pen is "mud">>
		<<bodywriting_clear _active_bodypart>>
	<</if>>
<</for>>
<<washmakeup>>
<</widget>>

<<widget "wash_face">>
	<<bodyliquid "face" "semen" -5>>
	<<bodyliquid "face" "goo" -5>>
	<<bodyliquid "face" "nectar" -5>>
	<<if $skin.left_cheek.pen is "pen" or $skin.left_cheek.pen is "lipstick" or $skin.left_cheek.pen is "mud">>
		<<bodywriting_clear left_cheek>>
	<</if>>
	<<if $skin.right_cheek.pen is "pen" or $skin.right_cheek.pen is "lipstick" or $skin.right_cheek.pen is "mud">>
		<<bodywriting_clear right_cheek>>
	<</if>>
	<<if $skin.forehead.pen is "pen" or $skin.forehead.pen is "lipstick" or $skin.forehead.pen is "mud">>
		<<bodywriting_clear forehead>>
	<</if>>
	<<washmakeup>>
<</widget>>

<<widget "wash_mouth">>
	<<bodyliquid "mouth" "semen" -5>>
	<<bodyliquid "mouth" "goo" -5>>
	<<bodyliquid "mouth" "nectar" -5>>
<</widget>>

<<widget "tipset">>
	<<set $tip to random(1000, 3000)>>
	<<if $tip lte 2000>>
		<<set $tipreaction to "low">>
	<<else>>
		<<set $tipreaction to "mid">>
	<</if>>

	<<if _args[0] is "serving">>
		<!-- +20% for every visible clothing item with 'serving' tag -->
		<<set $_servingClothesCount to getVisibleClothesList().countWith(item => item.type.includes("serving"))>>
		<<set $tip += $tip * 0.2 * $_servingClothesCount>>
	<</if>>

	<<set $tip to $tipmod * $tip>>
	<<set $tip *= (1 + ($attractiveness / 10000))>>
	<<if $mathstrait gte 1>>
		<<set $tip *= (1 + ($mathstrait / 4))>>
	<</if>>

	<<set $tip to Math.trunc($tip)>>
	<<if $tip lt $tip_add>>
		<<set $tip to $tip_add>>
	<</if>>

	<<if $tip gte 10000 and _args[0] isnot "body">>
		<<set $tip to 2000 * Math.round( $tip / 2000.0 )>>
	<<elseif $tip gte 1000>>
		<<set $tip to 500 * Math.round( $tip / 500.0 )>>
	<<else>>
		<<set $tip to 50 * Math.round( $tip / 50.0 )>>
	<</if>>
	<<set $tip to Math.max( $tip, 50 )>>
<</widget>>

<<widget "tipreceive">>
	<span class="gold"><<if random(1, 10000) is 10000>>You gain Brouzouf<<else>>You make<</if>> <<printmoney $tip>>.</span>
	<<set $money += $tip>>
	<<if $tip gte 50000>>
		<<earnFeat "Negotiator">>
	<</if>>
	<<set $tip to 0>>
<</widget>>

<<widget "tip_neg">>
	You negotiate a price of <<printmoney $tip>>,
	<<if $tipreaction is "low">>
		less than you hoped for.
	<<else>>
		which sounds reasonable.
	<</if>>
<</widget>>

<<widget "tip_up">>
	<<He>> raises <<his>> offer to <<printmoney $tip>>.
<</widget>>

<<widget "passout">>
	<<set $stress -= 5000>>
	<<set $passoutstat += 1>>
	<<ruffleHair>>
<</widget>>

<<widget "vaginaraped">>
	<<if $NPCList[$vaginatarget] isnot undefined>>
		<<if $templePromised isnot $NPCList[$vaginatarget].fullDescription>>
			<<fallenTransform>> /*transformations.twee*/
		<</if>>
	<<else>>
		<<fallenTransform>>
	<</if>>
	<<set $vaginafucked to 1>>
<</widget>>

<<widget "penisraped">>
	<<if $NPCList[$penistarget] isnot undefined>>
		<<if $templePromised isnot $NPCList[$penistarget].fullDescription>>
			<<fallenTransform>> /*transformations.twee*/
		<</if>>
	<<else>>
		<<fallenTransform>>
	<</if>>
	<<set $penisfucked to 1>>
<</widget>>

<<widget "anusraped">>
	<<set $anusfucked to 1>>
<</widget>>

/* 北极星模组 */
<<widget "byinternalejac">>
	<<set $demonabsorb += 1>>
<</widget>>

<<widget "internalejac">>
    <<if $options.bjx_divine>>
	    <<set $demonejac += 1>>
	<<else>>
	    <<set $demonabsorb += 1>>
	<</if>>
<</widget>>

<<widget "hunterhotfluid">>
    <<if _args[0] and $demonhunter gte 2>>
        <<set _dmg = _args[0] * 100>>
		<<set $enemyhealth -= _dmg>>
		<<set _npctodefeat to []>>
		<span class="lustful">你滚烫的体液灼伤了来袭者。</span>
		<<if _args[1]>>
		    <<set _dmg0 = Math.clamp(_dmg, 0, $NPCList[_args[1]].health)>>
		    <<set $NPCList[_args[1]].health -= _dmg0>>
		    <<set _dmg -= _dmg0>>
		    <<if $enemyno gte 2 and $NPCList[_args[1]].health lte 0>>
				<<set _npctodefeat.push(_args[1])>>
			<</if>>
		<</if>>
		<<if _dmg gt 0>>
        	<<for _npctodamage to 0; _npctodamage lt $enemynomax; _npctodamage++>>
        		<<if $NPCList[_npctodamage].active is "active" and $NPCList[_npctodamage].stance isnot "defeated">>
        			<<set $NPCList[_npctodamage].health -= (_dmg/$enemyno)>>
        			<<if $enemyno gte 2 and $NPCList[_npctodamage].health lte 0>>
        				<<set _npctodefeat.push(_npctodamage)>>
        			<</if>>
        		<</if>>
        	<</for>>
    	<</if>>
    	<<for $_defeatcontroller to 0; $_defeatcontroller lt _npctodefeat.length; $_defeatcontroller++>>
    		<<if $enemyno gte 2>>
    		    <<defeatnpc _npctodefeat[$_defeatcontroller]>>
    		<</if>>
    	<</for>>
	<</if>>
<</widget>>
/* 北极星 */

<<widget "sexcheck">>/*Sets variable to 1 if the PC is penetrated, penetrating, or similar.*/
	<<if $vaginastate is "penetrated" or
	$anusstate is "penetrated" or
	$mouthstate is "penetrated" or
	$penisstate is "otheranus" or
	$penisstate is "penetrated" or
	$anusstate is "othermouth" or
	$vaginastate is "othermouth" or
	$penisstate is "othermouth" or
	$penisstate is "tentacle" or
	$penisstate is "tentacledeep" or
	$vaginastate is "tentacle" or
	$vaginastate is "tentacledeep" or
	$anusstate is "tentacle" or
	$anusstate is "tentacledeep" or
	$mouthstate is "tentacle" or
	$mouthstate is "tentacledeep">>
		<<set $current_sex to 1>>
	<<else>>
		<<set $current_sex to 0>>
	<</if>>
<</widget>>

<<widget "textmap">>
	<<if $options.mapMovement is true and !$possessed>>
	__Map__<br>
		|.....<a class="no-numberify mapmove" onclick="mapMove('Barb Street')" title="Barb Street">Ba</a> &#9866; <a class="no&#9866;numberify mapmove" onclick="mapMove('Cliff Street')" title="Cliff Street">Cl</a> &#9866; <a class="no&#9866;numberify mapmove" onclick="mapMove('Starfish Street')" title="Starfish Street">St</a> &#9866; <a class="no&#9866;numberify mapmove" onclick="mapMove('Mer Street')" title="Mer Street">Me</a><br>
		|..╱ ╲ ╱ ╲ ╱ ╲ ╱ ╲<br>
		|<a class="no&#9866;numberify mapmove" onclick="mapMove('Domus Street')" title="Domus Street">Do</a> <a class="no&#9866;numberify mapmove" onclick="mapMove('Residential alleyways')" title="ResidentialAlley">&#9866;</a> <a class="no&#9866;numberify mapmove" onclick="mapMove('Connudatus Street')" title="Connudatus Street">Co</a> <a class="no&#9866;numberify mapmove" onclick="mapMove('Commercial alleyways')" title="CommercialAlley">&#9866; </a><a class="no&#9866;numberify mapmove" onclick="mapMove('High Street')" title="High Street">Hi</a> <a class="no&#9866;numberify mapmove" onclick="mapMove('Park')" title="Park">&#9866;</a> <a class="no&#9866;numberify mapmove" onclick="mapMove('Oxford Street')" title="Oxford Street">Ox</a> <a class="no&#9866;numberify mapmove" onclick="mapMove('Industrial alleyways')" title="IndustrialAlley">&#9866;</a> <a class="no&#9866;numberify mapmove" onclick="mapMove('Harvest Street')" title="Harvest Street">Ha</a><br>
		|..╲ ╱ ╲ ╱ ╲ ╱ ╲ ╱<br>
		|.....<a class="no&#9866;numberify mapmove" onclick="mapMove('Danube Street')" title="Danube Street">Da</a> &#9866; <a class="no&#9866;numberify mapmove" onclick="mapMove('Wolf Street')" title="Wolf Street">Wo</a> &#9866; <a class="no&#9866;numberify mapmove" onclick="mapMove('Nightingale Street')" title="Nightingale Street">Ni</a> &#9866; <a class="no&#9866;numberify mapmove" onclick="mapMove('Elk Street')" title="Elk Street">El</a><br>
	<<else>>
		__Map__<br>
		|.....Ba &#9866; Cl &#9866; St &#9866; Me<br>
		|..╱ ╲ ╱ ╲ ╱ ╲ ╱ ╲<br>
		|Do &#9866; Co &#9866; Hi &#9866; Ox &#9866; Ha<br>
		|..╲ ╱ ╲ ╱ ╲ ╱ ╲ ╱<br>
		|.....Da &#9866; Wo &#9866; Ni &#9866; El<br>
	<</if>>
	<br>
<</widget>>

<<widget "map">>
	<<set $map.location to _args[0]>>
	<<if $options.images is 1 and $options.mapMovement is true and $options.mapLegacy isnot true and !$possessed>>
		<<set _boxLocations to [
			{ x: 1,		y: 46}, /*Domus				*/
			{ x: 38,	y: 9},	/*Barb				*/
			{ x: 38,	y: 83},	/*Danube			*/
			{ x: 63,	y: 46},	/*Connudatus		*/
			{ x: 88,	y: 9},	/*Cliff				*/
			{ x: 88,	y: 83},	/*Wolf				*/
			{ x: 114,	y: 46},	/*High				*/
			{ x: 146,	y: 9},	/*Starfish			*/
			{ x: 146,	y: 83},	/*Nightingale		*/
			{ x: 176,	y: 46},	/*Oxford			*/
			{ x: 204,	y: 9},	/*Mer				*/
			{ x: 204,	y: 83},	/*Elk				*/
			{ x: 230,	y: 46},	/*Harvest			*/
			{ x: 38,	y: 46},	/*Residential Alley	*/
			{ x: 88,	y: 46},	/*Commercial Alley	*/
			{ x: 146,	y: 46},	/*Park				*/
			{ x: 204,	y: 46}	/*Industrial Alley	*/
		]>>

		/*This version of sugarcube doesn't perform any processing inside of SVG elements, so we need to perform those actions ourselves inside a custom macro */
		<<svg 260 130>>
			<image x="2" xlink:href="img/misc/map.png"> </image>
			<image x="2" @xlink:href="'img/misc/maparrow' + $map.location + '.png'"> </image>

			<<for _i to 0; _i lt $map.arrayList.length; _i++>>
				<<set _canMoveTo = $debug || $map.available[$passage].includes($map.arrayList[_i])>>
				<<set _showMarker = $debug || ($options.mapMarkers && (_canMoveTo || $passage is $map.arrayList[_i]))>>

				<a class="mapmove"
						@onclick="'mapMove(V.map.arrayList[' + _i + ']);'"
						@alt="$map.arrayList[_i] + (_canMoveTo ? ' (0:05)' : '')"
						@title="$map.arrayList[_i] + (_canMoveTo ? ' (0:05)' : '')">

					<rect @x="_boxLocations[_i].x"
							@y="_boxLocations[_i].y"
							height="34"
							width="30"
							@style="'stroke:cyan;fill-opacity:0;stroke-opacity:' + (_showMarker ? '0.6' : '0') + ';'">
					</rect>
				</a>
			<</for>>
		<</svg>>

	<<elseif $options.images is 1 and $options.mapLegacy isnot true>>
		<svg width="260" height="130">
			<image x="2" xlink:href="img/misc/map.png"/>
			<image x="2" @xlink:href="'img/misc/maparrow'+$map.location+'.png'"/>
		</svg>
	<<elseif $options.images is 1>>
		<<if $options.mapMovement is true and !$possessed>>
			<!-- Image Map Generated by http://www.image-map.net/ -->
			<map id="town-image-map" name="town-image-map">
				<area class="no-numberify" alt="Barb Street" title="Barb Street" coords="62,20,39,42" shape="rect" onclick="mapMove('Barb Street')">
				<area class="no-numberify" alt="Domus Street" title="Domus Street" coords="2,75,26,49" shape="rect" onclick="mapMove('Domus Street')">
				<area class="no-numberify" alt="Danube Street" title="Danube Street" coords="33,110,70,84" shape="rect" onclick="mapMove('Danube Street')">
				<area class="no-numberify" alt="Wolf Street" title="Wolf Street" coords="86,117,114,86" shape="rect" onclick="mapMove('Wolf Street')">
				<area class="no-numberify" alt="High Street" title="High Street" coords="116,77,139,46" shape="rect" onclick="mapMove('High Street')">
				<area class="no-numberify" alt="Connudatus Street" title="Connudatus Street" coords="64,77,88,49" shape="rect" onclick="mapMove('Connudatus Street')">
				<area class="no-numberify" alt="Cliff Street" title="Cliff Street" coords="88,40,117,-1" shape="rect" onclick="mapMove('Cliff Street')">
				<area class="no-numberify" alt="Starfish Street" title="Starfish Street" coords="147,41,172,12" shape="rect" onclick="mapMove('Starfish Street')">
				<area class="no-numberify" alt="Nightingale Street" title="Nightingale Street" coords="143,115,170,82" shape="rect" onclick="mapMove('Nightingale Street')">
				<area class="no-numberify" alt="Oxford Street" title="Oxford Street" coords="170,73,203,45" shape="rect" onclick="mapMove('Oxford Street')">
				<area class="no-numberify" alt="Mer Street" title="Mer Street" coords="202,42,229,14" shape="rect" onclick="mapMove('Mer Street')">
				<area class="no-numberify" alt="Elk Street" title="Elk Street" coords="197,111,238,77" shape="rect" onclick="mapMove('Elk Street')">
				<area class="no-numberify" alt="Harvest Street" title="Harvest Street" coords="252,46,228,76" shape="rect" onclick="mapMove('Harvest Street')">
				<area class="no-numberify" alt="Industrial Alley" title="Industrial Alley" coords="225,73,209,53" shape="rect" onclick="mapMove('Industrial alleyways')">
				<area class="no-numberify" alt="Park" title="Park" coords="154,65,170,52" shape="rect" onclick="mapMove('Park')">
				<area class="no-numberify" alt="Commercial Alley" title="Commercial Alley" coords="94,69,110,56" shape="rect" onclick="mapMove('Commercial alleyways')">
				<area class="no-numberify" alt="Residential Alley" title="Residential Alley" coords="38,70,57,56" shape="rect" onclick="mapMove('Residential alleyways')">
			</map>
		<</if>>
		<div id="divmap"><img id="map" src="img/misc/map.png"><img id="maparrow" usemap="#town-image-map" @src="'img/misc/maparrow' + _args[0] + '.png'"></div>
	<<else>>
		<<textmap>>
	<</if>>
<</widget>>

<<widget "rentday">>
	<<set $_text_output to ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][$rentday-1]>>
	<<print $_text_output>>
<</widget>>

<<widget "tearup">>
	<<if $pain lte 20>>
		<<set $pain to 20>>
	<</if>>
<</widget>>

<<widget "roomoptions">>
	<<if $sexStats.pills.boughtOnce is true or $sexStats.pills["pills"]["Dr Harper\'s prescription"].owned gte 1 or $sexStats.pills["pills"]["asylum\'s prescription"].owned gte 1>>
		<<pillicon>><<link [[Check your pills|PillCollection]]>><<set $pillsExitPassage to $passage>><<endevent>><</link>>
		<br>
	<</if>>
<</widget>>

<<widget "christmas_options">>
	<<if $christmas_wrap is 1>>
		<<switch $christmas_gift_robin>>
			<<case "shirt_unwrapped">>
				<<gifticon "shirt">><<link [[Wrap Robin's shirt and shorts (0:10)|Bedroom Robin Wrap]]>><<pass 10>><<set $christmas_gift_robin to "shirt">><<set $christmas_gift_robin_wrapped to 1>><</link>>
				<br>
			<<case "sundress_unwrapped">>
				<<gifticon "sundress">><<link [[Wrap Robin's sundress (0:10)|Bedroom Robin Wrap]]>><<pass 10>><<set $christmas_gift_robin to "sundress">><<set $christmas_gift_robin_wrapped to 1>><</link>>
				<br>
			<<case "kimono_unwrapped">>
				<<gifticon "kimono">><<link [[Wrap Robin's kimono (0:10)|Bedroom Robin Wrap]]>><<pass 10>><<set $christmas_gift_robin to "kimono">><<set $christmas_gift_robin_wrapped to 1>><</link>>
				<br>
			<<case "tuxedo_set_unwrapped">>
				<<gifticon "tuxedo">><<link [[Wrap Robin's tuxedo (0:10)|Bedroom Robin Wrap]]>><<pass 10>><<set $christmas_gift_robin to "tuxedo">><<set $christmas_gift_robin_wrapped to 1>><</link>>
				<br>
			<<case "gothic_gown_unwrapped">>
				<<gifticon "gothic">><<link [[Wrap Robin's gothic gown (0:10)|Bedroom Robin Wrap]]>><<pass 10>><<set $christmas_gift_robin to "gothic gown">><<set $christmas_gift_robin_wrapped to 1>><</link>>
				<br>
			<<case "christmas_unwrapped">>
				<<gifticon "christmas hat">><<link [[Wrap Robin's Christmas outfit (0:10)|Bedroom Robin Wrap]]>><<pass 10>><<set $christmas_gift_robin to "christmas">><<set $christmas_gift_robin_wrapped to 1>><</link>>
				<br>
		<</switch>>
		<<if $christmas_gift is "clothes_unwrapped">>
			<<gifticon "christmas">><<link [[Wrap the orphans' gifts (3:00)|Bedroom Orphans Clothes Wrap]]>><<pass 180>><<set $christmas_gift to "clothes">><</link>>
			<br>
		<</if>>
	<</if>>
	<<if $christmas is 1 and !$christmas_wraith>>
		<<rngWraith 1>>
	<</if>>
<</widget>>


<<widget "encountersteal">>
	<<rng>>
	<<if isPubfameTaskAccepted("morgan") and $npc.includes("Morgan")>>
		<<pubfameComplete "morgan" "steal">>
		<<combatskulduggeryskilluse>><<combatcontrol 10>><<gcombatcontrol>>
	<<elseif isPubfameTaskAccepted("hospital") and $pubfame.hospital.active is 1>>
		<<pubfameComplete "hospital" "steal">>
		<<crimeUp 20 "petty">><<combatskulduggeryskilluse>><<combatcontrol 10>><<gcombatcontrol>>
	<<elseif $location is "prison">>
		<<set _teeth to random(3,10)>>
		You steal a handful of white, translucent gems.
		<<prison_teeth _teeth>> <<prison_teeth_text _teeth>>
	<<elseif $location is "island">>
		/* Steal a specific antique like a wooden carving? */
		<<if currentSkillValue("skulduggery") gte 800 and $rng gte 95>>
			<span class="green">You find a stick.</span><<set $island.wood += 1>>
		<<elseif (currentSkillValue("skulduggery") gte 800 and $rng gte 85) or $rng gte 90>>
			<span class="green">You find a handful of walnuts.</span><<set $island.walnut += 1>>
		<<else>>
			<span class="red">You find nothing to steal.</span>
		<</if>>
	<<elseif ["naked", "schoolSwim"].includes(_stealType)>>
		<span class="red">You find nothing to steal.</span>
	<<elseif $rng gte 96 and $spray lt $spraymax>>
		<<spray 1>>
		<span class="green">You steal a charge for your pepper spray.</span>
		<<crimeUp 50 "petty">><<combatskulduggeryskilluse>><<combatcontrol 10>><<gcombatcontrol>>
	<<elseif $rng gte 90 and !$compoundcard>>
		<<set $compoundcard to 1>>
		You steal a strange card. There's an address on it, for a location on <span class="gold">Elk Street.</span>
	<<else>>
		<<rng 5 100>>
		You steal <<moneyGain $rng>>.
		<<crimeUp $rng "petty">><<combatskulduggeryskilluse>><<combatcontrol 10>><<gcombatcontrol>>
	<</if>>
<</widget>>

<<widget "statbaricons">>
	<<if $options.images is 1 and _args[0]>>
		<<if _args[1] gte 1>>
			<img id="statbar" @src="'img/ui/' + _args[0] + '.png'">
		<<elseif _args[2] gte 1>>
			<img id="statbar" src="img/ui/point.png">
		<</if>>
		<<if _args[1] gte 2>>
			<img id="statbar" @src="'img/ui/' + _args[0] + '.png'">
		<<elseif _args[2] gte 2>>
			<img id="statbar" src="img/ui/point.png">
		<</if>>
		<<if _args[1] gte 3>>
			<img id="statbar" @src="'img/ui/' + _args[0] + '.png'">
		<<elseif _args[2] gte 3>>
			<img id="statbar" src="img/ui/point.png">
		<</if>>
		<<if _args[1] gte 4>>
			<img id="statbar" @src="'img/ui/' + _args[0] + '.png'">
		<<elseif _args[2] gte 4>>
			<img id="statbar" src="img/ui/point.png">
		<</if>>
		<<if _args[1] gte 5>>
			<img id="statbar" @src="'img/ui/' + _args[0] + '.png'">
		<<elseif _args[2] gte 5>>
			<img id="statbar" src="img/ui/point.png">
		<</if>>
		<<if _args[1] gte 6>>
			<img id="statbar" @src="'img/ui/' + _args[0] + '.png'">
		<<elseif _args[2] gte 6>>
			<img id="statbar" src="img/ui/point.png">
		<</if>>
		<<if _args[1] gte 7>>
			<img id="statbar" @src="'img/ui/' + _args[0] + '.png'">
		<<elseif _args[2] gte 7>>
			<img id="statbar" src="img/ui/point.png">
		<</if>>
		<<if _args[1] gte 8>>
			<img id="statbar" @src="'img/ui/' + _args[0] + '.png'">
		<<elseif _args[2] gte 8>>
			<img id="statbar" src="img/ui/point.png">
		<</if>>
		<<if _args[1] gte 9>>
			<img id="statbar" @src="'img/ui/' + _args[0] + '.png'">
		<<elseif _args[2] gte 9>>
			<img id="statbar" src="img/ui/point.png">
		<</if>>
		<<if _args[1] gte 10>>
			<img id="statbar" @src="'img/ui/' + _args[0] + '.png'">
		<<elseif _args[2] gte 10>>
			<img id="statbar" src="img/ui/point.png">
		<</if>>
	<</if>>
<</widget>>

<<widget "characteristic-text">>
	<<set _config = _args[0]>>

	<<if _config.states and _config.states.length gt 0>>

		<<set _config.currentLevel = 0>>
		/* Loop through the provided states to find the one we are currently at*/
		<<for _i to 0; _i lt _config.states.length; _i++>>
			<<if _config.currentValue gte _config.states[_i].requiredValue>>
				<<set _config.currentLevel = _i>>
			<</if>>
		<</for>>

		/* Set the details to show from the current state */
		<<set _config.preText = _config.states[_config.currentLevel].preText || _config.preText>>
		<<set _config.description = _config.states[_config.currentLevel].description>>
		<<set _config.postText = _config.states[_config.currentLevel].postText || _config.postText>>
		<<set _config.color = _config.states[_config.currentLevel].color>>
	<</if>>

	<<if _config.preText>>
		_config.preText
	<</if>>
	<span @class="_config.color">_config.description</span>
	<<if _config.postText>>
		_config.postText
	<</if>>
<</widget>>

<<widget "characteristic-box">>
	<<set _config = _args[0]>>
	<<if _config.states and _config.states.length gt 0>>

		<<set _config.currentLevel = 0>>
		/* Loop through the provided states to find the one we are currently at*/
		<<for _i to 0; _i lt _config.states.length; _i++>>
			<<if _config.currentValue gte _config.states[_i].requiredValue>>
				<<set _config.currentLevel = _i>>
			<</if>>
		<</for>>

		/* Set the details to show from the current state */
		<<set _config.level =		_config.states[_config.currentLevel].level>>
		<<set _config.description = _config.states[_config.currentLevel].description>>
		<<set _config.color =		_config.states[_config.currentLevel].color>>

		/* Determine the colour of the bottom bar based on a few types, default is to match the level colour */
		<<if _config.meterColorType eq 'next'>>
			<<if _config.currentLevel lt _config.states.length - 1>>
				<<set _config.meterColor = _config.states[_config.currentLevel + 1].color>>
			<<else>>
				<<set _config.meterColor = _config.states[_config.currentLevel].color>>
			<</if>>
		<<elseif _config.meterColorType eq 'prev'>>
			<<if _config.currentLevel gt 0>>
				<<set _config.meterColor = _config.states[_config.currentLevel - 1].color>>
			<<else>>
				<<set _config.meterColor = _config.states[_config.currentLevel].color>>
			<</if>>
		<<elseif _config.meterColorType eq 'max'>>
			<<if _config.currentLevel eq _config.states.length - 1>>
				<<set _config.meterColor = _config.states[_config.currentLevel].color>>
			<</if>>
		<<else>>
			<<if _config.meterColor eq undefined>>
				<<set _config.meterColor = _config.states[_config.currentLevel].color>>
			<</if>>
		<</if>>

		/* Calculate the percent to the next level based on the gap between the nearest two states */
		<<if _config.percent isnot undefined>>
			<<set _config.percent = Math.floor(_config.percent)>>
		<<else>>
			<<if _config.currentLevel eq (_config.states.length - 1)>>
				/* Calculate percentage above highest state if max value is specified */
				<<if _config.maxValue>>
					<<set _config.percent = Math.floor(100*(_config.currentValue - _config.states[_config.currentLevel].requiredValue) / (_config.maxValue - _config.states[_config.currentLevel].requiredValue))>>
				<<else>>
					<<set _config.percent = 100>>
				<</if>>
			<<else>>
				<<set _config.percent = Math.floor(100*(_config.currentValue - _config.states[_config.currentLevel].requiredValue) / (_config.states[_config.currentLevel + 1].requiredValue - _config.states[_config.currentLevel].requiredValue))>>
			<</if>>
		<</if>>

	<<else>>
		<<set _config.percent= Math.floor(_config.currentValue)>>
	<</if>>

	<<set _config.barWidth = Math.clamp(_config.percent, 0, 100)>>

	<div class="characteristic-box">
		<div class="characteristic-top-line">
			<<if $options.images is 1 and _config.icon>>
				<img class="characteristic-icon" @src="'img/' + _config.icon + '.png'" />
			<</if>>
			<span class="characteristic-title">_config.name<<characteristic-box-modifier `clone(_config.modifier)` `clone(_config.modTypes)` `clone(_config.name)`>></span>
			<<if _config.states>>
				<<if _config.displayType eq "level">>
					<span @class="'characteristic-level ' + _config.color">
						<big>_config.level</big><small>/<<print (_config.states.length - 1)>></small>
					</span>
				<<elseif _config.displayType eq "grade">>
					<span class="characteristic-level">
						<span @class="_config.color">_config.level</span> <<if _config.level neq 'None'>><small class="grade-percent black">_config.percent%</small><</if>>
					</span>
				<</if>>
			<</if>>
		</div>
		<<if _config.description>>
			<span @class="'characteristic-description ' + _config.color">_config.description</span>
		<</if>>
		<<if _config.showStars>>
			<span class="characteristic-description grade-progress">Daily Progress</span>
			<div class="progress-stars">
				<img class="icon" @src="'img/ui/' + (_config.starLevel > 0 ? 'bronze_star'	: 'empty_star') + '.png'" />
				<img class="icon" @src="'img/ui/' + (_config.starLevel > 1 ? 'silver_star'	: 'empty_star') + '.png'" />
				<img class="icon" @src="'img/ui/' + (_config.starLevel > 2 ? 'gold_star'	: 'empty_star') + '.png'" />
			</div>
		<</if>>
		<div class="meter">
			<div @class="(_config.meterColor ? _config.meterColor + 'bar' : 'goldbar')" @style="'width:' + _config.barWidth + '%'"></div>
		</div>
	</div>
<</widget>>

<<widget "characteristic-box-modifier">><<silently>>
	<<if _args[0] isnot undefined or _args[0] isnot 100>>
		<<set $_modifier to _args[0] - 100>>
		<<if $_modifier gt 0>>
			<<set $_result to " <small class='green characteristic-modifier'>(+"+$_modifier+"%)</small>">>
		<<elseif $_modifier lt 0>>
			<<set $_result to " <small class='red characteristic-modifier'>("+$_modifier+"%)</small>">>
		<</if>>
	<</if>>
	<</silently>>
	<<if $_result>>
		<<set $_good to _args[1].good>>
		<<set $_bad to _args[1].bad>>
		<<set $_stat to _args[2].toLowerCase()>>
		<span @class="$_modifier gt 0 ? 'green' : 'red'"><mouse class = "tooltip-small">
			$_result
			<<if $_good.length gt 0 and $_bad.length gt 0>>
				<span class="green">Increasing your $_stat: <<print $_good>> <span class="red">Decreasing your $_stat: <<print $_bad>></span></span>
			<<elseif $_good.length gt 0>>
				<span class="green">Increasing your $_stat: <<print $_good>></span>
			<<elseif $_bad.length gt 0>>
				<span class="red">Decreasing your $_stat: <<print $_bad>></span>
			<</if>>
		</mouse></span>
	<</if>>
<</widget>>

<<widget "relation-text">>
	<<set _config = _args[0]>>

	<<if _config.states and _config.states.length gt 0>>

		<<set _config.currentLevel = _config.states[0]>>
		<<if _config.currentLevel.secondaryStates>>
			<<set _config.currentLevel = _config.currentLevel.secondaryStates[0]>>
		<</if>>

		/* Loop through the provided states to find the one we are currently at*/
		<<script>>
			for(let i = 0; i < T.config.states.length; i++) {

				if(T.config.currentValue >= T.config.states[i].requiredValue) {

					if(T.config.states[i].secondaryStates) {

						for(let j = 0; j < T.config.states[i].secondaryStates.length; j++) {
							if(T.config.secondaryValue >= T.config.states[i].secondaryStates[j].requiredValue) {
								T.config.currentLevel = T.config.states[i].secondaryStates[j];
							}
						}

					} else {
						T.config.currentLevel = T.config.states[i];
					}
				}
			}

		<</script>>

		/* Set the details to show from the current state */
		<<set _config.preText =		_config.currentLevel.preText || _config.preText>>
		<<set _config.description = _config.currentLevel.description>>
		<<set _config.postText =	_config.currentLevel.postText || _config.postText>>
		<<set _config.color =		_config.currentLevel.color>>
	<</if>>


	<<if _config.preText>>
		_config.preText
	<</if>>
	<span @class="_config.color">_config.description</span>
	<<if _config.postText>>
		_config.postText
	<</if>>
<</widget>>

<<widget "relation-box-simple">>
	<<set _boxConfig = _args[0]>>
	<div class="relation-box" @style="(_boxConfig.style || '')">
		<<if _boxConfig.name>>
			<div class="relation-top-line">
				<<if $options.images and _boxConfig.icon>>
						<img class="relation-icon" @src="_boxConfig.icon" />
				<</if>>
				<span class="relation-name">_boxConfig.name</span>
			</div>
		<</if>>
		<div class="relation-description">
			_boxConfig.description
		</div>
	</div>
<</widget>>

<<widget "relation-box-wolves">>
	<<if $wolfpackfear gte 1 || $wolfpacktrust gte 1 || $syndromewolves gte 1 || $wolfpackleader gte 1>>
	<div class="relation-box" @style="(_boxConfig.style || '')">
		<div class="relation-top-line">
			<<if $options.images>>
					<img class="relation-icon" src="img/misc/icon/wolfpup.png" />
			<</if>>
			<span class="relation-name">Wolf Pack</span>
		</div>
		<div class="relation-description">
			The wolves
			<<if $wolfpackleader gte 1>> view you as <span class="green">the leader of the pack.</span>
				<<elseif $syndromewolves gte 1>> view you as <span class="green">their <<ppackbrother>>.</span>
				<<elseif $wolfpacktrust gte 12>> <span class="green">trust you.</span>
				<<elseif $wolfpacktrust gte 6>> are <span class="teal">starting to accept you.</span>
				<<elseif $wolfpackfear gte 12>> <span class="red">fear you.</span>
				<<elseif $wolfpackfear gte 6>> are <span class="purple">starting to fear you.</span>
				<<else>><span class="pink"> view you as prey.</span>
			<</if>>
		</div>
	</div>
	<</if>>
<</widget>>

<<widget "relation-box">>
	<<silently>>
		<<set _npcData = _args[0]>>
		<<set _npcOverrides = _args[1] || {}>>

		<<script>>

			/* Returns true/false based on whether the requirements to display a stat are met, automatically true if no requirement specified */
			T.checkRequirements = function (stat) {
				let statOverrides = T.npcOverrides[stat];

				if(statOverrides)
					return !statOverrides.hasOwnProperty("requirements") || statOverrides.requirements;
				else
					return true;
			};

			T.importantNpcStats = ["love", "lust", "dom", "trauma", "rage", "purity", "corruption", "harmony", "ferocity"];
			T.otherNpcStats = ["love", "lust"];

			let statDefaults = {
				"love" : {
					name : "Love",
					value : T.npcData.love,
					activeIcon : 'img/ui/heart.png',
					inactiveIcon: 'img/ui/emptyheart.png',
					color: 'red'
				},
				"lust" : {
					name : "Lust",
					value : T.npcData.lust,
					iconOrientation : 'vertical',
					activeIcon : 'img/ui/vial.png',
					inactiveIcon : 'img/ui/emptyvial.png',
					color: 'pink'
				},
				"dom" : {
					name : "Dominance",
					value : T.npcData.dom,
					activeIcon : "img/ui/collar.png",
					color: 'purple'
				},
				"trauma" : {
					name : "Trauma",
					value : T.npcData.trauma,
					activeIcon : "img/ui/redbolt.png",
					color: 'teal'
				},
				"rage" : {
					name : "Rage",
					value : T.npcData.rage,
					activeIcon : "img/ui/rage.png",
					color: 'gold'
				},
				"purity" : {
					name: "Purity",
					value: T.npcData.purity,
					activeIcon: (T.npcData.virginity.vaginal == false || T.npcData.virginity.penile == false ? "img/ui/sym_fallen_purity.png" : "img/ui/sym_purity.png"),
					color: 'white'
				},
				"corruption" : {
					name: "Corruption",
					value: T.npcData.corruption,
					iconOrientation : 'horizontal-inverted',
					activeIcon: "img/ui/sym_demon_purity.png",
					color: 'purple'
				},
				"harmony" : {
					name: "Harmony",
					value: V.wolfpackharmony,
					iconOrientation : 'vertical',
					activeIcon: "img/ui/wolfharmony.png",
					color: 'purple'
				},
				"ferocity" : {
					name: "ferocity",
					value: V.wolfpackferocity,
					iconOrientation : 'vertical',
					activeIcon: "img/ui/wolfferocity.png",
					color: 'purple'
				}
			};

			T.getStatConfig = function(stat) {
				let baseConfig = statDefaults[stat] || {};

				return Object.assign({}, baseConfig, T.npcOverrides[stat]);
			};
			if(V.loveInterest){
				/* Check if this is a main love interest */
				if (V.loveInterest.primary == T.npcData.nam) {
					T.loveInterest = true;
				} else if (V.loveInterest.secondary == T.npcData.nam) {
					T.loveInterest = true;
				} else if (V.loveInterest.tertiary == T.npcData.nam) {
					T.loveInterest = true;
				} else {
					T.loveInterest = false;
				}
			}
		<</script>>
	<</silently>>
	<<if _npcData and _npcData.init is 1>>
		<<if (_npcData.nam is ("Ivory Wraith") or ($wraith.mimic is _npcData.nam and $wraith.revealed))>>
			<<rngWraithSocial>>
			<<if _npcData.nam is ("Ivory Wraith") and ($wraith.mimic is "" and (_wraithEventSocial or $wraith.type)) and $wraithIntro>>
				<div class="relation-box">
					<div class="relation-top-line">
						<span class="relation-name">
							_npcData.nam
							<small class="relation-title black"><i>The _wraithTitle</i></small>
						</span>
						<div class="quick-stats">
							<<for _j = 0; _j lt _otherNpcStats.length; _j++>>
								<<if _npcData[_otherNpcStats[_j]] gt 0 and _checkRequirements(_otherNpcStats[_j])>>
									<<relation-box-stat _getStatConfig(_otherNpcStats[_j])>>
								<</if>>
							<</for>>
						</div>
					</div>
					<div class="relation-description">
						<<if $options.images is 1 and (_rngWraithFace is 1 or $possessed)>>
							<img id="wraith" @src="'img/misc/icon/wraith' + V.wraith.state + '.png'">
						<<else>>
							<<npcrelationship _npcData.nam>>
						<</if>>
					</div>
				</div>
			<<elseif $wraithIntro and $wraith.mimic is _npcData.nam and $wraith.revealed and _npcOverrides and _npcOverrides.important>>
				<div class="relation-box">
					<div class="relation-top-line">
						<span class="relation-name">
							_npcData.nam?
							<small class="relation-title black"><i>The _wraithTitle</i></small>
						</span>
						<<if _loveInterest>>
							<img class="love-interest-icon" src="img/ui/love_interest.png" alt="Love Interest" title="Love Interest"/>
						<</if>>
					</div>
					<div class="relation-description">
						<<set _rngWraithLineChance to 1>>
						<<npcrelationship "Ivory Wraith">>
					</div>
					<div @class="'relation-stat-list' + ($options.images ? '' : ' no-images')">
						<<for _j = 0; _j lt _importantNpcStats.length-2; _j++>>
							<<if _npcData[_importantNpcStats[_j]] gt 0 and _checkRequirements(_importantNpcStats[_j])>>
								<<relation-box-stat _getStatConfig(_importantNpcStats[_j]) true>>
							<</if>>
						<</for>>
					</div>
				</div>
			<<else>>
			/* Do not display anything */
			<</if>>
		<<elseif _npcOverrides and _npcOverrides.important>>
			<div class="relation-box">
				<div class="relation-top-line">
					<span class="relation-name">
						_npcData.nam
						<small class="relation-title black"><i>The _npcData.title</i></small>
					</span>
					<<if _loveInterest>>
						<img class="love-interest-icon" src="img/ui/love_interest.png" alt="Love Interest" title="Love Interest"/>
					<</if>>
				</div>
				<div class="relation-description">
					<<npcrelationship _npcData.nam>>
				</div>
				<div @class="'relation-stat-list' + ($options.images ? '' : ' no-images')">
					<<if _importantNPCs[_k].nam is "Black Wolf">><<set _npcStats to _importantNpcStats.length>>
						<<else>><<set _npcStats to _importantNpcStats.length-2>>
					<</if>>
					<<for _j = 0; _j lt _npcStats; _j++>>
						<<if _npcData[_importantNpcStats[_j]] gt 0 and _checkRequirements(_importantNpcStats[_j])>>
							<<relation-box-stat _getStatConfig(_importantNpcStats[_j]) true>>
						<</if>>
					<</for>>
				</div>
			</div>
		<<else>>
			<div class="relation-box">
				<div class="relation-top-line">
					<span class="relation-name">
						_npcData.nam
						<small class="relation-title black"><i>The _npcData.title</i></small>
					</span>
					<div class="quick-stats">
						<<for _j = 0; _j lt _otherNpcStats.length; _j++>>
							<<if _npcData[_otherNpcStats[_j]] gt 0 and _checkRequirements(_otherNpcStats[_j])>>
								<<relation-box-stat _getStatConfig(_importantNpcStats[_j])>>
							<</if>>
						<</for>>
					</div>
				</div>
				<div class="relation-description">
					<<npcrelationship _npcData.nam>>
				</div>
			</div>
		<</if>>
	<</if>>
<</widget>>

<<widget "relation-box-stat">>
	<<silently>>
		<<set _config = _args[0]>>
		<<set _important = _args[1]>>

		<<set _config.progress = Math.floor(Math.clamp(100*((_config.value - (_config.minValue || 0)) / (_config.maxValue || 100)), 0, 100))>>
	<</silently>>
	<div class="relation-stat-block" @style="'--progress: ' + _config.progress + '%;'">
		<<if _important>>
			<label>_config.name</label>
		<</if>>
		<<if $options.images>>
			<div class="relation-stat">
				<span @class="'relation-stat-icon ' + (_config.iconOrientation || 'horizontal')">
					<img class="active-icon-img" @src="_config.activeIcon">
					<<if _config.inactiveIcon>>
						<img class="inactive-icon-img" @src="_config.inactiveIcon">
					<<else>>
						<img class="inactive-icon-img outlined" @src="_config.activeIcon">
					<</if>>
				</span>
				<span class="relation-stat-percent black">_config.progress<small>%</small></span>
			</div>
		<<else>>
			<<if _important>>
				<span class="relation-stat-percent black">&nbsp;_config.progress<small>%</small></span>
				<div @class="'progress-bar ' + _config.color + 'bar'"></div>
			<</if>>
		<</if>>
	</div>
<</widget>>

<<widget "connector-box">>
	<div @class="'connector-box ' + (_args[3] ? 'invert' : '')" @style="'--connector-height: ' + _args[0] + 'px; --center-offset: ' + (_args[1] || 50) + '%; --end-offset: ' + (_args[2] || 0) + 'px;'">
		<div class="connector-box-top"></div>
		<div class="connector-box-bottom"></div>
	</div>
<</widget>>

<<widget "oralpassage">>
	<<takeVirginity _args[0] "oral">><<oralstat>><<oralejacstat>><<ejacstat>><<cumswallow 'human'>>
<</widget>>

<<widget "relationshipclamp">>
	<<set _i to $NPCNameList.indexOf("Robin")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, 0, 100)>>
	<<set $NPCName[_i].lust = Math.clamp($NPCName[_i].lust, 0, 100)>>
	<<set $NPCName[_i].trauma = Math.clamp($NPCName[_i].trauma, 0, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, 0, 100)>>
	<<set _i to $NPCNameList.indexOf("Whitney")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, 0, 30)>>
	<<set $NPCName[_i].lust = Math.clamp($NPCName[_i].lust, 0, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, 0, 20)>>
	<<set _i to $NPCNameList.indexOf("Eden")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, 0, 200)>>
	<<set $NPCName[_i].lust = Math.clamp($NPCName[_i].lust, 0, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, 0, 150)>>
	<<set _i to $NPCNameList.indexOf("Kylar")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, 0, 100)>>
	<<set $NPCName[_i].lust = Math.clamp($NPCName[_i].lust, 0, 100)>>
	<<set $NPCName[_i].rage = Math.clamp($NPCName[_i].rage, 0, 100)>>
	<<set _i to $NPCNameList.indexOf("Avery")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, 0, 100)>>
	<<set $NPCName[_i].rage = Math.clamp($NPCName[_i].rage, 0, 100)>>
	<<set _i to $NPCNameList.indexOf("Great Hawk")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, 0, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, 0, 100)>>
	<<alexclamp>>
	<<set _i to $NPCNameList.indexOf("Sydney")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, 0, 150)>>
	<<set $NPCName[_i].lust = Math.clamp($NPCName[_i].lust, 0, 100)>>
	<<set $NPCName[_i].purity = Math.clamp($NPCName[_i].purity, 0, 100)>>
	<<set $NPCName[_i].corruption = Math.clamp($NPCName[_i].corruption, 0, 50)>>
	/* 北极星模组 */
	<<set _i to $NPCNameList.indexOf("泰勒")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, 0, 100)>>
	<<set _i to $NPCNameList.indexOf("凯西")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, 0, 100)>>
	/* 北极星 */
	<<set _i to $NPCNameList.indexOf("Black Wolf")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, 0, 150)>>
	<<set $NPCName[_i].harmony = Math.clamp($wolfpackharmony || 0, 0, 100)>>
	<<set $NPCName[_i].ferocity = Math.clamp($wolfpackferocity || 0, 0, 100)>>

	<<set _i to $NPCNameList.indexOf("Darryl")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -50, 50)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("River")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -50, 50)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Mason")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -50, 50)>>
	<<set $NPCName[_i].lust = Math.clamp($NPCName[_i].lust, -50, 50)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Sam")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -50, 50)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Wren")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -100, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Charlie")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -100, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Bailey")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -100, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Briar")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -100, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Doren")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -100, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Gwylan")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -100, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Harper")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -100, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Jordan")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -100, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Landry")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -100, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Leighton")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -100, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Morgan")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -100, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Winter")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -100, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Niki")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -100, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Quinn")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -100, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Remy")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -100, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Zephyr")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -100, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>

	<<set _i to $NPCNameList.indexOf("Ivory Wraith")>>
	<<if $wraith.state is "haunt">>
		<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, 0, 10)>>
		<<set $NPCName[_i].lust = Math.clamp($NPCName[_i].lust, 10, 20)>>
	<<else>>
		<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, 0, 20)>>
		<<set $NPCName[_i].lust = Math.clamp($NPCName[_i].lust, 0, 20)>>
	<</if>>
<</widget>>

<<widget "fringecheck">>
	<<if $fringetype is "default">>
		<<set $fringetype to "messy">>
	<</if>>
<</widget>>

<<widget "haircheck">>
	<<if $hairtype is "default">>
		<<set $hairtype to "messy">>
	<</if>>
<</widget>>

<<widget "fringedescription">>
	<<if $haircolour isnot $hairfringecolour>>
		<<if $hairFringeColourStyle is "gradient">>
			<<set _colour to "two-toned">>
		<<else>>
			<<set _colour to $hairfringecolour>>
		<</if>>
		<<set $_fringe to _colour + " fringe">>
	<<else>>
		<<set $_fringe to "fringe">>
	<</if>>

	<<if $fringelength gte 980>>
		and your <<print $_fringe>> is very long.
	<<elseif $fringelength gte 800>>
		and your <<print $_fringe>> is long.
	<<elseif $fringelength gte 600>>
		and your <<print $_fringe>> is somewhat long.
	<<elseif $fringelength gte 400>>
		and your <<print $_fringe>> is quite normal.
	<<elseif $fringelength gte 200>>
		and your <<print $_fringe>> is short.
	<<else>>
		and your <<print $_fringe>> is very short.
	<</if>>
<</widget>>

<<widget "willpowerpain">>
	<<if $pain gte 100 and $willpowerpain is undefined and _willpowerpainchecked isnot true>>
		<<if (currentSkillValue('willpower') / 10) gte (($pain - 100) + random(1, 100))>>
			<span class="green">The pain threatens to overwhelm, but you endure it.</span>
			<<gwillpower>><<willpower 1>>
			<br>
		<<else>>
			<span class="red">The pain overwhelms you.</span>
			<<if $position is "stalk">>
				You fall to your knees.
			<</if>>
			<<ggwillpower>><<willpower 5>><<set $willpowerpain to 0>>
			<br>
		<</if>>
	<<set _willpowerpainchecked to true>>
	<</if>>
<</widget>>

<<widget "willpowerorgasm">>
	/* 北极星模组 */
	<<if $orgasmdown gte 1 and _willpowerorgasmchecked isnot true and $demonhunter lte 5>>
	/* 北极星 */
		<<if (currentSkillValue('willpower') / 10) gte (($orgasmdown * 30) + random(1, 80))>>
			<span class="green">You endure the orgasmic shivers running through you.</span>
			<<gwillpower>><<willpower 1>><<set $orgasmdown to 0>>
			<br>
		<<else>>
			<span class="red">You struggle against the orgasmic spasms overwhelming you.</span>
			<<if $position is "stalk">>
				You fall to your knees.
			<</if>>
			<<gwillpower>><<willpower 1>>
			<br>
		<</if>>
	<<set _willpowerorgasmchecked to true>>
	<</if>>
<</widget>>

<<widget "clothescolour">><<silently>>
	<<set _slot to _args[0]>>
	<<if $worn[_slot].colour isnot 0 and $worn[_slot].colour isnot undefined>>
		<<if $worn[_slot].colour.substring(0, 3) is "wet">>
			<<set _text_output to $worn[_slot].colour.substring(3)>>
		<<elseif $worn[_slot].colour_sidebar is 1>>
			<<if $worn[_slot].colour == "custom">>
				<<set _text_output to getCustomColourName($worn[_slot].colourCustom)>>
			<<else>>
				<<set _text_output to $worn[_slot].colour>>
			<</if>>
		<</if>>
	<</if>>
<</silently>><<print _text_output>><</widget>>

<<widget "nounderwearcheck">>
	/*Checks if the PC is pantiless, but otherwise decent. Results in low level exhibitionism increases.*/
	/*
		Feature was disabled previous but left the text as is, just disabling the text rather than removing it
		Vrelnir: Exhibitionism should only rise when the player directly choses certain actions. The PC could have their underwear stolen, which would result in exhibitionism rising without a direct decision to do so.
		Left in incase a valid use of the feature can be correctly implemented that meets the above requirement
	*/
	/*<<if !$worn.lower.type.includes("naked") and $worn.under_lower.type.includes("naked") and $exposed lte 0 and $exhibitionism lt 19>>
		<<set $no_underwear += 1>>
	<</if>>
	<<if $no_underwear gte 8>>
		<<set $no_underwear to 0>>
		<<set $effectsmessage to 1>>
		<<set $exhibitionism_message to 1>>
	<</if>>*/
<</widget>>

<<widget "breastfed">>
	<<set $milk_drank_stat += random(1, 5)>>
	<<if random(1, 100) gte 70>>
		<<if $NPCList[0].type and $NPCList[0].type is "wolfgirl">>
			<<transform wolf 1>>
		<<elseif $NPCList[0].type and $NPCList[0].type is "foxgirl">>
			<<transform fox 1>>
		/* 北极星模组 */
		<<elseif $NPCList[0].type and $NPCList[0].type is "catgirl">>
			<<transform cat 1>>
		<<elseif $NPCList[0].type and $NPCList[0].type is "raccoongirl">>
			<<transform raccoon 1>>
		<<elseif $NPCList[0].type and $NPCList[0].type is "doggirl">>
			<<transform dog 1>>
		<<elseif $NPCList[0].type and $NPCList[0].type is "beargirl">>
			<<transform bear 1>>
		<<elseif $NPCList[0].type and $NPCList[0].type is "cowgirl">>
			<<transform cow 1>>
		<<elseif $NPCList[0].type and $NPCList[0].type is "deergirl">>
			<<transform deer 1>>
		<<elseif $NPCList[0].type and $NPCList[0].type is "sheepgirl">>
			<<transform sheep 1>>
		<<elseif $NPCList[0].type and $NPCList[0].type is "dolphingirl">>
			<<transform dolphin 1>>
		/* 北极星 */
		<</if>>
	<</if>>
	<<if $milkdranktrait is 1>><<physique 1>><</if>>
	<<purity -1>>
	<<set $hunger -= 200>><<set $thirst -= 200>>
<</widget>>

<<widget "nectarfed">>
	<<set _nectarGain to 0>>
	<<set _nectarGain += (Math.ceil(_args[0] / 10) + random(0,2))>>
	<<set $nectar_drank_stat += _nectarGain>>
	<<set $nectar_addiction += _nectarGain>>
	<<if _args[0] gte 11>>
		<<purity -1>>
	<</if>>
	<<set $hunger -= (_args[0] * 5)>><<set $thirst -= (_args[0] * 5)>>
	<<drugs _args[0]>><<set $arousal += _args[0]>>
	<<if $ejaculating is 1>>
		<<alcohol `(_args[0] * 3)`>>
		<<bodyliquid "mouth" "nectar">>
	<</if>>
	<<if $backgroundTraits.includes("plantlover")>>
		<<if $nectar_timer lte 14>>
			<span class="green">You feel an overwhelming sense of relief.</span> <<stress -12>><<llstress>><<pain -4>><<lpain>>
		<<else>>
			<<set _nectarStress to (-1 * _nectarGain)>>
			<<physique 1 "invig">><<stress _nectarStress>><<lstress>>
		<</if>>
		<<set $nectar_timer to 21>>
	<</if>>
	<<set $nectar_addiction = Math.clamp($nectar_addiction, 0, 200)>>
<</widget>>

<<widget "setup_pillory">>
	<<set $pillory_tenant to {person : clone($baseNPC), exists : 0, duration : 0, served : 0, startday: 0, starthour : 0, endday : 0, endhour : 0,
								crowd : 0, wet : 0, upperexposed : 0 , lowerexposed : 0, fruit : 0, fruitstock: 0, face : 0, ass : 0, genital : 0, broken : 0,
								lastviewed : { day : 0, hour: 0}, special : {name : "", desc : ""}}>>
<</widget>>

<<widget "new_npc_pillory">>
	<<if not _args[0]>>
		<<if $rng gte 20>><<generate1>><<else>><<generatec1>><</if>>
		<<set _already_served to random(0,2)>>
	<<else>>
		<<set _already_served to 0>>
	<</if>>
	<<set $pillory_tenant.exists to 1>>
	<<set $pillory_tenant.person to clone($NPCList[0])>>
	<<set $pillory_tenant.duration to random(4,27)>>
	<<set $pillory_tenant.startday to Time.days>>
	<<set $pillory_tenant.starthour to (Time.hour - _already_served)>>
	<<set _endhour to ($pillory_tenant.starthour + $pillory_tenant.duration)>>
	<<set $pillory_tenant.endday to Time.days>>
	<<if _endhour gte 24>><<set $pillory_tenant.endday += 1>><<set _endhour -= 24>><</if>>
	/*Repeat incase $duration is gte 24hrs and starting time gte 21. E.g. worst case: Time.hour = 23 and duration=27hrs, end time should be 0200 @ +2days.
	So 23 + 27 = 50; add 1 to end-day and minus 24hrs gives 26; add 1 to end-day and minus 24 gives hr 2.*/
	<<if _endhour gte 24>><<set $pillory_tenant.endday += 1>><<set _endhour -= 24>><</if>>
	<<set $pillory_tenant.endhour to _endhour>>
	<<set $pillory_tenant.crowd to 1>>
	<<set $pillory_tenant.wet to 0>>
	<<set $pillory_tenant.upperexposed to 0>>
	<<set $pillory_tenant.lowerexposed to 0>>
	<<set $pillory_tenant.fruit to 0>>
	<<set $pillory_tenant.fruitstock to 3>>
	<<set $pillory_tenant.spank to 0>>
	<<set $pillory_tenant.face to 0>>
	<<set $pillory_tenant.ass to 0>>
	<<set $pillory_tenant.genital to 0>>
	<<set $pillory_tenant.broken to 0>>
	<<set $pillory_tenant.lastviewed.day to Time.days>>
	<<set $pillory_tenant.lastviewed.hour to Time.hour>>

	<<person1>>
	<<if $pillory_tenant.special.name is "">>
		A <<person>> <<if _already_served is 0>>is currently being locked into the pillory.<<else>>has recently been locked in the pillory.<</if>>
		<<endevent>>
		<<npc_pillory_release_schedule>>
		<br><br>
	<<else>>
		Rumour has it <<he>> is being sent to the pillory.
		<br>
		<<endevent>>
	<</if>>
<</widget>>

<<widget "imprison_whitney">>
	<<clear_pillory>>
	<<npc Whitney>>
	<<set C.npc.Whitney.state to "pillory">>
	<<set $pillory_tenant.special.name to "Whitney">>
	<<set $pillory_tenant.special.desc to C.npc.Whitney.title>>
	<<new_npc_pillory $NPCList[0]>>
	<<endevent>>
	<<set $framed to 0>>
<</widget>>

<<widget "imprison_leighton">>
	<<clear_pillory>>
	<<npc Leighton>>
	<<set $pillory_tenant.special.name to "Leighton">>
	<<set $pillory_tenant.special.desc to C.npc.Leighton.title>>
	<<new_npc_pillory $NPCList[0]>>
	<<endevent>>
	<<set $framed to 0>>
<</widget>>

<<widget "imprison_npc">> /* number as argument to select npc 0-5. Only use at end of scene. */
	<<clear_pillory>>
	<<if not _args[0]>>
		<<set _id to 0>>
	<<else>>
		<<set _id to _args[0]>>
	<</if>>
	<<if _args[1]>>
		<<set $pillory_tenant.special.desc to _args[1]>>
	<</if>>
	<<new_npc_pillory $NPCList[_id]>>
	<<endevent>>
<</widget>>

<<widget "get_pillory_npc">>
	<<set $NPCList[0] to clone($pillory_tenant.person)>><<person1>>
<</widget>>

<<widget "A_pillory_person">>  /* Can't simplify to <<pillory_person>> because: 'a thin man', but not 'a Whitney') */
	<<silently>><<set _out to "">>
	<<get_pillory_npc>>
	<<if $pillory_tenant.special.name is "">>
		<<set _out += "A <<person>>">>
	<<else>>
		<<set _out += $pillory_tenant.special.name>>
	<</if>>
	<</silently>><<print _out>>
<</widget>>

<<widget "The_pillory_person">>
	<<silently>><<set _out to "">>
	<<get_pillory_npc>>
	<<if $pillory_tenant.special.name is "">>
		<<set _out += "The <<person>>">>
	<<else>>
		<<set _out += $pillory_tenant.special.name>>
	<</if>>
	<</silently>><<print _out>>
<</widget>>

<<widget "a_pillory_person">>
	<<silently>><<set _out to "">>
	<<get_pillory_npc>>
	<<if $pillory_tenant.special.name is "">>
		<<set _out += "a <<person>>">>
	<<else>>
		<<set _out += $pillory_tenant.special.name>>
	<</if>>
	<</silently>><<print _out>>
<</widget>>

<<widget "the_pillory_person">>
	<<silently>><<set _out to "">>
	<<get_pillory_npc>>
	<<if $pillory_tenant.special.name is "">>
		<<set _out += "the <<person>>">>
	<<else>>
		<<set _out += $pillory_tenant.special.name>>
	<</if>>
	<</silently>><<print _out>>
<</widget>>

<<widget "pillory_type">>
	<<silently>><<set _out to "">>
	<<get_pillory_npc>>
	<<if $pillory_tenant.special.name is "">>
		<<set _out += "<<person>>">>
	<<else>>
		<<set _out += $pillory_tenant.special.desc>>
	<</if>>
	<</silently>><<print _out>>
<</widget>>

<<widget "npc_pillory">>
	<<A_pillory_person>> is locked in the town pillory.
	<<npc_pillory_release_schedule>>
	<br><br>
	<<endevent>>
<</widget>>

<<widget "npc_pillory_detail">>
	<<get_pillory_npc>>
	<<A_pillory_person>> is locked in the town pillory.
	<<npc_pillory_appearance>>
	<<npc_pillory_abuse>>
	<<npc_pillory_release_schedule>>
	<br><br>
	<<endevent>>
<</widget>>

<<widget "npc_pillory_appearance">>
	<<update_npc_pillory_appearance>>
	/*Desc*/
	<<if Time.dayState is "night">>
		<<if $pillory_tenant.crowd gte 10>>A huge, drunken mob surround
		<<elseif $pillory_tenant.crowd gte 6>>A large, rowdy mob crowd around
		<<elseif $pillory_tenant.crowd gte 4>>A sinister crowd huddle around
		<<else>>A small but sinister group lurk around
		<</if>>
	<<else>>
		<<if $pillory_tenant.crowd gte 10>>An excited, jeering crowd surround
		<<elseif $pillory_tenant.crowd gte 6>>A large crowd press around
		<<elseif $pillory_tenant.crowd gte 4>>A curious group hang around
		<<else>>A small group watch
		<</if>>
	<</if>>the <<pillory_type>> locked prone in the pillory.
	<<if $pillory_tenant.broken gte 32>><<He>> looks traumatised, perhaps permanently broken by the abuse <<hes>> already suffered.
	<<elseif $pillory_tenant.broken gte 16>><<He>> is weeping from the abuse <<hes>> already suffered.
	<<elseif $pillory_tenant.broken gte 8>><<He>> is sobbing from the abuse.
	<<elseif $pillory_tenant.broken gte 4>><<He>> is visibly upset, but trying hard to hide it.
	<<else>><<He>> is defiant, showing a brave face.
	<</if>>
	<br>

	/*describe exposure*/
	<<if $pillory_tenant.upperexposed gte 3>>
		<<His>> $pillory_tenant.person.breastsdesc are fully exposed to the crowd.
		<<if $pillory_tenant.spank gte 8>><<His>> nipples are red from being pinched, slapped, sucked, bitten and pulled.
		<<elseif $pillory_tenant.spank gte 4>><<His>> nipples looks sore from abuse.
		<</if>>
	<<elseif $pillory_tenant.upperexposed gte 2>>
		<<if $pronoun is "f">>
			<<His>> top has been bared, with only <<his>> bra hiding <<his>> $pillory_tenant.person.breastsdesc from the crowd.
		<<else>>
			<<His>> top has been bared, fully exposing <<his>> $pillory_tenant.person.breastsdesc to the crowd.
			<<if $pillory_tenant.spank gte 8>><<His>> nipples are red from being pinched, slapped, bitten and pulled.
			<<elseif $pillory_tenant.spank gte 4>><<His>> nipples looks sore from abuse.
			<</if>>
		<</if>>
	<<elseif $pillory_tenant.upperexposed gte 1>><<His>> upper clothes have been mauled, partially exposing <<his>> <<if $pronoun is "f">>bra<<else>>$pillory_tenant.person.breastsdesc<</if>> to the crowd.
	<</if>>
	<<if $pillory_tenant.lowerexposed gte 2>><<His>> ass has <<if $pillory_tenant.upperexposed gte 1>>also<</if>> been exposed, making
		<<if $pillory_tenant.person.gender is "f">><<his>> pussy
		<<else>><<his>> $pillory_tenant.person.penisdesc
		<</if>>visible to all.
		<<if $pillory_tenant.spank gte 5>><<His>> ass shows signs of rough
			<<if $pillory_tenant.fruit gte 5>>spanking, and <<his>> <<if $pillory_tenant.face gte 2>>cum<<if $pillory_tenant.face gte 4>>-coated<<else>>-stained<</if>><</if>> face is a mess of bruises and broken fruit.
			<<else>>spanking.
			<</if>>
		<<elseif $pillory_tenant.fruit gte 6>><<His>> <<if $pillory_tenant.face gte 2>>cum<<if $pillory_tenant.face gte 4>>-coated<<else>>-stained<</if>><</if>> face is a mess of bruises and broken fruit.
		<<elseif $pillory_tenant.fruit gte 2>><<His>> <<if $pillory_tenant.face gte 2>>cum<<if $pillory_tenant.face gte 4>>-coated<<else>>-stained<</if>><</if>> face is marked by bruises and broken fruit.
		<</if>>
		<<if $pillory_tenant.ass gte 2>><<His>> ass has been raped more than
			<<if $pillory_tenant.genital gte 2>>once, and
				<<if $pillory_tenant.person.gender is "m">>slime coats <<his>> <<print either("raw","abused","sorry")>> penis.
				<<else>>semen <<if $pillory_tenant.genital gte 4>>pours<<else>>drips<</if>> from <<his>> <<print either("raw","reddened","abused")>> pussy.
				<</if>>
			<<else>>once.
			<</if>>
		<<elseif $pillory_tenant.genital gte 5>><<His>> <<if $pillory_tenant.person.gender is "m">>penis<<else>>pussy<</if>> has been raped raw.
		<<elseif $pillory_tenant.genital gte 2>><<He>> has been raped more than once.
		<</if>>
	<<elseif $pillory_tenant.lowerexposed gte 1>>
		<<His>> <<if $pronoun is "f">>dress has been pulled up over <<his>> waist,<<else>>trousers have been pulled down,<</if>>
		exposing <<his>> underwear to the crowd.
	<<elseif $pillory_tenant.wet is 2>><<His>> clothes are see-through from the rain.
	<<elseif $pillory_tenant.wet is 1>><<His>> clothes are semi-translucent from damp, but are drying out.
	<</if>>
	<<if $pillory_tenant.upperexposed is 0 and $pillory_tenant.lowerexposed is 0 and $pillory_tenant.face is 0 and $pillory_tenant.fruit gte 1>>
		<<if $pillory_tenant.fruit gte 6>><<His>> face is a mess of bruises and broken fruit.
		<<elseif $pillory_tenant.fruit gte 2>><<His>> face is marked by bruises and broken fruit.
		<</if>>
	<</if>>
<</widget>>

<<widget "update_npc_pillory_appearance">>
	<<if ($pillory_tenant.lastviewed.day isnot Time.days) or (Time.hour gte $pillory_tenant.lastviewed.hour + 2)>>
		/* last viewed time tracked to avoid this firing on every viewing */
		<<set $pillory_tenant.lastviewed.day to Time.days>>
		<<set $pillory_tenant.lastviewed.hour to Time.hour>>

		/*Weather effects*/
		<<if $weather is "rain">><<set $pillory_tenant.wet to 2>>
		<<elseif $pillory_tenant.wet is 2>><<set $pillory_tenant.wet to 1>>
		<<else>><<set $pillory_tenant.wet to 0>>
		<</if>>

		/*Chance of abuse based on crowd and time passed*/
		<<if Time.days - $pillory_tenant.startday is 2>><<set _chance to 24>>
		<<elseif Time.days - $pillory_tenant.startday is 1>><<set _chance to 12>>
		<<else>><<set _chance to (Time.hour - $pillory_tenant.starthour)>>
		<</if>>
		<<set _chance *= $pillory_tenant.crowd>>
		/*increased by spectacle*/
		<<set _factor to ($pillory_tenant.upperexposed + $pillory_tenant.lowerexposed + $pillory_tenant.fruit
							+ $pillory_tenant.spank + $pillory_tenant.face + $pillory_tenant.ass + $pillory_tenant.genital)>>
		<<if Time.dayState is "night">><<set _factor += 3>><</if>>
		<<if $pillory_tenant.wet is 2>><<set _factor += 4>><</if>>
		<<set _prob to (_chance * _factor)>>

		/*Out of sight changes to tenant */
		<<rng>>
		<<if $rng gte (40 - _prob)>><<set $pillory_tenant.fruit += 1>><</if>>
		<<rng>>
		<<if $rng gte (60 - _prob)>><<set $pillory_tenant.crowd += 2>><</if>>
		<<rng>>
		<<if $rng gte (60 - _prob)>><<set $pillory_tenant.upperexposed += 1>><</if>>
		<<rng>>
		<<if $rng gte (80 - _prob)>><<set $pillory_tenant.lowerexposed += 1>><</if>>
		<<rng>>
		<<if $rng gte (100 - _prob)>><<set $pillory_tenant.crowd += 2>><</if>>
		<<rng>>
		<<if $rng gte (100 - _prob)>><<set $pillory_tenant.fruit += 2>><<set $pillory_tenant.face += 1>><</if>>
		<<rng>>
		<<if $rng gte (100 - _prob) and $pillory_tenant.lowerexposed gte 2>><<set $pillory_tenant.spank += 2>><<else>><<set $pillory_tenant.spank += 1>><</if>>
		<<rng>>
		<<if $rng gte (100 - _prob) and $pillory_tenant.lowerexposed gte 2>><<set $pillory_tenant.genital += 1>><</if>>
		<<rng>>
		<<if $rng gte (100 - _prob) and $pillory_tenant.lowerexposed gte 2>><<set $pillory_tenant.ass += 1>><</if>>

		/*lock down exposure and replenish fruit */
		<<if $pillory_tenant.upperexposed gte 3>><<if $pillory_tenant.person.gender is "f" or $pillory_tenant.person.pronoun is "f">><<set $pillory_tenant.upperexposed to 3>><<else>><<set $pillory_tenant.upperexposed to 2>><</if>><</if>>
		<<if $pillory_tenant.lowerexposed gt 2>><<set $pillory_tenant.lowerexposed to 2>><</if>>
		<<set $pillory_tenant.fruitstock to 3>>
		<<set $pillory_tenant.broken += ($pillory_tenant.ass + $pillory_tenant.genital + $pillory_tenant.face + $pillory_tenant.fruit + $pillory_tenant.spank)>>
	<</if>>
<</widget>>

<<widget "npc_pillory_abuse">>
	<br>
	<<if ($pillory_tenant.lastviewed.day isnot Time.days) or (Time.hour gte $pillory_tenant.lastviewed.hour + 1)>>
		<<set $pillory_tenant.lastviewed.hour to Time.hour>>
		<<rng>><<generate2>><<person2>>
		<<set _ly to either("violently","openly","angrily","furiously","cheekily","repeatedly","clumsily","roughly","theatrically","dutifully","merrily","gleefully","drunkenly","ineptly")>>
		<<if Time.dayState isnot "night">>
			<<if $rng gte 56>> /* 45% chance of jeer and shout only, 55% chance of something active */
				A number of people, led by a <<person>> jeer and shout abuse at the prisoner.
			<<elseif $rng gte 41>> /* 15% */
				<<rng>>
				<<if $pillory_tenant.person.pronoun is "f" and $rng gte 40>> /* 60% if upper-exposed F */
					A <<person>> in rough farmer clothes approaches the pillory with a bucket.
					Setting the bucket underneath the <<pillory_type>>'s chest, <<person2>><<he>>
					<<if $pillory_tenant.upperexposed lte 1>>displaces the prisoner's top,<</if>>
					<<if $pillory_tenant.upperexposed lte 2>><<set $pillory_tenant.upperexposed to 3>> slips off her bra,<</if>>
					grabs the <<pillory_type>>'s $pillory_tenant.person.breastsdesc and sets about trying to milk her into the bucket.
					<br><br>
					<<if $rng % 3 is 0>>
						<<if $rng % 2>>
							Milk bursts from her breasts. Smiling, the farmer soon builds up a rhythm, adeptly milking both breasts.
							<br>
							"Good cow," the farmer ruffles <<the_pillory_person>>'s hair before leaving with an almost full bucket.
						<<else>><<set $pillory_tenant.spank += 1>>
							Milk dribbles from the <<pillory_type>>'s breasts. With a lot of persistent squeezing and nipple pulling the farmer is eventually
							able to	get a fair amount of milk from the prisoner. Her $pillory_tenant.person.breastsdesc look raw and painful afterward.
							<br>
							The farmer pats the prisoner's head before leaving with <<person2>><<his>> half-filled bucket.
						<</if>>
					<<else>><<set $pillory_tenant.spank += 1>>
						Despite increasingly rough squeezing and pulling on her nipples, no milk is forthcoming.
						<<if $rng % 2>>
							Finally giving up, the <<person2>><<person>> pats her head. "Poor girl. You're all dried up."
							<br>
							<<He>> walks behind the <<pillory_type>> and
							<<if $pillory_tenant.lowerexposed lte 1>>strips <<his>> <<print either("silk panties","plain panties","tattered undies","boyshorts")>>,
							<<else>>holds <<his>> butt-cheeks spread apart<</if>> exposing <<if $pillory_tenant.person.gender is "f">><<his>> pussy <<else>><<his>> ass <</if>>to all.
							<br>
							"This cow's dry," <<person2>><<he>> calls out to the crowd. <<if $pillory_tenant.person.gender is "f">>"Wants someone to put a calf in her."<<else>>"Wants someone to fill her up."<</if>>
							<br>
							<<He>> walks away with <<his>> empty bucket.
							<<set $pillory_tenant.lowerexposed to 2>>
						<<else>>
							Finally giving up, the farmer walks away with <<his>> empty bucket.
						<</if>>
						<br>
					<</if>>
				<<elseif $pillory_tenant.person.gender is "m" and $rng gte 40>>
					A <<person>> in rough farmer clothes approaches the pillory with a clear glass.
					<br>
					Setting the glass underneath the <<pillory_type>>'s groin, <<person2>><<he>>
					<<if $pillory_tenant.lowerexposed lte 0>><<if $pillory_tenant.person.pronoun is "m">>pulls down the prisoner's trousers,<<else>>hitches up the prisoner's skirt,<</if>><</if>>
					<<if $pillory_tenant.lowerexposed lte 1>><<set $pillory_tenant.lowerexposed to 2>><<if $pillory_tenant.person.pronoun is "m">> removes his underpants, <<else>> pulls down her panties, <</if>><</if>>
					grabs the prisoner's $pillory_tenant.person.penisdesc and starts to rub.
					The prisoner looks shocked, then angry, then conflicted, and then shocked again as <<person1>><<he>> cums into a glass in front of a jeering crowd.
					<<person2>>
					<<if $rng % 3>>
						The farmer glances in the glass and then starts again. Seemingly an 'old hand,' <<he>> starts to browse <<his>> phone with
						one hand, while bringing the <<pillory_type>> to several more orgasms with the other.
						<br>
						Ten minutes later, the farmer is walking off with a glassful of ejaculate, while <<the_pillory_person>> hangs in the pillory, <<his>> face
						flickering between shock, shame, pain and satiation.
					<<else>><<set $pillory_tenant.spank += 1>>
						The farmer browses <<his>> phone with one hand, while trying to bring the <<pillory_type>> back to orgasm with the other.
						<br>
						After a minute or so, the farmer looks confused, then annoyed at <<the_pillory_person>>'s lack of response.
						The <<person2>><<person>> pulls a device from <<his>> pocket. <<He>> clips one end of the device to the base of the <<pillory_type>>'s penis,
						and slides the other deep into the prisoner's anus.
						<br>
						The farmer presses a button and with a loud electric crackle, <<the_pillory_person>> yelps, jerks and starts to orgasm continually.
						<br>
						After about 20 seconds of phone browsing the <<person2>><<person>> turns the device off, glances at the glass, and nods.
						<br>
						The crowd are engrossed as the farmer repeats this process several more times, until finally the farmer is walking away with a
						glassful of ejaculate, while <<the_pillory_person>> hangs limp in the pillory, <<his>> face twitching with pain, shame and a strange satiation.
					<</if>>
					<br>
				<<elseif $pillory_tenant.person.gender is "f" and $rng gte 20>>
					A <<person>> in rough farmer clothes approaches the pillory with a glass beaker.
					<br>
					Setting the beaker underneath the <<pillory_type>>'s groin, <<person2>><<he>>
					<<if $pillory_tenant.lowerexposed lte 0>><<if $pillory_tenant.person.pronoun is "f">>hitches up the prisoner's skirt,<<else>>pulls down the prisoner's trousers,<</if>><</if>>
					<<if $pillory_tenant.lowerexposed lte 1>><<set $pillory_tenant.lowerexposed to 2>><<if $pillory_tenant.person.pronoun is "f">> pulls down her panties,<<else>> removes his underpants,<</if>><</if>>
					grabs the prisoner's pussy and starts to rub.
					After a moment's shock, <<the_pillory_person>> pouts and resigns <<himself>> to this debasement. That's when <<he>> feels cold metal shoved up
					<<his>> pussy. A moment later panic crosses <<his>> face as something is clamped to <<his>> clit, and almost instantly waves of electricity hit <<him>>.
					<br>
					The crowd are engrossed as <<the_pillory_person>> writhes in orgasm after shuddering orgasm. The farmer barely pays attention, holding
					the beaker close underneath to catch <<the_pillory_person>>'s fluids, while browsing <<person2>><<his>> phone.
					At last, the farmer turns off and extracts <<his>> machine. <<Hes>> still browsing <<his>> phone as <<he>> walks away with a
					full beaker of fluids.
					<br>
					<<The_pillory_person>> looks mortified, <<his>> face flitting between shock, shame and sexual exhaustion.
				<<else>>
					<<if Time.month > 4 && Time.month < 9 and $rng % 4>>
						<<set _bug to either("bee","wasp","bumblebee")>>
						<<The_pillory_person>> shouts and helplessly wriggles and flaps as a _bug starts to circle <<him>>.
						<br>
						<<if $rng % 3 is 0>>
							A kindly spectator waves the _bug away.
						<<elseif $rng % 3 is 1>>
							The crowd jeer and laugh. Eventually the _bug loses interest and flies away.
						<<else>>
							<<if $pillory_tenant.lowerexposed is 2 and $rng % 2>>
								<<if $pronoun is "m">><<set _part to either("butt","upper leg","inner thigh","dick","balls","hip")>>
								<<else>><<set _part to either("ass","leg","inner thigh","pussy","hip")>>
								<</if>>
							<<elseif $pillory_tenant.upperexposed gte 3 and $pronoun is "f">>
								<<set _part to either("breast","nipple","armpit","ribs","midriff","back")>>
							<<elseif $pillory_tenant.upperexposed gte 2>>
								<<set _part to either("chest","armpit","ribs","belly","back")>>
							<<else>>
								<<set _part to either("arm","shoulder","cheek","leg","waist","wrist","elbow")>>
							<</if>>
							<<He>> <<print either("yells","screams","whines","cries")>> as it lands on <<his>> _part and stings <<him>>.
						<</if>>
					<<else>>
						A furious <<monk>> from the temple scolds the crowd for preying on the morally sick.
						Many people look ashamed and some leave.
						<<set $pillory_tenant.crowd -= 1>>
						<<if $pillory_tenant.upperexposed + $pillory_tenant.lowerexposed gte 1>>
							<<set $pillory_tenant.upperexposed to 0>><<set $pillory_tenant.lowerexposed to 0>>
							The <<monk>> finally restores the <<pillory_type>>'s dignity by replacing <<his>> clothes.
						<</if>>
					<</if>>
				<</if>>
			<<elseif $rng gte 36>> /* 5% */
				A <<person>> throws fruit at the <<pillory_type>>. Unable to move or defend, it hits <<him>> directly in the face.
				It looks painful, especially as <<he>> cannot wipe the acids out of <<his>> eyes.
				<<set $pillory_tenant.fruit += 1>>
			<<elseif $rng gte 26>> /* 10% */
				A <<person>> throws fruit at the <<pillory_type>> but misses completely.
			<<elseif $rng gte 16>> /* 10% */
				A <<person>> walks up to the pillory and _ly fondles the <<pillory_type>>'s <<if $pronoun is "f">>breasts.<<else>>balls.<</if>>
			<<elseif $rng gte 11 and $pillory_tenant.upperexposed lt 3>>/* 5% */
				A <<person>> walks up to the <<pillory_type>> and
				<<if $pillory_tenant.upperexposed is 2>>
					<<if $pronoun is "f">>
					_ly removes <<his>> bra, fully exposing <<his>> $pillory_tenant.person.breastsdesc to a jeering crowd.
					<<else>>
					_ly twists <<his>> nipples.
					<<set $pillory_tenant.spank += 1>>
					<</if>>
				<<elseif $pillory_tenant.upperexposed is 1>>
					<<if $pronoun is "f">>
					fully removes <<his>> top, leaving <<him>> with <<his>> bra exposed to the jeering crowd.
					<<else>>
					fully removes <<his>> top, exposing <<his>> naked $pillory_tenant.person.breastsdesc to the jeering crowd.
					<</if>>
				<<else>>
					<<if $pronoun is "f">>
					lifts <<his>> top, partially exposing <<his>> bra to a jeering crowd.
					<<else>>
					lifts <<his>> top, exposing much of <<his>> chest to the jeering crowd.
					<</if>>
				<</if>><<set $pillory_tenant.upperexposed += 1>>
			<<elseif $rng gte 6 and $pillory_tenant.lowerexposed lt 2>>/* 5% */
				A <<person>> walks up to <<the_pillory_person>> and
				<<if $pillory_tenant.lowerexposed is 1>>
					<<if $pillory_tenant.person.gender is "f">>removes the <<pillory_type>>'s underwear, fully exposing <<his>> ass and pussy to the jeering crowd.
					<<else>>fully removes the <<pillory_type>>'s underwear, exposing <<his>> ass and <<his>> $pillory_tenant.person.penisdesc to the jeering crowd.
					<</if>>
				<<else>>
					<<if $pronoun is "f">>lifts the <<pillory_type>>'s skirt,<<else>>pulls down <<his>> trousers,<</if>> exposing <<his>> underwear to a jeering crowd.
				<</if>><<set $pillory_tenant.lowerexposed += 1>>
			<<else>><<set $pillory_tenant.spank += 1>>/* 5% */
				A <<person>> walks up to the <<pillory_type>> and spanks <<him>> hard on the ass. The thwack echoes across the street.
			<</if>>
		<<else>> /*night*/
			<<if $rng gte 86>> /* 15% chance of jeer and shout only, 85% chance of something active */
				A number of people, led by a <<person>> jeer and shout at the prisoner.
			<<elseif $rng gte 81>> /* 5% */
				A <<person>> throws fruit at the <<pillory_type>>. Unable to move or defend <<himself>>, it hits <<the_pillory_person>> directly in the face. There is a loud cheer.
				It looks painful, especially as <<he>> cannot wipe the acids out of <<his>> eyes.
				<<set $pillory_tenant.fruit += 1>>
			<<elseif $rng gte 76>> /* 5% */
				A <<person>> throws fruit at the <<pillory_type>> but misses completely.
			<<elseif $pillory_tenant.person.pronoun is "f" and $pillory_tenant.upperexposed lt 3>>
				<<set $pillory_tenant.upperexposed to 3>>
				A <<person>> walks up to the helpless <<pillory_type>> and displaces all <<his>> upper clothes, fully baring <<his>> <<if $pronoun is "f">>$pillory_tenant.person.breastsdesc<<else>>chest<</if>> to the crowd.
			<<elseif $pillory_tenant.person.pronoun is "m" and $pillory_tenant.upperexposed lt 2>>
				<<set $pillory_tenant.upperexposed to 2>>
				A <<person>> walks up to the helpless <<pillory_type>> and displaces all <<his>> upper clothes, fully baring <<his>> <<if $pronoun is "f">>$pillory_tenant.person.breastsdesc<<else>>chest<</if>> to the crowd.
			<<elseif $pillory_tenant.lowerexposed lt 2>>
				<<set $pillory_tenant.lowerexposed to 2>>
				A <<person>> walks up to the helpless <<pillory_type>> and displaces all <<his>> lower clothes, fully baring <<his>> <<if $pillory_tenant.person.gender is "f">>pussy<<else>>$pillory_tenant.person.penisdesc<</if>> to the crowd. There is a loud cheer.
			<<elseif $rng gte 66>> /* 10% */
				A <<person>> tries to incite a nearby dog to mount the prisoner's naked backside. It
				<<if $rng % 2>>gives <<the_pillory_person>>'s ass a few tentative sniffs, but
				<</if>>is not interested.
			<<elseif $rng gte 58>> /* 8% */
				<<set $pillory_tenant.spank += 1>>
				A <<person>> sneaks up behind the pillory and _ly slaps the <<pillory_type>>'s exposed <<if $pillory_tenant.person.gender is "f">>cunt.<<else>>balls.<</if>> The crowd jeer and laugh as <<he>> howls in pain.
			<<elseif $rng gte 51>> /* 7% */
				<<set $pillory_tenant.spank += 2>><br>
				Some teacher you've seen around the school but never had classes with, walks drunkenly toward the pillory.
				<<if $pillory_tenant.special.name is "Whitney">>
					<br><<set $pillory_tenant.spank += 1>>
					"Well, hello, Whitney! <<print either("Fancy seeing you here!","Look who it is!","Are you stuck there? How unfortunate!","Isn't this quite the turnaround!?","Such a nice surprise to see you here!")>>" <<he>> slurs, grinning.
					"<<print either("We both know that you've earned this.","We both know how richly you deserve this.","And today's lesson will be about consequences.","Do remember that mean little nickname you made up for me?","Do remember what you did in my class the other day?")>>"
				<<elseif $pillory_tenant.special.name is "Leighton">>
					<br><<set $pillory_tenant.spank += 1>>
					"Well, hello there. Is that you, boss?" <<he>> says, staying out of sight behind the pillory.
					"<<print either("I think it's time for some 'anonymous staff feedback'.","Remember what you said about 'cruel to be kind?'","So I guess it's your turn for some 'frank and honest feedback'?","So is this the 'right forum' to air staff grievances?")>>"
				<<else>><br>
					"Well, hello there," <<he>> slurs, grinning.
					"<<print either("Looks like you've been naughty.","Discipline. So important.","Isn't it a lovely evening? Don't you think? Look at that full moon!")>>"
				<</if>><br>
				<<He>> spanks the <<pillory_type>>'s ass until <<person2>><<his>> arm tires. The crowd jeer and laugh as the <<person1>><<person>> howls in pain.
			<<elseif $rng gte 41>> /* 10% */
				<<set $pillory_tenant.face += 1>>
				A <<person>> walks in front of the pillory and _ly masturbates in front of the <<pillory_type>>.
				<<person2>><<if $pronoun is "m">>Cum soon splatters across <<the_pillory_person>>'s face.
				<<else>><<He>> grinds <<his>> cunt against <<the_pillory_person>>'s<<person2>> face as <<he>> orgasms.
				<</if>> The crowd cheer and laugh.
			<<elseif $rng gte 31>> /* 10% */
				<<set $pillory_tenant.ass += 1>>
				A <<person>> walks behind the pillory and _ly <<if $pronoun is "m">>rapes<<else>>fingers<</if>> the <<pillory_type>>'s asshole. The crowd cheer <<person2>><<him>> on.
			<<elseif $rng gte 21>> /* 10% */
				<<set $pillory_tenant.genital += 1>>
				A <<person>> walks behind the pillory and _ly rapes <<if $pronoun is "m">><<the_pillory_person>>.<<else>><<the_pillory_person>> with a strap-on.<</if>><<person2>> The crowd take pictures and cheer <<him>> on.
			<<elseif $rng gte 11>> /* 10% */
				<<set $pillory_tenant.genital += 1>><<set $pillory_tenant.ass += 1>>
				The crowd watch and photograph as a stray dog rapes <<the_pillory_person>>. A <<person2>><<person>> rewards the dog with a <<print either("biscuit.","pat on the head.","sweet.","cream bun.")>>
				<br>
				The crowd enjoys such a perverted spectacle.
			<<elseif $rng gte 6 and maleChance() gt 0 and (maleChance() lt 100 or $pillory_tenant.person.gender isnot "m")>> /* 5% - with men allowed */
				<<set $pillory_tenant.ass += 1>><<set $pillory_tenant.face += 1>>
				<<if $rng % 3 is 0>>A couple of off-duty policemen approach. They make a <<person>> record as they<<else>>Two men approach. Together they<</if>>
				<<if $pillory_tenant.person.gender is "m">>anally-<<else>>_ly <</if>>spit-roast <<the_pillory_person>>. The crowd enjoys the spectacle.
			<<elseif $rng gte 6 and maleChance() lt 100 and (maleChance() gt 0 or $pillory_tenant.person.gender isnot "f")>> /* 5% - with women allowed */
				<<set $pillory_tenant.ass += 1>><<set $pillory_tenant.face += 1>>
				<<if $rng % 3 is 0>>A couple of off-duty policewomen approach. They make a <<person>> record as they<<else>>Two women approach. Together they<</if>>
				<<if $pillory_tenant.person.gender is "m">>anally-<<else>>_ly <</if>>spit-roast <<the_pillory_person>> with strap-ons. The crowd enjoys the spectacle.
			<<else>> /* 5% */
				<<set $pillory_tenant.spank += 1>>
				A <<person>> walks up to the <<pillory_type>> and spanks <<him>> hard on the ass. The thwack echoes across the street.
			<</if>>
		<</if>>
	<<else>>/* already abused this hour - no action, don't want spamming this scene to accelerate things ridiculously */
		The people around <<print either("jeer at","laugh at","point at","shout abuse at","taunt","mock","leer at")>>
		<<if Time.schoolDay and ((Time.hour gte 7 and Time.hour lte 8) or Time.hour is 15) and $rng lte 34>>
			the <<pillory_type>>. A group of students from the nearby school pass by, gaping at
			<<if $pillory_tenant.lowerexposed gte 2 or $pillory_tenant.upperexposed gte 3>>the lewdly exposed prisoner.
				<<if $rng % 3 is 0>>
				An outraged bystander runs up to the pillory and replaces the <<pillory_type>>'s clothes.
				<<set $pillory_tenant.lowerexposed to 0>><<set $pillory_tenant.upperexposed to 0>><</if>>
			<<else>>the prisoner.
			<</if>>
		<<elseif Time.dayState isnot "night">>
			<<if $rng lte 80>>
				the <<pillory_type>> and <<print either("mutter among themselves.","take photos.","amuse themselves.")>>
			<<elseif $rng lte 93>>
				the <<pillory_type>>. Some get bored and leave.
				<<set $pillory_tenant.crowd -= 1>>
			<<else>>
				the <<pillory_type>>. A bus drops some people off nearby. A few join the crowd around the pillory.
				<<set $pillory_tenant.crowd += 1>>
			<</if>>
		<<else>>
			<<if $rng lte 67>>
				<<if $pillory_tenant.lowerexposed gte 2 and $rng % 4 is 0>>the <<pillory_type>> and take selfies posing around <<his>> exposed, naked ass.
				<<else>>the <<pillory_type>> and <<print either("mutter darkly.","drink.","throw empty beer cans.","make sinister threats.","take selfies with the prisoner.","tell dirty jokes.")>>
				<</if>>
			<<elseif $rng lte 85>>
				the <<pillory_type>>. Some get tired and leave.
				<<set $pillory_tenant.crowd -= 1>>
			<<else>>
				the <<pillory_type>>. A few people passing by join the crowd around the pillory.
				<<set $pillory_tenant.crowd += 1>>
			<</if>>
		<</if>>
	<</if>>
	<<if $pillory_tenant.upperexposed gte 3>><<if $pillory_tenant.person.gender is "f" or $pillory_tenant.person.pronoun is "f">><<set $pillory_tenant.upperexposed to 3>><<else>><<set $pillory_tenant.upperexposed to 2>><</if>><</if>>
	<<if $pillory_tenant.lowerexposed gt 2>><<set $pillory_tenant.lowerexposed to 2>><</if>>
<</widget>>

<<widget "npc_pillory_release_schedule">>
	<<get_pillory_npc>>
	<br>
	<<if Time.days is $pillory_tenant.endday>>
	<<set _a_few to ($pillory_tenant.endhour - Time.hour)>>
		<<He>> will be released
		<<if _a_few gt 0>>in _a_few hours.
		<<else>>imminently.
		<</if>>
	<<else>>
		<<set _days_left to ($pillory_tenant.endday - Time.days)>>
		<<He>> is scheduled for release <<if _days_left is 1>>tomorrow<<else>>in two days<</if>> at
		<<switch $pillory_tenant.endhour>>
			<<case 0>>midnight.
			<<case 12>>noon.
			<<default>><<ampm $pillory_tenant.endhour>>.
		<</switch>>
	<</if>>
	<<endevent>>
<</widget>>

<<widget "end_npc_pillory">>
	<<get_pillory_npc>>
	<<if Time.minute lte 15>>
		A police officer <<print either("is releasing","has just released","is struggling to release","is about to release")>>
		<<the_pillory_person>> from the pillory. <<if $weather is "rain">><<His>> clothes are see-through from the rain.<<elseif $weather is "snow">><<He>> shivers in the cold.<</if>>
	<<elseif Time.minute lte 30>>
		<<The_pillory_person>> staggers away from the pillory with <<print either("tears","defiance","signs of trauma","fury")>> in <<his>> eyes.
		<<if $weather is "rain">><<His>> clothes are see-through from the rain.<</if>>
	<<else>>
		<<The_pillory_person>> was released and has left. A couple of civil servants clean the pillory.
	<</if>>
	<<set $rng += $pillory_tenant.duration>>
	<<if $rng gte 67 or $rng gte 33 and $weather is "rain">>A large crowd jeers and shouts.<</if>>
	<br><br>
	<<clear_pillory>>
	<<endevent>>
<</widget>>

<<widget "clear_pillory">>
	<<if $pillory_tenant and $pillory_tenant.special.name is "Whitney">>
		<<set C.npc.Whitney.state to "active">>
	<</if>>
	<<setup_pillory>>
<</widget>>

<<widget "drench">>
	<!-- Drench PC in lewd liquid(s). First arguments set filth type: semen(default), goo, nectar or multiple. Last argument sets level 1-5 (default 1). Body interiors will be ignored if "outside" is specified as any of the arguments. -->
	<!-- valid examples: <<drench>> <<drench goo nectar 3 outside>><<drench outside 2>> -->
	<!-- invalid example: <<drench 3 semen>> -->
	<<set $_outside to _args.includes("outside") ? "outside" : "all">>
	<!-- "outside" can appear as the last argument, if so - delete it so the $_amount will be properly detected -->
	<<run _args.delete("outside")>>
	<<set $_amount to Number.isInteger(_args.last()) ? Math.clamp(_args.last(), 1, 5) : 1>>
	<<set $_goo to _args.includesAny("goo", "slime", "liquid") ? "goo" : "">>
	<<set $_nectar to _args.includes("nectar") ? "nectar" : "">>
	<<set $_semen to (_args.includesAny("semen","cum") || ($_goo + $_nectar).length === 0) ? "semen" : "">>
	<<set $hygiene to 3000>>
	<<bodyliquid $_outside $_semen $_goo $_nectar $_amount>>
<</widget>>

<<widget "awarenessup">>
	<<set _awareness to _args[1]>>
	<<if $awareness gte _args[0]>>
		<span class="pink">It's nothing you weren't aware of.</span>
	<<else>>
		<<gawareness>><<awareness _awareness>>
	<</if>>
<</widget>>

<<widget "linkradiogroup">>
	<<set _receiver_name to _args[0]>>
	<<set _options to _args[1]>>
	<<set _set_value to State.getVar(_receiver_name)>>

	<span class="no-numberify">
		<<for _label, _value range _options>>
			<<capture _receiver_name, _value>>
				<span @class="(_set_value is _value ? 'goldLink' : '')">
					<<link _label>>
						<<run State.setVar(_receiver_name, _value)>>
						<<run Engine.show()>> <!-- refresh the page without leaving it -->
					<</link>>
				</span>
			<</capture>>
			|
		<</for>>
	</span>
<</widget>>

<<widget "deskText">>
<<if $studyBooks is undefined>>
	<<set $studyBooks to {}>>
	<<set $studyBooks.rented to "none">>
	<<set $studyBooks.stolen to "none">>
<</if>>
<<set _desk to Furniture.get('desk')>>
<<set _chair to Furniture.get('chair')>>
<<set _projectOptions to [$scienceproject, $mathsproject].includes("ongoing")>>
<<set _bookOptions to ($studyBooks.stolen is 'Raul and Janet' or $studyBooks.rented is 'Raul and Janet' or $studyBooks.stolen is 'Pinch' or $studyBooks.rented is 'Pinch')>>
<<set _wardrobe to Furniture.get('wardrobe')>>
<<set _playOptions to ($englishPlay is 'ongoing' and $englishPlayRoles.Player isnot 'none')>>

<<if _projectOptions || _playOptions || _bookOptions || ($christmas_wrap is 1 && $christmas_gift_robin_wrapped isnot 1) || ($christmas_wrap is 1 && $christmas_gift is "clothes_unwrapped")>>
	<<if _args[0] is "noicon">>
		Your _desk.name and <<if _chair.name isnot "chair">>_chair.article <</if>>_chair.nameSolo are wedged next to your wardrobe.
		<br>
		<<projectoptions>>
		<<homeStudyOptions>>
		<<christmas_options>>
		<br>
	<</if>>
<<else>>
	<<if _args[0] is "icon">>
		<br>
		<<deskchairicon>>Your _desk.name and <<if _chair.name isnot "chair">>_chair.article <</if>>_chair.nameSolo are wedged next to your wardrobe.
	<</if>>
<</if>>
<</widget>>


<<widget "tableText">>
<<set _table to Furniture.get('table')>>
<<set _chair to Furniture.get('chair')>>
<<if $pregnancyStats.parasiteDoctorEvents gte 2>>
	<<if _args[0] is "noicon">>
		<<if _table>>
			<br>
			Your _table.name <<if _chair and _chair.name isnot "chair">>and one of your _chair.name are <<else>>is <</if>> situated next to a wall.
			<br>
		<<elseif _chair and _chair.name isnot "chair">>
			<br>
			One of your _chair.name is situated next to a wall.
			<br>
		<<else>>
			<br>
			Your fish tank sits on the floor.
			<br>
		<</if>>
		<<fishtankicon>><<containersLink>>
	<</if>>
<<else>>
	<<if _args[0] is "icon">>
		<<if _table>>
			<br>
			<<bedroomtablechairicon>> Your _table.name <<if _chair and _chair.name isnot "chair">>and another _chair.nameSolo are <<else>>is <</if>> situated next to a wall.
		<<elseif _chair and _chair.name isnot "chair">>
			<br>
			<<bedroomtablechairicon>> A second _chair.nameSolo is situated next to a wall.
		<</if>>
	<</if>>
<</if>>
<</widget>>

<<widget "radiogroup">>
	<<set _receiver_name to _args[0]>>
	<<set _possible_values_by_label to _args[1]>>
	<<set _set_value to State.getVar(_receiver_name)>>

	<<for _label, _value range _possible_values_by_label>>
		<label>
		<<if _set_value is _value>>
			<<radiobutton _receiver_name _value checked>>
		<<else>>
			<<radiobutton _receiver_name _value>>
		<</if>>
		_label
		</label>
	<</for>>
<</widget>>

<<widget "settextcolorfromfemininity">>
	<<if _args[0] gt 0>>
		<<set _text_color to "pink">>
	<<elseif _args[0] lt 0>>
		<<set _text_color to "lblue">>
	<<else>>
		<<set _text_color to "">>
	<</if>>
<</widget>>

<<widget "settextcolorfromgender">>
	<<if _args[0] is "f">>
		<<set _text_color to "pink">>
	<<elseif _args[0] is "m">>
		<<set _text_color to "lblue">>
	<<else>>
		<<set _text_color to "">>
	<</if>>
<</widget>>

<<widget "cheatStart">>
	<<set $cheatdisable to "f">><<set $money to 500000>>
	<<set $rentmoney to 10000>><<rentmod>>
	<<set $renttime to 7>><<set $rentday to Time.weekDay>>
	<<set $rentstage to 1>>
<</widget>>

<<widget "swim_check">>
	<<if ($worn.upper.type.includes("naked") or $worn.upper.type.includes("swim")) and
	($worn.lower.type.includes("naked") or $worn.lower.type.includes("swim")) and
	($worn.under_upper.type.includes("naked") or $worn.under_upper.type.includes("swim")) and
	($worn.under_lower.type.includes("naked") or $worn.under_lower.type.includes("swim"))>>
		<<set _swim_check to 1>>
	<</if>>
<</widget>>

<<widget "skulduggeryuse">>
	<<if _args[0] is true>>
		<!-- This argument lets us use skulduggery without adding extra linebreaks that make formatting things a nightmare. -->
		<<if $skulduggery lte ($skulduggerydifficulty + 100)>>
			<<combatskulduggeryskilluse>>
		<<else>>
			<span class="blue">That was too easy. You didn't learn anything.</span>
		<</if>>
	<<else>>
		<<if $skulduggery lte ($skulduggerydifficulty + 100)>>
			<<skulduggeryskilluse>>
		<<else>>
			<span class="blue">That was too easy. You didn't learn anything.</span>
			<br><br>
		<</if>>
	<</if>>
<</widget>>

<<widget "wetness_init">>
	<<if $objectVersion.vaginaWetness lt 3 or $objectVersion.vaginaWetness is undefined>>
		<<set $vaginaWetness to 0>>
		<<set $trackedArousal to [0]>>
		<<set $masturbation_vaginaFluid to 0>>
		<<set $vaginaArousalWetness to 0>>
		<<set $timeSinceArousal to 0>>

		<<set $objectVersion.vaginaWetness to 3>>
	<</if>>
<</widget>>

<<widget "hand_gag">>/*First arg the NPC index. Second arg the hand used.*/
	<<if !$worn.face.type.includes("gag") and _args[0] isnot undefined>>
		<<if _args[1] is "left">>
			<<set $mouthuse to "lefthand">><<set $NPCList[_args[0]].lefthand to "mouth">>
		<<else>>
			<<set $mouthuse to "righthand">><<set $NPCList[_args[0]].righthand to "mouth">>
		<</if>>
	<</if>>
<</widget>>

<<widget "prop">>
	<<for _i = 0; _i < _args.length; _i++>>
		<<set $prop.push(_args[_i])>>
	<</for>>
<</widget>>

<<widget "schoolrep">>
	<<if _args[0] and _args[1] and (!$worn.face.type.includes("mask") or _args[1] lt 0)>>
		<<if $schoolrep[_args[0]] lt 5 or _args[1] lt 0>>
			<<if _args[0] is "crossdress" and ($daily.school.crossdress is undefined or _args[1] lt 0)>>
				<<set $daily.school.crossdress to 1>>
				<<set $schoolrep[_args[0]] += _args[1]>>
				<<if $schoolrep.crossdress gte 5>>
					<<set $genderknown.pushUnique("Kylar")>>
					<<set $genderknown.pushUnique("Whitney")>>
					<<set $genderknown.pushUnique("Sydney")>>
					<<set $genderknown.pushUnique("Sirris")>>
					<<set $genderknown.pushUnique("River")>>
					<<set $genderknown.pushUnique("Doren")>>
					<<set $genderknown.pushUnique("Winter")>>
					<<set $genderknown.pushUnique("Mason")>>
					<<set $genderknown.pushUnique("Leighton")>>
					<<set $school_crossdress_message to 5>>
				<<elseif $schoolrep.crossdress gte 1 and _args[1] gte 1>>
					<<set $school_crossdress_message to $schoolrep.crossdress>>
				<</if>>
				<<set $schoolrep.crossdress to Math.clamp($schoolrep.crossdress, 0, 5)>>
				<<if _args[1] gt 0>><<set $weekly.crossdressingFameReduction to true>><</if>>
				<<set $schoolrep.herm to 0>> /* Reset for females that lose a "penis" */
			<<elseif _args[0] is "herm" and ($daily.school.herm is undefined or _args[1] lt 0)>>
				<<set $daily.school.herm to 1>>
				<<set $schoolrep[_args[0]] += _args[1]>>
				<<if $schoolrep.herm gte 5>>
					<<set $genderknown.pushUnique("Kylar")>>
					<<set $genderknown.pushUnique("Whitney")>>
					<<set $genderknown.pushUnique("Sydney")>>
					<<set $genderknown.pushUnique("Sirris")>>
					<<set $genderknown.pushUnique("River")>>
					<<set $genderknown.pushUnique("Doren")>>
					<<set $genderknown.pushUnique("Winter")>>
					<<set $genderknown.pushUnique("Mason")>>
					<<set $genderknown.pushUnique("Leighton")>>
					<<set $school_herm_message to 5>>
				<<elseif $schoolrep.herm gte 1 and _args[1] gte 1>>
					<<set $school_herm_message to $schoolrep.herm>>
				<</if>>
				<<set $schoolrep.herm to Math.clamp($schoolrep.herm, 0, 5)>>
				<<set $schoolrep.crossdress to 0>> /* Reset for females that gain a "penis" */
			<</if>>
		<</if>>
	<</if>>
<</widget>>

<<widget "schoolrep_naked">>
	<<if !playerChastity("hidden")>>
		<<if $player.penisExist and $player.vaginaExist>>
			<<schoolrep herm 1>>
		<<elseif $player.gender isnot $player.gender_appearance>>
			<<schoolrep crossdress 1>>
		<<elseif $player.gender is $player.gender_appearance and $schoolrep.crossdress gt 0 and !$daily.crossdressingFameReduction and !$weekly.crossdressingFameReduction and random(0,100) gte 100 - ($schoolrep.crossdress * 3)>>
			<<schoolrep crossdress -1>>
			<<set $daily.crossdressingFameReduction to true>>
		<</if>>
	<</if>>
<</widget>>

<<widget "event_trigger">>
	<<set $danger to random(1, 10000)>>
	<<if $danger gte (9900 - $allure)>>
		<<set $event_trigger to 1>>
	<</if>>
<</widget>>

<<widget "combat_lewdity_text">>
	<<combat_promiscuity_text>>
	<<combat_deviancy_text>>
<</widget>>

<<widget "adjust_school_traits">>
	<<if $science gte 1000>>
		<<set $sciencetrait to 4>>
	<<elseif $science gte 700>>
		<<set $sciencetrait to 3>>
	<<elseif $science gte 400>>
		<<set $sciencetrait to 2>>
	<<elseif $science gte 200>>
		<<set $sciencetrait to 1>>
	<<else>>
		<<set $sciencetrait to 0>>
	<</if>>
	<<if $maths gte 1000>>
		<<set $mathstrait to 4>>
	<<elseif $maths gte 700>>
		<<set $mathstrait to 3>>
	<<elseif $maths gte 400>>
		<<set $mathstrait to 2>>
	<<elseif $maths gte 200>>
		<<set $mathstrait to 1>>
	<<else>>
		<<set $mathstrait to 0>>
	<</if>>
	<<if $english gte 1000>>
		<<set $englishtrait to 4>>
	<<elseif $english gte 700>>
		<<set $englishtrait to 3>>
	<<elseif $english gte 400>>
		<<set $englishtrait to 2>>
	<<elseif $english gte 200>>
		<<set $englishtrait to 1>>
	<<else>>
		<<set $englishtrait to 0>>
	<</if>>
	<<if $history gte 1000>>
		<<set $historytrait to 4>>
	<<elseif $history gte 700>>
		<<set $historytrait to 3>>
	<<elseif $history gte 400>>
		<<set $historytrait to 2>>
	<<elseif $history gte 200>>
		<<set $historytrait to 1>>
	<<else>>
		<<set $historytrait to 0>>
	<</if>>
	<<set $english to Math.clamp($english, 0, 1000)>>
	<<set $maths to Math.clamp($maths, 0, 1000)>>
	<<set $science to Math.clamp($science, 0, 1000)>>
	<<set $history to Math.clamp($history, 0, 1000)>>
<</widget>>

/*
	Argument 1 is base amount. You can also use decimals.
	Argument 2 is variation.
	Argument 3 is crime.
	<<moneyGain 1>> will give £1.00 which is not stolen.
	<<moneyGain 1 false false>> will give £1.00 which is not stolen.
	<<moneyGain 1 true>> will give between £0.80 and £1.20 which is not stolen.
	<<moneyGain 1 true true>> will give between £0.80 and £1.20 which is stolen, and can scale further with skulduggery.
	<<moneyGain 1 false true>> will give £1.00 which is stolen, and can scale with skulduggery.
*/
<<widget "moneyGain">><<silently>>
	<<if _args[0]>>
		<<set _base_amount to _args[0] * 100>>
	<<else>>
		<<set _base_amount to 100>>
	<</if>>
	<<if _args[1]>>
		<<set _variation to Math.floor(random(Math.floor(_base_amount / 5 * -1), Math.floor(_base_amount / 5)))>>
	<<else>>
		<<set _variation to 0>>
	<</if>>
	<<if _args[2]>>
		<<set _skulduggeryMulti to (1 + (currentSkillValue('skulduggery') / 2000))>>
	<<else>>
		<<set _skulduggeryMulti to 1>>
	<</if>>
	<<set _money_gain to Math.floor((_base_amount + _variation) * _skulduggeryMulti)>>
	<<if _args[2]>>
		<<crimeUp `_money_gain / 100` "thievery">>
	<</if>>
	<<set $money += _money_gain>>
<</silently>><<printmoney _money_gain>><</widget>>

/*
	Used like above, but only shows the money amount, doesn't add money or crime.
	Use <<crimeUp `_money_gain / 100`>> and <<set $money += _money_gain>> where necessary in links, etc.
*/
<<widget "moneyGainDisplay">><<silently>>
	<<if _args[0]>>
		<<set _base_amount to _args[0] * 100>>
	<<else>>
		<<set _base_amount to 100>>
	<</if>>
	<<if _args[1]>>
		<<set _variation to Math.floor(random(Math.floor(_base_amount / 5 * -1), Math.floor(_base_amount / 5)))>>
	<<else>>
		<<set _variation to 0>>
	<</if>>
	<<if _args[2]>>
		<<set _skulduggeryMulti to (1 + (currentSkillValue('skulduggery') / 2000))>>
	<<else>>
		<<set _skulduggeryMulti to 1>>
	<</if>>
	<<set _money_gain to Math.floor((_base_amount + _variation) * _skulduggeryMulti)>>
<</silently>><<printmoney _money_gain>><</widget>>

<<widget "formatmoney">>
	<<set _printargs to Math.floor(Math.abs(_args[0]/100)).toLocaleString("en-GB")>>
	<<set _printargs to _printargs + (_args[0] % 100 ? "." + ("0" + Math.floor(Math.abs(_args[0] % 100))).slice(-2) : "")>>
	<<set _printmoney to (_args[0] gte 0 ? "" : "-") + "£" + _printargs>>
<</widget>>

<<widget "printmoney">><<silently>><!-- (amount in pennies, highlight toggle) -->
	<<if _args.length gt 2 or typeof(_args[0]) isnot "number">><!-- sanity checks -->
		<<set _printmoney to '<span class="red">printmoney error: invalid arguments: _args</span>'>>
	<<else>>
		<<formatmoney _args[0]>>
	<</if>>
	<<set _text_output to `<span @class='_args[1]?_args[1]:"gold"'>` + _printmoney + '</span>'>>
<</silently>><<print _text_output>><</widget>>

<<widget "sadism">>
	<<if _args[0]>>
		<<set $sadism += _args[0]>>
		<<set $sadism to Math.clamp($sadism, 0, 1000)>>
	<</if>>
<</widget>>

<<widget "masochism">>
	<<if _args[0]>>
		<<set $masochism += _args[0]>>
		<<set $masochism to Math.clamp($masochism, 0, 1000)>>
	<</if>>
<</widget>>

<<widget "enable_rescue">>
	<<set $rescue to 1>>
<</widget>>

<<widget "hypnotised">>
	<<if _args[0]>>
		<<set $hypnotised += _args[0]>>
	<</if>>
<</widget>>

/* 北极星模组 */
<!-- 解锁全部植物种子 -->
<<widget "unlockplants">>
	<<set _plant_keys to Object.keys(setup.plants)>>
	<<for _i to 0; _i lt _plant_keys.length; _i++>>
	    <<if setup.plants[_plant_keys[_i]].type is "flower" or setup.plants[_plant_keys[_i]].type is "vegetable">>
		    <<set $plants_known.pushUnique(setup.plants[_plant_keys[_i]].name)>>
		<</if>>
	<</for>>
<</widget>>
/* 北极星 */

<<widget "giftSexToys">>
	<!-- _args[0] is the named NPC. -->
	<!-- Currently only works for strap-ons. Will need a refactor when other toy scenes are written. -->
	<<run window.handSextoysGiftToNPC(_args[0])>>
	<<set _strapons to checkIfNPCHasCategorySextoy(_args[0],"strap-on")>>
	<<if _strapons.length > 0>>
		<<for _i = 0; _i lt _strapons.length; _i++>>
			<<if _strapons[_i].shape is undefined>>
				<<set _strapons[_i].shape to "dildo">>
			<</if>>
			<<if _strapons[_i].prefixdescriptor is undefined>>
				<<set _strapons[_i].prefixdescriptor to "">>
			<</if>>
			<<generateNewStrapon _strapons[_i].size _strapons[_i].colour _strapons[_i].shape>>
			<<giveNNPCnewstrapon _args[0]>>
		<</for>>
	<</if>>
<</widget>>

<<widget "bodyliquid">><<silently>>
	<!-- first argument is either bodypart, all, outside, inside, or clear (required) -->
	<!-- second and later arguments are liquid types (semen, goo, nectar, or all; at least one required) -->
	<!-- last argument is optional and if numeric - specifies the amount (default: 1) -->

	<!-- process first argument and delete it so <<bodyliquid all all>> will work as expected -->
	<<set $_bodypart to _args[0]>>
	<<run _args.deleteAt(0)>>
	<<set $_clear to $_bodypart is "clear">>
	<<switch $_bodypart>>
		<<case "all" "clear">>
			<!-- use clone() to make sure we're not modifying setup -->
			<<set $_bodypart to clone(setup.bodyliquid.bodyparts)>>
		<<case "outside">>
			<<set $_bodypart to clone(setup.bodyliquid.bodyparts)>>
			<<run $_bodypart.delete(setup.bodyliquid.innerbodyparts)>>
		<<case "inside">>
			<<set $_bodypart to clone(setup.bodyliquid.innerbodyparts)>>
		<<default>>
			<<if setup.bodyliquid.bodyparts.includes($_bodypart)>>
				<<set $_bodypart to [$_bodypart]>>
			<<else>>
				<<set $_fail to true>>
			<</if>>
		<!--/case -->
	<</switch>>
	<<if !$_fail>>
		<<if !V.player.penisExist>>
			<<run $_bodypart.delete("penis")>>
		<</if>>
		<<if !V.player.vaginaExist>>
			<<run $_bodypart.delete("vagina", "vaginaoutside")>>
		<</if>>
		<<if $_bodypart.length is 0 and $options.debugdisable is "f">>
			<<run console.log(Utils.GetStack(), "- attempt to slap bodyliquid on nonexistent genitals failed successfully")>>
		<</if>>
	<</if>>

	<!-- select which liquids to modify, fail if none -->
	<<if $_clear or _args.includes("all")>>
		<<set $_liquids to clone(setup.bodyliquid.liquidtype)>>
	<<else>>
		<<set $_liquids to []>>
		<<if _args.includesAny("goo", "slime", "fluid")>>
			<!-- "slime" alternative because slime is a common descriptor -->
			<!-- "fluid" alternative for <<tentacleadv>> -->
			<<set $_liquids.push("goo")>>
		<</if>>
		<<if _args.includes("nectar")>>
			<<set $_liquids.push("nectar")>>
		<</if>>
	<</if>>
	<<if _args.includesAny("cum", "semen")>>
		<!-- "cum" alternative because cum is a common descriptor -->
		<<set $_liquids.push("semen")>>
	<</if>>
	 <<if $_liquids.length is 0>>
		<<set $_fail to true>>
	 <</if>>

	<!-- process The Final Argument, if integer - assume amount, else default to 1 -->
	<<if $_clear>>
		<<set $_amount to -10>>
	<<elseif Number.isInteger(_args.last())>>
		<<set $_amount to _args.last()>>
	<<else>>
		<<set $_amount to 1>>
	<</if>>

	<<if $_fail is true>>
	<<else>>
		<<for $_part range $_bodypart>>
			<<for $_type range $_liquids>>
				<<set $player.bodyliquid[$_part][$_type] to Math.clamp($player.bodyliquid[$_part][$_type] + $_amount, 0, 5)>>
			<</for>>
		<</for>>
	<</if>>
	<</silently>>
	<<if $options.debugdisable is "f" and $_fail is true>>
		<<error {
			message	: `bodyliquid widget on ${Utils.GetStack()} failed, please report`,
			source	: `Arguments: ${$_bodypart} | ${_args[0]} | ${_args[1]} | ${_args[2]} | ${_args[3]}.`
		}>>
	<</if>>
<</widget>>


<<widget "semenswallowedstat">>
	<<if $statFreeze isnot true and $args[0] isnot undefined>>
		<<set $semenswallowedstat += $args[0]>>
	<</if>>
<</widget>>

<<widget "animalsemenswallowedstat">>
	<<if $statFreeze isnot true and $args[0] isnot undefined>>
		<<set $animalsemenswallowedstat += $args[0]>>
	<</if>>
<</widget>>

/* 北极星模组 */
<<widget "clearcheeks">>
	<<set $transformationParts.wolf.cheeks = "disabled">>
	<<set $transformationParts.fox.cheeks = "disabled">>
	<<set $transformationParts.raccoon.mask ="disabled">>
	<<set $transformationParts.frog.cheeks ="disabled">>
<</widget>>

<<widget "clearhalo">>
	<<set $transformationParts.angel.halo = "disabled">>
	<<set $transformationParts.fallenAngel.halo = "disabled">>
<</widget>>

<<widget "clearears">>
	<<set $transformationParts.cat.ears = "disabled">>
	<<set $transformationParts.cow.ears = "disabled">>
	<<set $transformationParts.wolf.ears = "disabled">>
	<<set $transformationParts.fox.ears = "disabled">>
	<<set $transformationParts.bee.ears = "disabled">>
	<<set $transformationParts.sheep.ears = "disabled">>
	<<set $transformationParts.deer.ears = "disabled">>
	<<set $transformationParts.bear.ears = "disabled">>
	<<set $transformationParts.dog.ears = "disabled">>
	<<set $transformationParts.raccoon.ears = "disabled">>
	<<set $transformationParts.fish.fins = "disabled">>
	<<set $transformationParts.horse.ears = "disabled">>
	<<set $transformationParts.pig.ears = "disabled">>
<</widget>>

<<widget "cleareyes">>
	<<set $transformationParts.bird.eyes = "disabled">>
	<<set $transformationParts.dragon.eyes = "disabled">>
	<<set $transformationParts.lizard.eyes = "disabled">>
	<<set $transformationParts.spider.eyes = "disabled">>
	<<set $transformationParts.frog.eyes = "disabled">>
<</widget>>

<<widget "clearhorns">>
	<<set $transformationParts.demon.horns = "disabled">>
	<<set $transformationParts.cow.horns = "disabled">>
	<<set $transformationParts.sheep.horns = "disabled">>
	<<set $transformationParts.deer.horns = "disabled">>
	<<set $transformationParts.dragon.horns = "disabled">>
<</widget>>

<<widget "cleartail">>
	<<set $transformationParts.demon.tail = "disabled">>
	<<set $transformationParts.cat.tail = "disabled">>
	<<set $transformationParts.cow.tail = "disabled">>
	<<set $transformationParts.wolf.tail = "disabled">>
	<<set $transformationParts.bird.tail = "disabled">>
	<<set $transformationParts.fox.tail = "disabled">>
	<<set $transformationParts.bee.tail = "disabled">>
	<<set $transformationParts.sheep.tail = "disabled">>
	<<set $transformationParts.deer.tail = "disabled">>
	<<set $transformationParts.bear.tail = "disabled">>
	<<set $transformationParts.dragon.tail = "disabled">>
	<<set $transformationParts.lizard.tail = "disabled">>
	<<set $transformationParts.dolphin.tail = "disabled">>
	<<set $transformationParts.dog.tail = "disabled">>
	<<set $transformationParts.raccoon.tail = "disabled">>
	<<set $transformationParts.fish.tail = "disabled">>
	<<set $transformationParts.horse.tail = "disabled">>
	<<set $transformationParts.spider.tail = "disabled">>
	<<set $transformationParts.pig.tail = "disabled">>
	<<set $hastail to "false">>
	<<set $swimtail to "false">>
	<<set $thicktail to "false">>
<</widget>>

<<widget "clearwings">>
	<<set $transformationParts.angel.wings = "disabled">>
	<<set $transformationParts.demon.wings = "disabled">>
	<<set $transformationParts.fallenAngel.wings = "disabled">>
	<<set $transformationParts.bird.wings = "disabled">>
	<<set $transformationParts.bee.wings = "disabled">>
	<<set $transformationParts.dragon.wings = "disabled">>
<</widget>>

<<widget "farmincrcheat">>
	<<if $farm_stage_cheat is 1>>
		<<set $farm_stage_cheat to 2>>
		<<set $farm_stage to 4>>
	<<elseif $farm_stage_cheat is 2>>
		<<set $farm_stage_cheat to 3>>
		<<set $farm_stage to 5>>
	<<elseif $farm_stage_cheat is 3>>
		<<set $farm_stage_cheat to 4>>
		<<set $farm_stage to 6>>
	<<elseif $farm_stage_cheat is 4>>
		<<set $farm_attack_timer to 30>>
		<<fields_init>>
		<<set $farm_fields_intro to 1>>
		<<farm_stock_init>>
		<<set $farm_stage_cheat to 5>>
		<<set $farm_stage to 8>>
		<<add_plot farm earth 3 large>>
	<<elseif $farm_stage_cheat gte 5 and $farm_stage_cheat lte 8>>
		<<set $farm_stage_cheat += 1>>
		<<set $farm_stage += 1>>
		<<add_plot farm earth 3 large>>
	<</if>>
<</widget>>

<<widget "farmcheatsync">>
	<<if $farm_stage gte 8>>
		<<set $farm_stage_cheat to $farm_stage - 3>>
	<<elseif $farm_stage gte 6>>
		<<set $farm_stage_cheat to 4>>
	<<elseif $farm_stage gte 5>>
		<<set $farm_stage_cheat to 3>>
	<<elseif $farm_stage gte 4>>
		<<set $farm_stage_cheat to 2>>
	<<elseif $farm_stage gte 2>>
		<<set $farm_stage_cheat to 1>>
	<</if>>
<</widget>>
/* 北极星 */